
final.elf:     file format elf32-littlearm


Disassembly of section .text:

080000c0 <__udivsi3>:
 80000c0:	2200      	movs	r2, #0
 80000c2:	0843      	lsrs	r3, r0, #1
 80000c4:	428b      	cmp	r3, r1
 80000c6:	d374      	bcc.n	80001b2 <__udivsi3+0xf2>
 80000c8:	0903      	lsrs	r3, r0, #4
 80000ca:	428b      	cmp	r3, r1
 80000cc:	d35f      	bcc.n	800018e <__udivsi3+0xce>
 80000ce:	0a03      	lsrs	r3, r0, #8
 80000d0:	428b      	cmp	r3, r1
 80000d2:	d344      	bcc.n	800015e <__udivsi3+0x9e>
 80000d4:	0b03      	lsrs	r3, r0, #12
 80000d6:	428b      	cmp	r3, r1
 80000d8:	d328      	bcc.n	800012c <__udivsi3+0x6c>
 80000da:	0c03      	lsrs	r3, r0, #16
 80000dc:	428b      	cmp	r3, r1
 80000de:	d30d      	bcc.n	80000fc <__udivsi3+0x3c>
 80000e0:	22ff      	movs	r2, #255	; 0xff
 80000e2:	0209      	lsls	r1, r1, #8
 80000e4:	ba12      	rev	r2, r2
 80000e6:	0c03      	lsrs	r3, r0, #16
 80000e8:	428b      	cmp	r3, r1
 80000ea:	d302      	bcc.n	80000f2 <__udivsi3+0x32>
 80000ec:	1212      	asrs	r2, r2, #8
 80000ee:	0209      	lsls	r1, r1, #8
 80000f0:	d065      	beq.n	80001be <__udivsi3+0xfe>
 80000f2:	0b03      	lsrs	r3, r0, #12
 80000f4:	428b      	cmp	r3, r1
 80000f6:	d319      	bcc.n	800012c <__udivsi3+0x6c>
 80000f8:	e000      	b.n	80000fc <__udivsi3+0x3c>
 80000fa:	0a09      	lsrs	r1, r1, #8
 80000fc:	0bc3      	lsrs	r3, r0, #15
 80000fe:	428b      	cmp	r3, r1
 8000100:	d301      	bcc.n	8000106 <__udivsi3+0x46>
 8000102:	03cb      	lsls	r3, r1, #15
 8000104:	1ac0      	subs	r0, r0, r3
 8000106:	4152      	adcs	r2, r2
 8000108:	0b83      	lsrs	r3, r0, #14
 800010a:	428b      	cmp	r3, r1
 800010c:	d301      	bcc.n	8000112 <__udivsi3+0x52>
 800010e:	038b      	lsls	r3, r1, #14
 8000110:	1ac0      	subs	r0, r0, r3
 8000112:	4152      	adcs	r2, r2
 8000114:	0b43      	lsrs	r3, r0, #13
 8000116:	428b      	cmp	r3, r1
 8000118:	d301      	bcc.n	800011e <__udivsi3+0x5e>
 800011a:	034b      	lsls	r3, r1, #13
 800011c:	1ac0      	subs	r0, r0, r3
 800011e:	4152      	adcs	r2, r2
 8000120:	0b03      	lsrs	r3, r0, #12
 8000122:	428b      	cmp	r3, r1
 8000124:	d301      	bcc.n	800012a <__udivsi3+0x6a>
 8000126:	030b      	lsls	r3, r1, #12
 8000128:	1ac0      	subs	r0, r0, r3
 800012a:	4152      	adcs	r2, r2
 800012c:	0ac3      	lsrs	r3, r0, #11
 800012e:	428b      	cmp	r3, r1
 8000130:	d301      	bcc.n	8000136 <__udivsi3+0x76>
 8000132:	02cb      	lsls	r3, r1, #11
 8000134:	1ac0      	subs	r0, r0, r3
 8000136:	4152      	adcs	r2, r2
 8000138:	0a83      	lsrs	r3, r0, #10
 800013a:	428b      	cmp	r3, r1
 800013c:	d301      	bcc.n	8000142 <__udivsi3+0x82>
 800013e:	028b      	lsls	r3, r1, #10
 8000140:	1ac0      	subs	r0, r0, r3
 8000142:	4152      	adcs	r2, r2
 8000144:	0a43      	lsrs	r3, r0, #9
 8000146:	428b      	cmp	r3, r1
 8000148:	d301      	bcc.n	800014e <__udivsi3+0x8e>
 800014a:	024b      	lsls	r3, r1, #9
 800014c:	1ac0      	subs	r0, r0, r3
 800014e:	4152      	adcs	r2, r2
 8000150:	0a03      	lsrs	r3, r0, #8
 8000152:	428b      	cmp	r3, r1
 8000154:	d301      	bcc.n	800015a <__udivsi3+0x9a>
 8000156:	020b      	lsls	r3, r1, #8
 8000158:	1ac0      	subs	r0, r0, r3
 800015a:	4152      	adcs	r2, r2
 800015c:	d2cd      	bcs.n	80000fa <__udivsi3+0x3a>
 800015e:	09c3      	lsrs	r3, r0, #7
 8000160:	428b      	cmp	r3, r1
 8000162:	d301      	bcc.n	8000168 <__udivsi3+0xa8>
 8000164:	01cb      	lsls	r3, r1, #7
 8000166:	1ac0      	subs	r0, r0, r3
 8000168:	4152      	adcs	r2, r2
 800016a:	0983      	lsrs	r3, r0, #6
 800016c:	428b      	cmp	r3, r1
 800016e:	d301      	bcc.n	8000174 <__udivsi3+0xb4>
 8000170:	018b      	lsls	r3, r1, #6
 8000172:	1ac0      	subs	r0, r0, r3
 8000174:	4152      	adcs	r2, r2
 8000176:	0943      	lsrs	r3, r0, #5
 8000178:	428b      	cmp	r3, r1
 800017a:	d301      	bcc.n	8000180 <__udivsi3+0xc0>
 800017c:	014b      	lsls	r3, r1, #5
 800017e:	1ac0      	subs	r0, r0, r3
 8000180:	4152      	adcs	r2, r2
 8000182:	0903      	lsrs	r3, r0, #4
 8000184:	428b      	cmp	r3, r1
 8000186:	d301      	bcc.n	800018c <__udivsi3+0xcc>
 8000188:	010b      	lsls	r3, r1, #4
 800018a:	1ac0      	subs	r0, r0, r3
 800018c:	4152      	adcs	r2, r2
 800018e:	08c3      	lsrs	r3, r0, #3
 8000190:	428b      	cmp	r3, r1
 8000192:	d301      	bcc.n	8000198 <__udivsi3+0xd8>
 8000194:	00cb      	lsls	r3, r1, #3
 8000196:	1ac0      	subs	r0, r0, r3
 8000198:	4152      	adcs	r2, r2
 800019a:	0883      	lsrs	r3, r0, #2
 800019c:	428b      	cmp	r3, r1
 800019e:	d301      	bcc.n	80001a4 <__udivsi3+0xe4>
 80001a0:	008b      	lsls	r3, r1, #2
 80001a2:	1ac0      	subs	r0, r0, r3
 80001a4:	4152      	adcs	r2, r2
 80001a6:	0843      	lsrs	r3, r0, #1
 80001a8:	428b      	cmp	r3, r1
 80001aa:	d301      	bcc.n	80001b0 <__udivsi3+0xf0>
 80001ac:	004b      	lsls	r3, r1, #1
 80001ae:	1ac0      	subs	r0, r0, r3
 80001b0:	4152      	adcs	r2, r2
 80001b2:	1a41      	subs	r1, r0, r1
 80001b4:	d200      	bcs.n	80001b8 <__udivsi3+0xf8>
 80001b6:	4601      	mov	r1, r0
 80001b8:	4152      	adcs	r2, r2
 80001ba:	4610      	mov	r0, r2
 80001bc:	4770      	bx	lr
 80001be:	e7ff      	b.n	80001c0 <__udivsi3+0x100>
 80001c0:	b501      	push	{r0, lr}
 80001c2:	2000      	movs	r0, #0
 80001c4:	f000 f806 	bl	80001d4 <__aeabi_idiv0>
 80001c8:	bd02      	pop	{r1, pc}
 80001ca:	46c0      	nop			; (mov r8, r8)

080001cc <__aeabi_uidivmod>:
 80001cc:	2900      	cmp	r1, #0
 80001ce:	d0f7      	beq.n	80001c0 <__udivsi3+0x100>
 80001d0:	e776      	b.n	80000c0 <__udivsi3>
 80001d2:	4770      	bx	lr

080001d4 <__aeabi_idiv0>:
 80001d4:	4770      	bx	lr
 80001d6:	46c0      	nop			; (mov r8, r8)

080001d8 <__gnu_thumb1_case_shi>:
 80001d8:	b403      	push	{r0, r1}
 80001da:	4671      	mov	r1, lr
 80001dc:	0849      	lsrs	r1, r1, #1
 80001de:	0040      	lsls	r0, r0, #1
 80001e0:	0049      	lsls	r1, r1, #1
 80001e2:	5e09      	ldrsh	r1, [r1, r0]
 80001e4:	0049      	lsls	r1, r1, #1
 80001e6:	448e      	add	lr, r1
 80001e8:	bc03      	pop	{r0, r1}
 80001ea:	4770      	bx	lr

080001ec <strlen>:
 80001ec:	2300      	movs	r3, #0
 80001ee:	5cc2      	ldrb	r2, [r0, r3]
 80001f0:	3301      	adds	r3, #1
 80001f2:	2a00      	cmp	r2, #0
 80001f4:	d1fb      	bne.n	80001ee <strlen+0x2>
 80001f6:	1e58      	subs	r0, r3, #1
 80001f8:	4770      	bx	lr
	...

080001fc <deregister_tm_clones>:
 80001fc:	4804      	ldr	r0, [pc, #16]	; (8000210 <deregister_tm_clones+0x14>)
 80001fe:	4b05      	ldr	r3, [pc, #20]	; (8000214 <deregister_tm_clones+0x18>)
 8000200:	b510      	push	{r4, lr}
 8000202:	4283      	cmp	r3, r0
 8000204:	d003      	beq.n	800020e <deregister_tm_clones+0x12>
 8000206:	4b04      	ldr	r3, [pc, #16]	; (8000218 <deregister_tm_clones+0x1c>)
 8000208:	2b00      	cmp	r3, #0
 800020a:	d000      	beq.n	800020e <deregister_tm_clones+0x12>
 800020c:	4798      	blx	r3
 800020e:	bd10      	pop	{r4, pc}
 8000210:	2000006c 	.word	0x2000006c
 8000214:	2000006c 	.word	0x2000006c
 8000218:	00000000 	.word	0x00000000

0800021c <register_tm_clones>:
 800021c:	4806      	ldr	r0, [pc, #24]	; (8000238 <register_tm_clones+0x1c>)
 800021e:	4907      	ldr	r1, [pc, #28]	; (800023c <register_tm_clones+0x20>)
 8000220:	1a09      	subs	r1, r1, r0
 8000222:	108b      	asrs	r3, r1, #2
 8000224:	0fc9      	lsrs	r1, r1, #31
 8000226:	18c9      	adds	r1, r1, r3
 8000228:	b510      	push	{r4, lr}
 800022a:	1049      	asrs	r1, r1, #1
 800022c:	d003      	beq.n	8000236 <register_tm_clones+0x1a>
 800022e:	4b04      	ldr	r3, [pc, #16]	; (8000240 <register_tm_clones+0x24>)
 8000230:	2b00      	cmp	r3, #0
 8000232:	d000      	beq.n	8000236 <register_tm_clones+0x1a>
 8000234:	4798      	blx	r3
 8000236:	bd10      	pop	{r4, pc}
 8000238:	2000006c 	.word	0x2000006c
 800023c:	2000006c 	.word	0x2000006c
 8000240:	00000000 	.word	0x00000000

08000244 <__do_global_dtors_aux>:
 8000244:	b510      	push	{r4, lr}
 8000246:	4c07      	ldr	r4, [pc, #28]	; (8000264 <__do_global_dtors_aux+0x20>)
 8000248:	7823      	ldrb	r3, [r4, #0]
 800024a:	2b00      	cmp	r3, #0
 800024c:	d109      	bne.n	8000262 <__do_global_dtors_aux+0x1e>
 800024e:	f7ff ffd5 	bl	80001fc <deregister_tm_clones>
 8000252:	4b05      	ldr	r3, [pc, #20]	; (8000268 <__do_global_dtors_aux+0x24>)
 8000254:	2b00      	cmp	r3, #0
 8000256:	d002      	beq.n	800025e <__do_global_dtors_aux+0x1a>
 8000258:	4804      	ldr	r0, [pc, #16]	; (800026c <__do_global_dtors_aux+0x28>)
 800025a:	e000      	b.n	800025e <__do_global_dtors_aux+0x1a>
 800025c:	bf00      	nop
 800025e:	2301      	movs	r3, #1
 8000260:	7023      	strb	r3, [r4, #0]
 8000262:	bd10      	pop	{r4, pc}
 8000264:	2000006c 	.word	0x2000006c
 8000268:	00000000 	.word	0x00000000
 800026c:	08001fa0 	.word	0x08001fa0

08000270 <frame_dummy>:
 8000270:	4b05      	ldr	r3, [pc, #20]	; (8000288 <frame_dummy+0x18>)
 8000272:	b510      	push	{r4, lr}
 8000274:	2b00      	cmp	r3, #0
 8000276:	d003      	beq.n	8000280 <frame_dummy+0x10>
 8000278:	4904      	ldr	r1, [pc, #16]	; (800028c <frame_dummy+0x1c>)
 800027a:	4805      	ldr	r0, [pc, #20]	; (8000290 <frame_dummy+0x20>)
 800027c:	e000      	b.n	8000280 <frame_dummy+0x10>
 800027e:	bf00      	nop
 8000280:	f7ff ffcc 	bl	800021c <register_tm_clones>
 8000284:	bd10      	pop	{r4, pc}
 8000286:	46c0      	nop			; (mov r8, r8)
 8000288:	00000000 	.word	0x00000000
 800028c:	20000070 	.word	0x20000070
 8000290:	08001fa0 	.word	0x08001fa0

08000294 <main>:
#include "main.h"

int main( void )
{   
 8000294:	b580      	push	{r7, lr}
 8000296:	af00      	add	r7, sp, #0
    initialise_monitor_handles();
 8000298:	f001 fe02 	bl	8001ea0 <initialise_monitor_handles>

    /* initialize UART2 peripheral */
    USART2_Init();
 800029c:	f000 f840 	bl	8000320 <USART2_Init>

    /* initialize SYSTICK timer */
    SysTick_Init();
 80002a0:	f000 f95a 	bl	8000558 <SysTick_Init>
    while( 1 )
    {
        /* NOTE: a UART2 RX interrupt can occur at any time */

        /* wait half a second */
        Systick_Delay_Ms( 500 );
 80002a4:	23fa      	movs	r3, #250	; 0xfa
 80002a6:	005b      	lsls	r3, r3, #1
 80002a8:	0018      	movs	r0, r3
 80002aa:	f000 f96f 	bl	800058c <Systick_Delay_Ms>

        /* transmit over UART2, this will trigger the transmission complete interrupt */
        USART2_Transmit_Array( ( uint8_t * ) "This a message sent over UART2\n\r" );
 80002ae:	4b03      	ldr	r3, [pc, #12]	; (80002bc <main+0x28>)
 80002b0:	0018      	movs	r0, r3
 80002b2:	f000 f92d 	bl	8000510 <USART2_Transmit_Array>
        Systick_Delay_Ms( 500 );
 80002b6:	46c0      	nop			; (mov r8, r8)
 80002b8:	e7f4      	b.n	80002a4 <main+0x10>
 80002ba:	46c0      	nop			; (mov r8, r8)
 80002bc:	08001fb8 	.word	0x08001fb8

080002c0 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80002c0:	b580      	push	{r7, lr}
 80002c2:	af00      	add	r7, sp, #0
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 80002c4:	46c0      	nop			; (mov r8, r8)
 80002c6:	46bd      	mov	sp, r7
 80002c8:	bd80      	pop	{r7, pc}
	...

080002cc <Reset_Handler>:
 80002cc:	480d      	ldr	r0, [pc, #52]	; (8000304 <LoopForever+0x2>)
 80002ce:	4685      	mov	sp, r0
 80002d0:	480d      	ldr	r0, [pc, #52]	; (8000308 <LoopForever+0x6>)
 80002d2:	490e      	ldr	r1, [pc, #56]	; (800030c <LoopForever+0xa>)
 80002d4:	4a0e      	ldr	r2, [pc, #56]	; (8000310 <LoopForever+0xe>)
 80002d6:	2300      	movs	r3, #0
 80002d8:	e002      	b.n	80002e0 <LoopCopyDataInit>

080002da <CopyDataInit>:
 80002da:	58d4      	ldr	r4, [r2, r3]
 80002dc:	50c4      	str	r4, [r0, r3]
 80002de:	3304      	adds	r3, #4

080002e0 <LoopCopyDataInit>:
 80002e0:	18c4      	adds	r4, r0, r3
 80002e2:	428c      	cmp	r4, r1
 80002e4:	d3f9      	bcc.n	80002da <CopyDataInit>
 80002e6:	4a0b      	ldr	r2, [pc, #44]	; (8000314 <LoopForever+0x12>)
 80002e8:	4c0b      	ldr	r4, [pc, #44]	; (8000318 <LoopForever+0x16>)
 80002ea:	2300      	movs	r3, #0
 80002ec:	e001      	b.n	80002f2 <LoopFillZerobss>

080002ee <FillZerobss>:
 80002ee:	6013      	str	r3, [r2, #0]
 80002f0:	3204      	adds	r2, #4

080002f2 <LoopFillZerobss>:
 80002f2:	42a2      	cmp	r2, r4
 80002f4:	d3fb      	bcc.n	80002ee <FillZerobss>
 80002f6:	f7ff ffe3 	bl	80002c0 <SystemInit>
 80002fa:	f000 fc8f 	bl	8000c1c <__libc_init_array>
 80002fe:	f7ff ffc9 	bl	8000294 <main>

08000302 <LoopForever>:
 8000302:	e7fe      	b.n	8000302 <LoopForever>
 8000304:	20004000 	.word	0x20004000
 8000308:	20000000 	.word	0x20000000
 800030c:	2000006c 	.word	0x2000006c
 8000310:	0800207c 	.word	0x0800207c
 8000314:	2000006c 	.word	0x2000006c
 8000318:	20000284 	.word	0x20000284

0800031c <ADC1_IRQHandler>:
 800031c:	e7fe      	b.n	800031c <ADC1_IRQHandler>
	...

08000320 <USART2_Init>:
#include "usart.h"

void USART2_Init( void )
{
 8000320:	b5b0      	push	{r4, r5, r7, lr}
 8000322:	af00      	add	r7, sp, #0
    /* enable GPIOA (GPIOA2 = USART2TX, GPIOA3 = USART2RX) clock access */
    GPIOA_CLK_ENBL();
 8000324:	4b62      	ldr	r3, [pc, #392]	; (80004b0 <USART2_Init+0x190>)
 8000326:	695a      	ldr	r2, [r3, #20]
 8000328:	4b61      	ldr	r3, [pc, #388]	; (80004b0 <USART2_Init+0x190>)
 800032a:	2180      	movs	r1, #128	; 0x80
 800032c:	0289      	lsls	r1, r1, #10
 800032e:	430a      	orrs	r2, r1
 8000330:	615a      	str	r2, [r3, #20]

    /* enable USART2 clock access */
    USART2_CLK_ENBL();
 8000332:	4b5f      	ldr	r3, [pc, #380]	; (80004b0 <USART2_Init+0x190>)
 8000334:	69da      	ldr	r2, [r3, #28]
 8000336:	4b5e      	ldr	r3, [pc, #376]	; (80004b0 <USART2_Init+0x190>)
 8000338:	2180      	movs	r1, #128	; 0x80
 800033a:	0289      	lsls	r1, r1, #10
 800033c:	430a      	orrs	r2, r1
 800033e:	61da      	str	r2, [r3, #28]

    /* GPIOA2 as alternate function */
    GPIOA->MODER |=  GPIO_MODER_MODER2_1;
 8000340:	2390      	movs	r3, #144	; 0x90
 8000342:	05db      	lsls	r3, r3, #23
 8000344:	681a      	ldr	r2, [r3, #0]
 8000346:	2390      	movs	r3, #144	; 0x90
 8000348:	05db      	lsls	r3, r3, #23
 800034a:	2120      	movs	r1, #32
 800034c:	430a      	orrs	r2, r1
 800034e:	601a      	str	r2, [r3, #0]
    GPIOA->MODER &= ~GPIO_MODER_MODER2_0;
 8000350:	2390      	movs	r3, #144	; 0x90
 8000352:	05db      	lsls	r3, r3, #23
 8000354:	681a      	ldr	r2, [r3, #0]
 8000356:	2390      	movs	r3, #144	; 0x90
 8000358:	05db      	lsls	r3, r3, #23
 800035a:	2110      	movs	r1, #16
 800035c:	438a      	bics	r2, r1
 800035e:	601a      	str	r2, [r3, #0]

    /* GPIOA2 alternate function 1 (USART2 Tx) */
    GPIOA->AFR[ 0 ] &= ~GPIO_AFRL_AFSEL2_3;
 8000360:	2390      	movs	r3, #144	; 0x90
 8000362:	05db      	lsls	r3, r3, #23
 8000364:	6a1a      	ldr	r2, [r3, #32]
 8000366:	2390      	movs	r3, #144	; 0x90
 8000368:	05db      	lsls	r3, r3, #23
 800036a:	4952      	ldr	r1, [pc, #328]	; (80004b4 <USART2_Init+0x194>)
 800036c:	400a      	ands	r2, r1
 800036e:	621a      	str	r2, [r3, #32]
    GPIOA->AFR[ 0 ] &= ~GPIO_AFRL_AFSEL2_2;
 8000370:	2390      	movs	r3, #144	; 0x90
 8000372:	05db      	lsls	r3, r3, #23
 8000374:	6a1a      	ldr	r2, [r3, #32]
 8000376:	2390      	movs	r3, #144	; 0x90
 8000378:	05db      	lsls	r3, r3, #23
 800037a:	494f      	ldr	r1, [pc, #316]	; (80004b8 <USART2_Init+0x198>)
 800037c:	400a      	ands	r2, r1
 800037e:	621a      	str	r2, [r3, #32]
    GPIOA->AFR[ 0 ] &= ~GPIO_AFRL_AFSEL2_1;
 8000380:	2390      	movs	r3, #144	; 0x90
 8000382:	05db      	lsls	r3, r3, #23
 8000384:	6a1a      	ldr	r2, [r3, #32]
 8000386:	2390      	movs	r3, #144	; 0x90
 8000388:	05db      	lsls	r3, r3, #23
 800038a:	494c      	ldr	r1, [pc, #304]	; (80004bc <USART2_Init+0x19c>)
 800038c:	400a      	ands	r2, r1
 800038e:	621a      	str	r2, [r3, #32]
    GPIOA->AFR[ 0 ] |=  GPIO_AFRL_AFSEL2_0;
 8000390:	2390      	movs	r3, #144	; 0x90
 8000392:	05db      	lsls	r3, r3, #23
 8000394:	6a1a      	ldr	r2, [r3, #32]
 8000396:	2390      	movs	r3, #144	; 0x90
 8000398:	05db      	lsls	r3, r3, #23
 800039a:	2180      	movs	r1, #128	; 0x80
 800039c:	0049      	lsls	r1, r1, #1
 800039e:	430a      	orrs	r2, r1
 80003a0:	621a      	str	r2, [r3, #32]

    /* GPIOA2 with pull-up resistor */
    GPIOA->PUPDR &= ~GPIO_PUPDR_PUPDR2_1;
 80003a2:	2390      	movs	r3, #144	; 0x90
 80003a4:	05db      	lsls	r3, r3, #23
 80003a6:	68da      	ldr	r2, [r3, #12]
 80003a8:	2390      	movs	r3, #144	; 0x90
 80003aa:	05db      	lsls	r3, r3, #23
 80003ac:	2120      	movs	r1, #32
 80003ae:	438a      	bics	r2, r1
 80003b0:	60da      	str	r2, [r3, #12]
    GPIOA->PUPDR |=  GPIO_PUPDR_PUPDR2_0;
 80003b2:	2390      	movs	r3, #144	; 0x90
 80003b4:	05db      	lsls	r3, r3, #23
 80003b6:	68da      	ldr	r2, [r3, #12]
 80003b8:	2390      	movs	r3, #144	; 0x90
 80003ba:	05db      	lsls	r3, r3, #23
 80003bc:	2110      	movs	r1, #16
 80003be:	430a      	orrs	r2, r1
 80003c0:	60da      	str	r2, [r3, #12]

    /* GPIOA3 as alternate function */
    GPIOA->MODER |=  GPIO_MODER_MODER3_1;
 80003c2:	2390      	movs	r3, #144	; 0x90
 80003c4:	05db      	lsls	r3, r3, #23
 80003c6:	681a      	ldr	r2, [r3, #0]
 80003c8:	2390      	movs	r3, #144	; 0x90
 80003ca:	05db      	lsls	r3, r3, #23
 80003cc:	2180      	movs	r1, #128	; 0x80
 80003ce:	430a      	orrs	r2, r1
 80003d0:	601a      	str	r2, [r3, #0]
    GPIOA->MODER &= ~GPIO_MODER_MODER3_0; 
 80003d2:	2390      	movs	r3, #144	; 0x90
 80003d4:	05db      	lsls	r3, r3, #23
 80003d6:	681a      	ldr	r2, [r3, #0]
 80003d8:	2390      	movs	r3, #144	; 0x90
 80003da:	05db      	lsls	r3, r3, #23
 80003dc:	2140      	movs	r1, #64	; 0x40
 80003de:	438a      	bics	r2, r1
 80003e0:	601a      	str	r2, [r3, #0]

    /* GPIOA3 alternate function 1 (USART2 Rx) */
    GPIOA->AFR[ 0 ] &= ~GPIO_AFRL_AFSEL3_3;
 80003e2:	2390      	movs	r3, #144	; 0x90
 80003e4:	05db      	lsls	r3, r3, #23
 80003e6:	6a1a      	ldr	r2, [r3, #32]
 80003e8:	2390      	movs	r3, #144	; 0x90
 80003ea:	05db      	lsls	r3, r3, #23
 80003ec:	4934      	ldr	r1, [pc, #208]	; (80004c0 <USART2_Init+0x1a0>)
 80003ee:	400a      	ands	r2, r1
 80003f0:	621a      	str	r2, [r3, #32]
    GPIOA->AFR[ 0 ] &= ~GPIO_AFRL_AFSEL3_2;
 80003f2:	2390      	movs	r3, #144	; 0x90
 80003f4:	05db      	lsls	r3, r3, #23
 80003f6:	6a1a      	ldr	r2, [r3, #32]
 80003f8:	2390      	movs	r3, #144	; 0x90
 80003fa:	05db      	lsls	r3, r3, #23
 80003fc:	4931      	ldr	r1, [pc, #196]	; (80004c4 <USART2_Init+0x1a4>)
 80003fe:	400a      	ands	r2, r1
 8000400:	621a      	str	r2, [r3, #32]
    GPIOA->AFR[ 0 ] &= ~GPIO_AFRL_AFSEL3_1;
 8000402:	2390      	movs	r3, #144	; 0x90
 8000404:	05db      	lsls	r3, r3, #23
 8000406:	6a1a      	ldr	r2, [r3, #32]
 8000408:	2390      	movs	r3, #144	; 0x90
 800040a:	05db      	lsls	r3, r3, #23
 800040c:	492e      	ldr	r1, [pc, #184]	; (80004c8 <USART2_Init+0x1a8>)
 800040e:	400a      	ands	r2, r1
 8000410:	621a      	str	r2, [r3, #32]
    GPIOA->AFR[ 0 ] |=  GPIO_AFRL_AFSEL3_0;
 8000412:	2390      	movs	r3, #144	; 0x90
 8000414:	05db      	lsls	r3, r3, #23
 8000416:	6a1a      	ldr	r2, [r3, #32]
 8000418:	2390      	movs	r3, #144	; 0x90
 800041a:	05db      	lsls	r3, r3, #23
 800041c:	2180      	movs	r1, #128	; 0x80
 800041e:	0149      	lsls	r1, r1, #5
 8000420:	430a      	orrs	r2, r1
 8000422:	621a      	str	r2, [r3, #32]

    /* USART2 1 start bit and 8 data bits */
    USART2->CR1 &= ~USART_CR1_M1;
 8000424:	4b29      	ldr	r3, [pc, #164]	; (80004cc <USART2_Init+0x1ac>)
 8000426:	681a      	ldr	r2, [r3, #0]
 8000428:	4b28      	ldr	r3, [pc, #160]	; (80004cc <USART2_Init+0x1ac>)
 800042a:	4929      	ldr	r1, [pc, #164]	; (80004d0 <USART2_Init+0x1b0>)
 800042c:	400a      	ands	r2, r1
 800042e:	601a      	str	r2, [r3, #0]
    USART2->CR1 &= ~USART_CR1_M0;
 8000430:	4b26      	ldr	r3, [pc, #152]	; (80004cc <USART2_Init+0x1ac>)
 8000432:	681a      	ldr	r2, [r3, #0]
 8000434:	4b25      	ldr	r3, [pc, #148]	; (80004cc <USART2_Init+0x1ac>)
 8000436:	4927      	ldr	r1, [pc, #156]	; (80004d4 <USART2_Init+0x1b4>)
 8000438:	400a      	ands	r2, r1
 800043a:	601a      	str	r2, [r3, #0]

    /* USART2 1 stop bit */
    USART2->CR2 &= ~USART_CR2_STOP_1;
 800043c:	4b23      	ldr	r3, [pc, #140]	; (80004cc <USART2_Init+0x1ac>)
 800043e:	685a      	ldr	r2, [r3, #4]
 8000440:	4b22      	ldr	r3, [pc, #136]	; (80004cc <USART2_Init+0x1ac>)
 8000442:	4921      	ldr	r1, [pc, #132]	; (80004c8 <USART2_Init+0x1a8>)
 8000444:	400a      	ands	r2, r1
 8000446:	605a      	str	r2, [r3, #4]
    USART2->CR2 &= ~USART_CR2_STOP_0;
 8000448:	4b20      	ldr	r3, [pc, #128]	; (80004cc <USART2_Init+0x1ac>)
 800044a:	685a      	ldr	r2, [r3, #4]
 800044c:	4b1f      	ldr	r3, [pc, #124]	; (80004cc <USART2_Init+0x1ac>)
 800044e:	4921      	ldr	r1, [pc, #132]	; (80004d4 <USART2_Init+0x1b4>)
 8000450:	400a      	ands	r2, r1
 8000452:	605a      	str	r2, [r3, #4]

    /* USART2 no parity control */
    USART2->CR1 &= ~USART_CR1_PCE;
 8000454:	4b1d      	ldr	r3, [pc, #116]	; (80004cc <USART2_Init+0x1ac>)
 8000456:	681a      	ldr	r2, [r3, #0]
 8000458:	4b1c      	ldr	r3, [pc, #112]	; (80004cc <USART2_Init+0x1ac>)
 800045a:	4917      	ldr	r1, [pc, #92]	; (80004b8 <USART2_Init+0x198>)
 800045c:	400a      	ands	r2, r1
 800045e:	601a      	str	r2, [r3, #0]

    /* USART2 oversampling by 16 */
    USART2->CR1 &= ~USART_CR1_OVER8;
 8000460:	4b1a      	ldr	r3, [pc, #104]	; (80004cc <USART2_Init+0x1ac>)
 8000462:	681a      	ldr	r2, [r3, #0]
 8000464:	4b19      	ldr	r3, [pc, #100]	; (80004cc <USART2_Init+0x1ac>)
 8000466:	4916      	ldr	r1, [pc, #88]	; (80004c0 <USART2_Init+0x1a0>)
 8000468:	400a      	ands	r2, r1
 800046a:	601a      	str	r2, [r3, #0]

    /* USART2 least significant bit first */
    USART2->CR2 &= ~USART_CR2_MSBFIRST;
 800046c:	4b17      	ldr	r3, [pc, #92]	; (80004cc <USART2_Init+0x1ac>)
 800046e:	685a      	ldr	r2, [r3, #4]
 8000470:	4b16      	ldr	r3, [pc, #88]	; (80004cc <USART2_Init+0x1ac>)
 8000472:	4919      	ldr	r1, [pc, #100]	; (80004d8 <USART2_Init+0x1b8>)
 8000474:	400a      	ands	r2, r1
 8000476:	605a      	str	r2, [r3, #4]

    /* USART2 9600 baud rate.
       When oversampling by 16 (OVER8 = 1):
       BRR = USARTDIV, with USARTDIV = fck / baud.
       Therefore USARTDIV = 8MHz (default value upon init.) / 9600 */
    USART2->BRR = GET_USARTDIV();
 8000478:	4b18      	ldr	r3, [pc, #96]	; (80004dc <USART2_Init+0x1bc>)
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	4c13      	ldr	r4, [pc, #76]	; (80004cc <USART2_Init+0x1ac>)
 800047e:	2296      	movs	r2, #150	; 0x96
 8000480:	0191      	lsls	r1, r2, #6
 8000482:	0018      	movs	r0, r3
 8000484:	f7ff fe1c 	bl	80000c0 <__udivsi3>
 8000488:	0003      	movs	r3, r0
 800048a:	60e3      	str	r3, [r4, #12]

    /* USART2 transmitter and receiver enabled */
    USART2->CR1 |= ( USART_CR1_TE | USART_CR1_RE );
 800048c:	4b0f      	ldr	r3, [pc, #60]	; (80004cc <USART2_Init+0x1ac>)
 800048e:	681a      	ldr	r2, [r3, #0]
 8000490:	4b0e      	ldr	r3, [pc, #56]	; (80004cc <USART2_Init+0x1ac>)
 8000492:	210c      	movs	r1, #12
 8000494:	430a      	orrs	r2, r1
 8000496:	601a      	str	r2, [r3, #0]

    /* USART2 enabled */
    USART2->CR1 |= USART_CR1_UE;
 8000498:	4b0c      	ldr	r3, [pc, #48]	; (80004cc <USART2_Init+0x1ac>)
 800049a:	681a      	ldr	r2, [r3, #0]
 800049c:	4b0b      	ldr	r3, [pc, #44]	; (80004cc <USART2_Init+0x1ac>)
 800049e:	2101      	movs	r1, #1
 80004a0:	430a      	orrs	r2, r1
 80004a2:	601a      	str	r2, [r3, #0]

    /* enable USART2 data ready to be read and
       transmission complete interrupts */
    USART2_Interrupt_Init();
 80004a4:	f000 f89c 	bl	80005e0 <USART2_Interrupt_Init>
}
 80004a8:	46c0      	nop			; (mov r8, r8)
 80004aa:	46bd      	mov	sp, r7
 80004ac:	bdb0      	pop	{r4, r5, r7, pc}
 80004ae:	46c0      	nop			; (mov r8, r8)
 80004b0:	40021000 	.word	0x40021000
 80004b4:	fffff7ff 	.word	0xfffff7ff
 80004b8:	fffffbff 	.word	0xfffffbff
 80004bc:	fffffdff 	.word	0xfffffdff
 80004c0:	ffff7fff 	.word	0xffff7fff
 80004c4:	ffffbfff 	.word	0xffffbfff
 80004c8:	ffffdfff 	.word	0xffffdfff
 80004cc:	40004400 	.word	0x40004400
 80004d0:	efffffff 	.word	0xefffffff
 80004d4:	ffffefff 	.word	0xffffefff
 80004d8:	fff7ffff 	.word	0xfff7ffff
 80004dc:	20000000 	.word	0x20000000

080004e0 <USART2_Transmit_Character>:

void USART2_Transmit_Character( uint8_t data )
{   
 80004e0:	b580      	push	{r7, lr}
 80004e2:	b082      	sub	sp, #8
 80004e4:	af00      	add	r7, sp, #0
 80004e6:	0002      	movs	r2, r0
 80004e8:	1dfb      	adds	r3, r7, #7
 80004ea:	701a      	strb	r2, [r3, #0]
    /* wait for the transmit data register to be empty */
    while ( !( USART2->ISR & USART_ISR_TXE ) )
 80004ec:	46c0      	nop			; (mov r8, r8)
 80004ee:	4b07      	ldr	r3, [pc, #28]	; (800050c <USART2_Transmit_Character+0x2c>)
 80004f0:	69db      	ldr	r3, [r3, #28]
 80004f2:	2280      	movs	r2, #128	; 0x80
 80004f4:	4013      	ands	r3, r2
 80004f6:	d0fa      	beq.n	80004ee <USART2_Transmit_Character+0xe>
    {
        /* do nothing */
    }

    /* transmit data */
    USART2->TDR = data;
 80004f8:	4a04      	ldr	r2, [pc, #16]	; (800050c <USART2_Transmit_Character+0x2c>)
 80004fa:	1dfb      	adds	r3, r7, #7
 80004fc:	781b      	ldrb	r3, [r3, #0]
 80004fe:	b29b      	uxth	r3, r3
 8000500:	8513      	strh	r3, [r2, #40]	; 0x28
}
 8000502:	46c0      	nop			; (mov r8, r8)
 8000504:	46bd      	mov	sp, r7
 8000506:	b002      	add	sp, #8
 8000508:	bd80      	pop	{r7, pc}
 800050a:	46c0      	nop			; (mov r8, r8)
 800050c:	40004400 	.word	0x40004400

08000510 <USART2_Transmit_Array>:

void USART2_Transmit_Array( const uint8_t *str )
{
 8000510:	b590      	push	{r4, r7, lr}
 8000512:	b085      	sub	sp, #20
 8000514:	af00      	add	r7, sp, #0
 8000516:	6078      	str	r0, [r7, #4]
    uint8_t i;

    /* loop through the character array */
    for ( i = 0; str[ i ] != '\0'; i++ )
 8000518:	230f      	movs	r3, #15
 800051a:	18fb      	adds	r3, r7, r3
 800051c:	2200      	movs	r2, #0
 800051e:	701a      	strb	r2, [r3, #0]
 8000520:	e00d      	b.n	800053e <USART2_Transmit_Array+0x2e>
    {   
        /* transmit one character at a time */
        USART2_Transmit_Character( str[ i ] );
 8000522:	240f      	movs	r4, #15
 8000524:	193b      	adds	r3, r7, r4
 8000526:	781b      	ldrb	r3, [r3, #0]
 8000528:	687a      	ldr	r2, [r7, #4]
 800052a:	18d3      	adds	r3, r2, r3
 800052c:	781b      	ldrb	r3, [r3, #0]
 800052e:	0018      	movs	r0, r3
 8000530:	f7ff ffd6 	bl	80004e0 <USART2_Transmit_Character>
    for ( i = 0; str[ i ] != '\0'; i++ )
 8000534:	193b      	adds	r3, r7, r4
 8000536:	781a      	ldrb	r2, [r3, #0]
 8000538:	193b      	adds	r3, r7, r4
 800053a:	3201      	adds	r2, #1
 800053c:	701a      	strb	r2, [r3, #0]
 800053e:	230f      	movs	r3, #15
 8000540:	18fb      	adds	r3, r7, r3
 8000542:	781b      	ldrb	r3, [r3, #0]
 8000544:	687a      	ldr	r2, [r7, #4]
 8000546:	18d3      	adds	r3, r2, r3
 8000548:	781b      	ldrb	r3, [r3, #0]
 800054a:	2b00      	cmp	r3, #0
 800054c:	d1e9      	bne.n	8000522 <USART2_Transmit_Array+0x12>
    }
}
 800054e:	46c0      	nop			; (mov r8, r8)
 8000550:	46c0      	nop			; (mov r8, r8)
 8000552:	46bd      	mov	sp, r7
 8000554:	b005      	add	sp, #20
 8000556:	bd90      	pop	{r4, r7, pc}

08000558 <SysTick_Init>:
#include "stm32f0xx.h"

void SysTick_Init( void )
{
 8000558:	b580      	push	{r7, lr}
 800055a:	af00      	add	r7, sp, #0
    /* Processor clock (HCLK = 8MHz) as SysTick clocksource */
    SysTick->CTRL = SysTick_CTRL_CLKSOURCE_Msk;
 800055c:	4b0a      	ldr	r3, [pc, #40]	; (8000588 <SysTick_Init+0x30>)
 800055e:	2204      	movs	r2, #4
 8000560:	601a      	str	r2, [r3, #0]

    /* SysTick exception request disabled */
    SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 8000562:	4b09      	ldr	r3, [pc, #36]	; (8000588 <SysTick_Init+0x30>)
 8000564:	681a      	ldr	r2, [r3, #0]
 8000566:	4b08      	ldr	r3, [pc, #32]	; (8000588 <SysTick_Init+0x30>)
 8000568:	2102      	movs	r1, #2
 800056a:	438a      	bics	r2, r1
 800056c:	601a      	str	r2, [r3, #0]

    /* SysTick reload value set to 1ms.
       RELOAD = 1ms / ( 1 / 8MHz ) */
    SysTick->LOAD = 0x1F40U;
 800056e:	4b06      	ldr	r3, [pc, #24]	; (8000588 <SysTick_Init+0x30>)
 8000570:	22fa      	movs	r2, #250	; 0xfa
 8000572:	0152      	lsls	r2, r2, #5
 8000574:	605a      	str	r2, [r3, #4]

    /* Enable SysTick */
    SysTick->CTRL |= SysTick_CTRL_ENABLE_Msk;
 8000576:	4b04      	ldr	r3, [pc, #16]	; (8000588 <SysTick_Init+0x30>)
 8000578:	681a      	ldr	r2, [r3, #0]
 800057a:	4b03      	ldr	r3, [pc, #12]	; (8000588 <SysTick_Init+0x30>)
 800057c:	2101      	movs	r1, #1
 800057e:	430a      	orrs	r2, r1
 8000580:	601a      	str	r2, [r3, #0]
}
 8000582:	46c0      	nop			; (mov r8, r8)
 8000584:	46bd      	mov	sp, r7
 8000586:	bd80      	pop	{r7, pc}
 8000588:	e000e010 	.word	0xe000e010

0800058c <Systick_Delay_Ms>:

void Systick_Delay_Ms( uint32_t delay )
{
 800058c:	b580      	push	{r7, lr}
 800058e:	b084      	sub	sp, #16
 8000590:	af00      	add	r7, sp, #0
 8000592:	6078      	str	r0, [r7, #4]
    uint32_t wait;

    /* SysTick current value set to 0 */
    SysTick->VAL = 0x0U;
 8000594:	4b11      	ldr	r3, [pc, #68]	; (80005dc <Systick_Delay_Ms+0x50>)
 8000596:	2200      	movs	r2, #0
 8000598:	609a      	str	r2, [r3, #8]

    /* Enable SysTick */
    SysTick->CTRL |= SysTick_CTRL_ENABLE_Msk;
 800059a:	4b10      	ldr	r3, [pc, #64]	; (80005dc <Systick_Delay_Ms+0x50>)
 800059c:	681a      	ldr	r2, [r3, #0]
 800059e:	4b0f      	ldr	r3, [pc, #60]	; (80005dc <Systick_Delay_Ms+0x50>)
 80005a0:	2101      	movs	r1, #1
 80005a2:	430a      	orrs	r2, r1
 80005a4:	601a      	str	r2, [r3, #0]

    /* count 'delay' ms */
    for ( wait = 0; wait < delay; wait++ )
 80005a6:	2300      	movs	r3, #0
 80005a8:	60fb      	str	r3, [r7, #12]
 80005aa:	e009      	b.n	80005c0 <Systick_Delay_Ms+0x34>
    {   
        /* wait for SysTick value to be 0 */
        while ( ( SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk ) == 0U )
 80005ac:	46c0      	nop			; (mov r8, r8)
 80005ae:	4b0b      	ldr	r3, [pc, #44]	; (80005dc <Systick_Delay_Ms+0x50>)
 80005b0:	681a      	ldr	r2, [r3, #0]
 80005b2:	2380      	movs	r3, #128	; 0x80
 80005b4:	025b      	lsls	r3, r3, #9
 80005b6:	4013      	ands	r3, r2
 80005b8:	d0f9      	beq.n	80005ae <Systick_Delay_Ms+0x22>
    for ( wait = 0; wait < delay; wait++ )
 80005ba:	68fb      	ldr	r3, [r7, #12]
 80005bc:	3301      	adds	r3, #1
 80005be:	60fb      	str	r3, [r7, #12]
 80005c0:	68fa      	ldr	r2, [r7, #12]
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	429a      	cmp	r2, r3
 80005c6:	d3f1      	bcc.n	80005ac <Systick_Delay_Ms+0x20>
            /* do nothing */
        }
    }

    /* Disable SysTick */
    SysTick->CTRL &= ~SysTick_CTRL_ENABLE_Msk;
 80005c8:	4b04      	ldr	r3, [pc, #16]	; (80005dc <Systick_Delay_Ms+0x50>)
 80005ca:	681a      	ldr	r2, [r3, #0]
 80005cc:	4b03      	ldr	r3, [pc, #12]	; (80005dc <Systick_Delay_Ms+0x50>)
 80005ce:	2101      	movs	r1, #1
 80005d0:	438a      	bics	r2, r1
 80005d2:	601a      	str	r2, [r3, #0]
}
 80005d4:	46c0      	nop			; (mov r8, r8)
 80005d6:	46bd      	mov	sp, r7
 80005d8:	b004      	add	sp, #16
 80005da:	bd80      	pop	{r7, pc}
 80005dc:	e000e010 	.word	0xe000e010

080005e0 <USART2_Interrupt_Init>:
#include "exti.h"

void USART2_Interrupt_Init( void )
{
 80005e0:	b580      	push	{r7, lr}
 80005e2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80005e4:	b672      	cpsid	i
}
 80005e6:	46c0      	nop			; (mov r8, r8)
   /* disable global interrupts */
   __disable_irq();

   /* enable USART2 Receive Data Register
      not empty interrupt (data ready to be read) */
   USART2->CR1 |= USART_CR1_RXNEIE;
 80005e8:	4b19      	ldr	r3, [pc, #100]	; (8000650 <USART2_Interrupt_Init+0x70>)
 80005ea:	681a      	ldr	r2, [r3, #0]
 80005ec:	4b18      	ldr	r3, [pc, #96]	; (8000650 <USART2_Interrupt_Init+0x70>)
 80005ee:	2120      	movs	r1, #32
 80005f0:	430a      	orrs	r2, r1
 80005f2:	601a      	str	r2, [r3, #0]

   /* enable USART2 Tranmision Complete interrupt */
   USART2->CR1 |= USART_CR1_TCIE;
 80005f4:	4b16      	ldr	r3, [pc, #88]	; (8000650 <USART2_Interrupt_Init+0x70>)
 80005f6:	681a      	ldr	r2, [r3, #0]
 80005f8:	4b15      	ldr	r3, [pc, #84]	; (8000650 <USART2_Interrupt_Init+0x70>)
 80005fa:	2140      	movs	r1, #64	; 0x40
 80005fc:	430a      	orrs	r2, r1
 80005fe:	601a      	str	r2, [r3, #0]

   /* enable interrupt 28 (USART global interrupt).
      Another method to do this is by using:
    NVIC_EnableIRQ( USART2_IRQn ) */
   NVIC->ISER[ 0 ] |= NVIC_ISER_SETENA_28;
 8000600:	4b14      	ldr	r3, [pc, #80]	; (8000654 <USART2_Interrupt_Init+0x74>)
 8000602:	681a      	ldr	r2, [r3, #0]
 8000604:	4b13      	ldr	r3, [pc, #76]	; (8000654 <USART2_Interrupt_Init+0x74>)
 8000606:	2180      	movs	r1, #128	; 0x80
 8000608:	0549      	lsls	r1, r1, #21
 800060a:	430a      	orrs	r2, r1
 800060c:	601a      	str	r2, [r3, #0]

   /* set USART2 interrupt (N=28) priority to zero (highest priority).
      ISPRx. With x = N / 4 = 28 / 4, then x = 7. Therefore ISPRx = ISPR7.
      Byte offset = N MOD 4 = 28 MOD 4, therefore Byte offset = 0.
      NOTE: processor implements only bits 7 and 6 of each field. */
   NVIC->IP[ 7 ] &= ~NVIC_IPR_PRI28_7;
 800060e:	4a11      	ldr	r2, [pc, #68]	; (8000654 <USART2_Interrupt_Init+0x74>)
 8000610:	23c7      	movs	r3, #199	; 0xc7
 8000612:	009b      	lsls	r3, r3, #2
 8000614:	58d3      	ldr	r3, [r2, r3]
 8000616:	490f      	ldr	r1, [pc, #60]	; (8000654 <USART2_Interrupt_Init+0x74>)
 8000618:	2280      	movs	r2, #128	; 0x80
 800061a:	4393      	bics	r3, r2
 800061c:	001a      	movs	r2, r3
 800061e:	23c7      	movs	r3, #199	; 0xc7
 8000620:	009b      	lsls	r3, r3, #2
 8000622:	50ca      	str	r2, [r1, r3]
   NVIC->IP[ 7 ] &= ~NVIC_IPR_PRI28_6;
 8000624:	4a0b      	ldr	r2, [pc, #44]	; (8000654 <USART2_Interrupt_Init+0x74>)
 8000626:	23c7      	movs	r3, #199	; 0xc7
 8000628:	009b      	lsls	r3, r3, #2
 800062a:	58d3      	ldr	r3, [r2, r3]
 800062c:	4909      	ldr	r1, [pc, #36]	; (8000654 <USART2_Interrupt_Init+0x74>)
 800062e:	2240      	movs	r2, #64	; 0x40
 8000630:	4393      	bics	r3, r2
 8000632:	001a      	movs	r2, r3
 8000634:	23c7      	movs	r3, #199	; 0xc7
 8000636:	009b      	lsls	r3, r3, #2
 8000638:	50ca      	str	r2, [r1, r3]

   /* clear transmission complete flag,
      this is a workaround due to the transmission complete interrupt
      is triggered upon initialization for unknown reasons */
   USART2->ICR |= USART_ICR_TCCF;
 800063a:	4b05      	ldr	r3, [pc, #20]	; (8000650 <USART2_Interrupt_Init+0x70>)
 800063c:	6a1a      	ldr	r2, [r3, #32]
 800063e:	4b04      	ldr	r3, [pc, #16]	; (8000650 <USART2_Interrupt_Init+0x70>)
 8000640:	2140      	movs	r1, #64	; 0x40
 8000642:	430a      	orrs	r2, r1
 8000644:	621a      	str	r2, [r3, #32]
  __ASM volatile ("cpsie i" : : : "memory");
 8000646:	b662      	cpsie	i
}
 8000648:	46c0      	nop			; (mov r8, r8)

   /* enable global interrupts */
    __enable_irq();
}
 800064a:	46c0      	nop			; (mov r8, r8)
 800064c:	46bd      	mov	sp, r7
 800064e:	bd80      	pop	{r7, pc}
 8000650:	40004400 	.word	0x40004400
 8000654:	e000e100 	.word	0xe000e100

08000658 <USART2_IRQHandler>:
#include "interrupts.h"

void USART2_IRQHandler( void )
{   
 8000658:	b580      	push	{r7, lr}
 800065a:	af00      	add	r7, sp, #0
    /* if read data register is not empty
       (data is received and ready to be read) */
    if ( ( USART2->ISR & USART_ISR_RXNE ) == USART_ISR_RXNE )
 800065c:	4b0f      	ldr	r3, [pc, #60]	; (800069c <USART2_IRQHandler+0x44>)
 800065e:	69db      	ldr	r3, [r3, #28]
 8000660:	2220      	movs	r2, #32
 8000662:	4013      	ands	r3, r2
 8000664:	2b20      	cmp	r3, #32
 8000666:	d107      	bne.n	8000678 <USART2_IRQHandler+0x20>
    {   
        /* clear received data flag */
        USART2->RQR |= USART_RQR_RXFRQ;
 8000668:	4b0c      	ldr	r3, [pc, #48]	; (800069c <USART2_IRQHandler+0x44>)
 800066a:	699a      	ldr	r2, [r3, #24]
 800066c:	4b0b      	ldr	r3, [pc, #44]	; (800069c <USART2_IRQHandler+0x44>)
 800066e:	2108      	movs	r1, #8
 8000670:	430a      	orrs	r2, r1
 8000672:	619a      	str	r2, [r3, #24]

        /* execute USART2 RX callback */
        USART2_Rx_Ready_Callback();
 8000674:	f000 f814 	bl	80006a0 <USART2_Rx_Ready_Callback>
    }

    /* if transmission is complete */
    if ( ( USART2->ISR & USART_ISR_TC ) == USART_ISR_TC )
 8000678:	4b08      	ldr	r3, [pc, #32]	; (800069c <USART2_IRQHandler+0x44>)
 800067a:	69db      	ldr	r3, [r3, #28]
 800067c:	2240      	movs	r2, #64	; 0x40
 800067e:	4013      	ands	r3, r2
 8000680:	2b40      	cmp	r3, #64	; 0x40
 8000682:	d107      	bne.n	8000694 <USART2_IRQHandler+0x3c>
    {   
        /* clear transmission complete flag */
        USART2->ICR |= USART_ICR_TCCF;
 8000684:	4b05      	ldr	r3, [pc, #20]	; (800069c <USART2_IRQHandler+0x44>)
 8000686:	6a1a      	ldr	r2, [r3, #32]
 8000688:	4b04      	ldr	r3, [pc, #16]	; (800069c <USART2_IRQHandler+0x44>)
 800068a:	2140      	movs	r1, #64	; 0x40
 800068c:	430a      	orrs	r2, r1
 800068e:	621a      	str	r2, [r3, #32]

        /* execute USART2 TX callback */
        USART2_Tx_Complete_Callback();
 8000690:	f000 f822 	bl	80006d8 <USART2_Tx_Complete_Callback>
    }
}
 8000694:	46c0      	nop			; (mov r8, r8)
 8000696:	46bd      	mov	sp, r7
 8000698:	bd80      	pop	{r7, pc}
 800069a:	46c0      	nop			; (mov r8, r8)
 800069c:	40004400 	.word	0x40004400

080006a0 <USART2_Rx_Ready_Callback>:

void USART2_Rx_Ready_Callback( void )
{   
 80006a0:	b580      	push	{r7, lr}
 80006a2:	b08c      	sub	sp, #48	; 0x30
 80006a4:	af00      	add	r7, sp, #0
    char message[ 47 ];

    /* store received data on UART2 (from PC to Board) */
    char data = ( char ) USART2->RDR;
 80006a6:	4b0a      	ldr	r3, [pc, #40]	; (80006d0 <USART2_Rx_Ready_Callback+0x30>)
 80006a8:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 80006aa:	b29a      	uxth	r2, r3
 80006ac:	212f      	movs	r1, #47	; 0x2f
 80006ae:	187b      	adds	r3, r7, r1
 80006b0:	701a      	strb	r2, [r3, #0]

    /* print received data over UART2 (from Board to PC) */
    sprintf( message,  "Data ready to be read. Data received is: '%c'\n\r", data );
 80006b2:	187b      	adds	r3, r7, r1
 80006b4:	781a      	ldrb	r2, [r3, #0]
 80006b6:	4907      	ldr	r1, [pc, #28]	; (80006d4 <USART2_Rx_Ready_Callback+0x34>)
 80006b8:	003b      	movs	r3, r7
 80006ba:	0018      	movs	r0, r3
 80006bc:	f000 f94c 	bl	8000958 <siprintf>
    printf( message );
 80006c0:	003b      	movs	r3, r7
 80006c2:	0018      	movs	r0, r3
 80006c4:	f000 f8d8 	bl	8000878 <iprintf>
}
 80006c8:	46c0      	nop			; (mov r8, r8)
 80006ca:	46bd      	mov	sp, r7
 80006cc:	b00c      	add	sp, #48	; 0x30
 80006ce:	bd80      	pop	{r7, pc}
 80006d0:	40004400 	.word	0x40004400
 80006d4:	08001fdc 	.word	0x08001fdc

080006d8 <USART2_Tx_Complete_Callback>:

void USART2_Tx_Complete_Callback( void )
{   
 80006d8:	b580      	push	{r7, lr}
 80006da:	af00      	add	r7, sp, #0
    /* acknowledge complete transmission (from Board to PC) over UART2 */
    printf( "Transmission complete!!!\n" );
 80006dc:	4b03      	ldr	r3, [pc, #12]	; (80006ec <USART2_Tx_Complete_Callback+0x14>)
 80006de:	0018      	movs	r0, r3
 80006e0:	f000 f930 	bl	8000944 <puts>
}
 80006e4:	46c0      	nop			; (mov r8, r8)
 80006e6:	46bd      	mov	sp, r7
 80006e8:	bd80      	pop	{r7, pc}
 80006ea:	46c0      	nop			; (mov r8, r8)
 80006ec:	0800200c 	.word	0x0800200c

080006f0 <std>:
 80006f0:	2300      	movs	r3, #0
 80006f2:	b510      	push	{r4, lr}
 80006f4:	0004      	movs	r4, r0
 80006f6:	6003      	str	r3, [r0, #0]
 80006f8:	6043      	str	r3, [r0, #4]
 80006fa:	6083      	str	r3, [r0, #8]
 80006fc:	8181      	strh	r1, [r0, #12]
 80006fe:	6643      	str	r3, [r0, #100]	; 0x64
 8000700:	81c2      	strh	r2, [r0, #14]
 8000702:	6103      	str	r3, [r0, #16]
 8000704:	6143      	str	r3, [r0, #20]
 8000706:	6183      	str	r3, [r0, #24]
 8000708:	0019      	movs	r1, r3
 800070a:	2208      	movs	r2, #8
 800070c:	305c      	adds	r0, #92	; 0x5c
 800070e:	f000 fa2f 	bl	8000b70 <memset>
 8000712:	4b0b      	ldr	r3, [pc, #44]	; (8000740 <std+0x50>)
 8000714:	6224      	str	r4, [r4, #32]
 8000716:	6263      	str	r3, [r4, #36]	; 0x24
 8000718:	4b0a      	ldr	r3, [pc, #40]	; (8000744 <std+0x54>)
 800071a:	62a3      	str	r3, [r4, #40]	; 0x28
 800071c:	4b0a      	ldr	r3, [pc, #40]	; (8000748 <std+0x58>)
 800071e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000720:	4b0a      	ldr	r3, [pc, #40]	; (800074c <std+0x5c>)
 8000722:	6323      	str	r3, [r4, #48]	; 0x30
 8000724:	4b0a      	ldr	r3, [pc, #40]	; (8000750 <std+0x60>)
 8000726:	429c      	cmp	r4, r3
 8000728:	d005      	beq.n	8000736 <std+0x46>
 800072a:	4b0a      	ldr	r3, [pc, #40]	; (8000754 <std+0x64>)
 800072c:	429c      	cmp	r4, r3
 800072e:	d002      	beq.n	8000736 <std+0x46>
 8000730:	4b09      	ldr	r3, [pc, #36]	; (8000758 <std+0x68>)
 8000732:	429c      	cmp	r4, r3
 8000734:	d103      	bne.n	800073e <std+0x4e>
 8000736:	0020      	movs	r0, r4
 8000738:	3058      	adds	r0, #88	; 0x58
 800073a:	f000 fa93 	bl	8000c64 <__retarget_lock_init_recursive>
 800073e:	bd10      	pop	{r4, pc}
 8000740:	08000999 	.word	0x08000999
 8000744:	080009c1 	.word	0x080009c1
 8000748:	080009f9 	.word	0x080009f9
 800074c:	08000a25 	.word	0x08000a25
 8000750:	20000088 	.word	0x20000088
 8000754:	200000f0 	.word	0x200000f0
 8000758:	20000158 	.word	0x20000158

0800075c <stdio_exit_handler>:
 800075c:	b510      	push	{r4, lr}
 800075e:	4a03      	ldr	r2, [pc, #12]	; (800076c <stdio_exit_handler+0x10>)
 8000760:	4903      	ldr	r1, [pc, #12]	; (8000770 <stdio_exit_handler+0x14>)
 8000762:	4804      	ldr	r0, [pc, #16]	; (8000774 <stdio_exit_handler+0x18>)
 8000764:	f000 f86c 	bl	8000840 <_fwalk_sglue>
 8000768:	bd10      	pop	{r4, pc}
 800076a:	46c0      	nop			; (mov r8, r8)
 800076c:	20000004 	.word	0x20000004
 8000770:	080017cd 	.word	0x080017cd
 8000774:	20000014 	.word	0x20000014

08000778 <cleanup_stdio>:
 8000778:	6841      	ldr	r1, [r0, #4]
 800077a:	4b0b      	ldr	r3, [pc, #44]	; (80007a8 <cleanup_stdio+0x30>)
 800077c:	b510      	push	{r4, lr}
 800077e:	0004      	movs	r4, r0
 8000780:	4299      	cmp	r1, r3
 8000782:	d001      	beq.n	8000788 <cleanup_stdio+0x10>
 8000784:	f001 f822 	bl	80017cc <_fflush_r>
 8000788:	68a1      	ldr	r1, [r4, #8]
 800078a:	4b08      	ldr	r3, [pc, #32]	; (80007ac <cleanup_stdio+0x34>)
 800078c:	4299      	cmp	r1, r3
 800078e:	d002      	beq.n	8000796 <cleanup_stdio+0x1e>
 8000790:	0020      	movs	r0, r4
 8000792:	f001 f81b 	bl	80017cc <_fflush_r>
 8000796:	68e1      	ldr	r1, [r4, #12]
 8000798:	4b05      	ldr	r3, [pc, #20]	; (80007b0 <cleanup_stdio+0x38>)
 800079a:	4299      	cmp	r1, r3
 800079c:	d002      	beq.n	80007a4 <cleanup_stdio+0x2c>
 800079e:	0020      	movs	r0, r4
 80007a0:	f001 f814 	bl	80017cc <_fflush_r>
 80007a4:	bd10      	pop	{r4, pc}
 80007a6:	46c0      	nop			; (mov r8, r8)
 80007a8:	20000088 	.word	0x20000088
 80007ac:	200000f0 	.word	0x200000f0
 80007b0:	20000158 	.word	0x20000158

080007b4 <global_stdio_init.part.0>:
 80007b4:	b510      	push	{r4, lr}
 80007b6:	4b09      	ldr	r3, [pc, #36]	; (80007dc <global_stdio_init.part.0+0x28>)
 80007b8:	4a09      	ldr	r2, [pc, #36]	; (80007e0 <global_stdio_init.part.0+0x2c>)
 80007ba:	2104      	movs	r1, #4
 80007bc:	601a      	str	r2, [r3, #0]
 80007be:	4809      	ldr	r0, [pc, #36]	; (80007e4 <global_stdio_init.part.0+0x30>)
 80007c0:	2200      	movs	r2, #0
 80007c2:	f7ff ff95 	bl	80006f0 <std>
 80007c6:	2201      	movs	r2, #1
 80007c8:	2109      	movs	r1, #9
 80007ca:	4807      	ldr	r0, [pc, #28]	; (80007e8 <global_stdio_init.part.0+0x34>)
 80007cc:	f7ff ff90 	bl	80006f0 <std>
 80007d0:	2202      	movs	r2, #2
 80007d2:	2112      	movs	r1, #18
 80007d4:	4805      	ldr	r0, [pc, #20]	; (80007ec <global_stdio_init.part.0+0x38>)
 80007d6:	f7ff ff8b 	bl	80006f0 <std>
 80007da:	bd10      	pop	{r4, pc}
 80007dc:	200001c0 	.word	0x200001c0
 80007e0:	0800075d 	.word	0x0800075d
 80007e4:	20000088 	.word	0x20000088
 80007e8:	200000f0 	.word	0x200000f0
 80007ec:	20000158 	.word	0x20000158

080007f0 <__sfp_lock_acquire>:
 80007f0:	b510      	push	{r4, lr}
 80007f2:	4802      	ldr	r0, [pc, #8]	; (80007fc <__sfp_lock_acquire+0xc>)
 80007f4:	f000 fa37 	bl	8000c66 <__retarget_lock_acquire_recursive>
 80007f8:	bd10      	pop	{r4, pc}
 80007fa:	46c0      	nop			; (mov r8, r8)
 80007fc:	200001c9 	.word	0x200001c9

08000800 <__sfp_lock_release>:
 8000800:	b510      	push	{r4, lr}
 8000802:	4802      	ldr	r0, [pc, #8]	; (800080c <__sfp_lock_release+0xc>)
 8000804:	f000 fa30 	bl	8000c68 <__retarget_lock_release_recursive>
 8000808:	bd10      	pop	{r4, pc}
 800080a:	46c0      	nop			; (mov r8, r8)
 800080c:	200001c9 	.word	0x200001c9

08000810 <__sinit>:
 8000810:	b510      	push	{r4, lr}
 8000812:	0004      	movs	r4, r0
 8000814:	f7ff ffec 	bl	80007f0 <__sfp_lock_acquire>
 8000818:	6a23      	ldr	r3, [r4, #32]
 800081a:	2b00      	cmp	r3, #0
 800081c:	d002      	beq.n	8000824 <__sinit+0x14>
 800081e:	f7ff ffef 	bl	8000800 <__sfp_lock_release>
 8000822:	bd10      	pop	{r4, pc}
 8000824:	4b04      	ldr	r3, [pc, #16]	; (8000838 <__sinit+0x28>)
 8000826:	6223      	str	r3, [r4, #32]
 8000828:	4b04      	ldr	r3, [pc, #16]	; (800083c <__sinit+0x2c>)
 800082a:	681b      	ldr	r3, [r3, #0]
 800082c:	2b00      	cmp	r3, #0
 800082e:	d1f6      	bne.n	800081e <__sinit+0xe>
 8000830:	f7ff ffc0 	bl	80007b4 <global_stdio_init.part.0>
 8000834:	e7f3      	b.n	800081e <__sinit+0xe>
 8000836:	46c0      	nop			; (mov r8, r8)
 8000838:	08000779 	.word	0x08000779
 800083c:	200001c0 	.word	0x200001c0

08000840 <_fwalk_sglue>:
 8000840:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000842:	0014      	movs	r4, r2
 8000844:	2600      	movs	r6, #0
 8000846:	9000      	str	r0, [sp, #0]
 8000848:	9101      	str	r1, [sp, #4]
 800084a:	68a5      	ldr	r5, [r4, #8]
 800084c:	6867      	ldr	r7, [r4, #4]
 800084e:	3f01      	subs	r7, #1
 8000850:	d504      	bpl.n	800085c <_fwalk_sglue+0x1c>
 8000852:	6824      	ldr	r4, [r4, #0]
 8000854:	2c00      	cmp	r4, #0
 8000856:	d1f8      	bne.n	800084a <_fwalk_sglue+0xa>
 8000858:	0030      	movs	r0, r6
 800085a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800085c:	89ab      	ldrh	r3, [r5, #12]
 800085e:	2b01      	cmp	r3, #1
 8000860:	d908      	bls.n	8000874 <_fwalk_sglue+0x34>
 8000862:	220e      	movs	r2, #14
 8000864:	5eab      	ldrsh	r3, [r5, r2]
 8000866:	3301      	adds	r3, #1
 8000868:	d004      	beq.n	8000874 <_fwalk_sglue+0x34>
 800086a:	0029      	movs	r1, r5
 800086c:	9800      	ldr	r0, [sp, #0]
 800086e:	9b01      	ldr	r3, [sp, #4]
 8000870:	4798      	blx	r3
 8000872:	4306      	orrs	r6, r0
 8000874:	3568      	adds	r5, #104	; 0x68
 8000876:	e7ea      	b.n	800084e <_fwalk_sglue+0xe>

08000878 <iprintf>:
 8000878:	b40f      	push	{r0, r1, r2, r3}
 800087a:	b507      	push	{r0, r1, r2, lr}
 800087c:	4905      	ldr	r1, [pc, #20]	; (8000894 <iprintf+0x1c>)
 800087e:	ab04      	add	r3, sp, #16
 8000880:	6808      	ldr	r0, [r1, #0]
 8000882:	cb04      	ldmia	r3!, {r2}
 8000884:	6881      	ldr	r1, [r0, #8]
 8000886:	9301      	str	r3, [sp, #4]
 8000888:	f000 fc6c 	bl	8001164 <_vfiprintf_r>
 800088c:	b003      	add	sp, #12
 800088e:	bc08      	pop	{r3}
 8000890:	b004      	add	sp, #16
 8000892:	4718      	bx	r3
 8000894:	20000010 	.word	0x20000010

08000898 <_puts_r>:
 8000898:	6a03      	ldr	r3, [r0, #32]
 800089a:	b570      	push	{r4, r5, r6, lr}
 800089c:	0005      	movs	r5, r0
 800089e:	000e      	movs	r6, r1
 80008a0:	6884      	ldr	r4, [r0, #8]
 80008a2:	2b00      	cmp	r3, #0
 80008a4:	d101      	bne.n	80008aa <_puts_r+0x12>
 80008a6:	f7ff ffb3 	bl	8000810 <__sinit>
 80008aa:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80008ac:	07db      	lsls	r3, r3, #31
 80008ae:	d405      	bmi.n	80008bc <_puts_r+0x24>
 80008b0:	89a3      	ldrh	r3, [r4, #12]
 80008b2:	059b      	lsls	r3, r3, #22
 80008b4:	d402      	bmi.n	80008bc <_puts_r+0x24>
 80008b6:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80008b8:	f000 f9d5 	bl	8000c66 <__retarget_lock_acquire_recursive>
 80008bc:	89a3      	ldrh	r3, [r4, #12]
 80008be:	071b      	lsls	r3, r3, #28
 80008c0:	d502      	bpl.n	80008c8 <_puts_r+0x30>
 80008c2:	6923      	ldr	r3, [r4, #16]
 80008c4:	2b00      	cmp	r3, #0
 80008c6:	d11a      	bne.n	80008fe <_puts_r+0x66>
 80008c8:	0021      	movs	r1, r4
 80008ca:	0028      	movs	r0, r5
 80008cc:	f000 f8f2 	bl	8000ab4 <__swsetup_r>
 80008d0:	2800      	cmp	r0, #0
 80008d2:	d014      	beq.n	80008fe <_puts_r+0x66>
 80008d4:	2501      	movs	r5, #1
 80008d6:	426d      	negs	r5, r5
 80008d8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80008da:	07db      	lsls	r3, r3, #31
 80008dc:	d405      	bmi.n	80008ea <_puts_r+0x52>
 80008de:	89a3      	ldrh	r3, [r4, #12]
 80008e0:	059b      	lsls	r3, r3, #22
 80008e2:	d402      	bmi.n	80008ea <_puts_r+0x52>
 80008e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80008e6:	f000 f9bf 	bl	8000c68 <__retarget_lock_release_recursive>
 80008ea:	0028      	movs	r0, r5
 80008ec:	bd70      	pop	{r4, r5, r6, pc}
 80008ee:	3601      	adds	r6, #1
 80008f0:	60a3      	str	r3, [r4, #8]
 80008f2:	2b00      	cmp	r3, #0
 80008f4:	db14      	blt.n	8000920 <_puts_r+0x88>
 80008f6:	6823      	ldr	r3, [r4, #0]
 80008f8:	1c5a      	adds	r2, r3, #1
 80008fa:	6022      	str	r2, [r4, #0]
 80008fc:	7019      	strb	r1, [r3, #0]
 80008fe:	68a3      	ldr	r3, [r4, #8]
 8000900:	7831      	ldrb	r1, [r6, #0]
 8000902:	3b01      	subs	r3, #1
 8000904:	2900      	cmp	r1, #0
 8000906:	d1f2      	bne.n	80008ee <_puts_r+0x56>
 8000908:	60a3      	str	r3, [r4, #8]
 800090a:	2b00      	cmp	r3, #0
 800090c:	da14      	bge.n	8000938 <_puts_r+0xa0>
 800090e:	0022      	movs	r2, r4
 8000910:	0028      	movs	r0, r5
 8000912:	310a      	adds	r1, #10
 8000914:	f000 f88c 	bl	8000a30 <__swbuf_r>
 8000918:	3001      	adds	r0, #1
 800091a:	d0db      	beq.n	80008d4 <_puts_r+0x3c>
 800091c:	250a      	movs	r5, #10
 800091e:	e7db      	b.n	80008d8 <_puts_r+0x40>
 8000920:	69a2      	ldr	r2, [r4, #24]
 8000922:	429a      	cmp	r2, r3
 8000924:	dc01      	bgt.n	800092a <_puts_r+0x92>
 8000926:	290a      	cmp	r1, #10
 8000928:	d1e5      	bne.n	80008f6 <_puts_r+0x5e>
 800092a:	0022      	movs	r2, r4
 800092c:	0028      	movs	r0, r5
 800092e:	f000 f87f 	bl	8000a30 <__swbuf_r>
 8000932:	3001      	adds	r0, #1
 8000934:	d1e3      	bne.n	80008fe <_puts_r+0x66>
 8000936:	e7cd      	b.n	80008d4 <_puts_r+0x3c>
 8000938:	6823      	ldr	r3, [r4, #0]
 800093a:	1c5a      	adds	r2, r3, #1
 800093c:	6022      	str	r2, [r4, #0]
 800093e:	220a      	movs	r2, #10
 8000940:	701a      	strb	r2, [r3, #0]
 8000942:	e7eb      	b.n	800091c <_puts_r+0x84>

08000944 <puts>:
 8000944:	b510      	push	{r4, lr}
 8000946:	4b03      	ldr	r3, [pc, #12]	; (8000954 <puts+0x10>)
 8000948:	0001      	movs	r1, r0
 800094a:	6818      	ldr	r0, [r3, #0]
 800094c:	f7ff ffa4 	bl	8000898 <_puts_r>
 8000950:	bd10      	pop	{r4, pc}
 8000952:	46c0      	nop			; (mov r8, r8)
 8000954:	20000010 	.word	0x20000010

08000958 <siprintf>:
 8000958:	b40e      	push	{r1, r2, r3}
 800095a:	b500      	push	{lr}
 800095c:	490b      	ldr	r1, [pc, #44]	; (800098c <siprintf+0x34>)
 800095e:	b09c      	sub	sp, #112	; 0x70
 8000960:	ab1d      	add	r3, sp, #116	; 0x74
 8000962:	9002      	str	r0, [sp, #8]
 8000964:	9006      	str	r0, [sp, #24]
 8000966:	9107      	str	r1, [sp, #28]
 8000968:	9104      	str	r1, [sp, #16]
 800096a:	4809      	ldr	r0, [pc, #36]	; (8000990 <siprintf+0x38>)
 800096c:	4909      	ldr	r1, [pc, #36]	; (8000994 <siprintf+0x3c>)
 800096e:	cb04      	ldmia	r3!, {r2}
 8000970:	9105      	str	r1, [sp, #20]
 8000972:	6800      	ldr	r0, [r0, #0]
 8000974:	a902      	add	r1, sp, #8
 8000976:	9301      	str	r3, [sp, #4]
 8000978:	f000 face 	bl	8000f18 <_svfiprintf_r>
 800097c:	2200      	movs	r2, #0
 800097e:	9b02      	ldr	r3, [sp, #8]
 8000980:	701a      	strb	r2, [r3, #0]
 8000982:	b01c      	add	sp, #112	; 0x70
 8000984:	bc08      	pop	{r3}
 8000986:	b003      	add	sp, #12
 8000988:	4718      	bx	r3
 800098a:	46c0      	nop			; (mov r8, r8)
 800098c:	7fffffff 	.word	0x7fffffff
 8000990:	20000010 	.word	0x20000010
 8000994:	ffff0208 	.word	0xffff0208

08000998 <__sread>:
 8000998:	b570      	push	{r4, r5, r6, lr}
 800099a:	000c      	movs	r4, r1
 800099c:	250e      	movs	r5, #14
 800099e:	5f49      	ldrsh	r1, [r1, r5]
 80009a0:	f000 f914 	bl	8000bcc <_read_r>
 80009a4:	2800      	cmp	r0, #0
 80009a6:	db03      	blt.n	80009b0 <__sread+0x18>
 80009a8:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80009aa:	181b      	adds	r3, r3, r0
 80009ac:	6563      	str	r3, [r4, #84]	; 0x54
 80009ae:	bd70      	pop	{r4, r5, r6, pc}
 80009b0:	89a3      	ldrh	r3, [r4, #12]
 80009b2:	4a02      	ldr	r2, [pc, #8]	; (80009bc <__sread+0x24>)
 80009b4:	4013      	ands	r3, r2
 80009b6:	81a3      	strh	r3, [r4, #12]
 80009b8:	e7f9      	b.n	80009ae <__sread+0x16>
 80009ba:	46c0      	nop			; (mov r8, r8)
 80009bc:	ffffefff 	.word	0xffffefff

080009c0 <__swrite>:
 80009c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009c2:	001f      	movs	r7, r3
 80009c4:	898b      	ldrh	r3, [r1, #12]
 80009c6:	0005      	movs	r5, r0
 80009c8:	000c      	movs	r4, r1
 80009ca:	0016      	movs	r6, r2
 80009cc:	05db      	lsls	r3, r3, #23
 80009ce:	d505      	bpl.n	80009dc <__swrite+0x1c>
 80009d0:	230e      	movs	r3, #14
 80009d2:	5ec9      	ldrsh	r1, [r1, r3]
 80009d4:	2200      	movs	r2, #0
 80009d6:	2302      	movs	r3, #2
 80009d8:	f000 f8e4 	bl	8000ba4 <_lseek_r>
 80009dc:	89a3      	ldrh	r3, [r4, #12]
 80009de:	4a05      	ldr	r2, [pc, #20]	; (80009f4 <__swrite+0x34>)
 80009e0:	0028      	movs	r0, r5
 80009e2:	4013      	ands	r3, r2
 80009e4:	81a3      	strh	r3, [r4, #12]
 80009e6:	0032      	movs	r2, r6
 80009e8:	230e      	movs	r3, #14
 80009ea:	5ee1      	ldrsh	r1, [r4, r3]
 80009ec:	003b      	movs	r3, r7
 80009ee:	f000 f901 	bl	8000bf4 <_write_r>
 80009f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009f4:	ffffefff 	.word	0xffffefff

080009f8 <__sseek>:
 80009f8:	b570      	push	{r4, r5, r6, lr}
 80009fa:	000c      	movs	r4, r1
 80009fc:	250e      	movs	r5, #14
 80009fe:	5f49      	ldrsh	r1, [r1, r5]
 8000a00:	f000 f8d0 	bl	8000ba4 <_lseek_r>
 8000a04:	89a3      	ldrh	r3, [r4, #12]
 8000a06:	1c42      	adds	r2, r0, #1
 8000a08:	d103      	bne.n	8000a12 <__sseek+0x1a>
 8000a0a:	4a05      	ldr	r2, [pc, #20]	; (8000a20 <__sseek+0x28>)
 8000a0c:	4013      	ands	r3, r2
 8000a0e:	81a3      	strh	r3, [r4, #12]
 8000a10:	bd70      	pop	{r4, r5, r6, pc}
 8000a12:	2280      	movs	r2, #128	; 0x80
 8000a14:	0152      	lsls	r2, r2, #5
 8000a16:	4313      	orrs	r3, r2
 8000a18:	81a3      	strh	r3, [r4, #12]
 8000a1a:	6560      	str	r0, [r4, #84]	; 0x54
 8000a1c:	e7f8      	b.n	8000a10 <__sseek+0x18>
 8000a1e:	46c0      	nop			; (mov r8, r8)
 8000a20:	ffffefff 	.word	0xffffefff

08000a24 <__sclose>:
 8000a24:	b510      	push	{r4, lr}
 8000a26:	230e      	movs	r3, #14
 8000a28:	5ec9      	ldrsh	r1, [r1, r3]
 8000a2a:	f000 f8a9 	bl	8000b80 <_close_r>
 8000a2e:	bd10      	pop	{r4, pc}

08000a30 <__swbuf_r>:
 8000a30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a32:	0006      	movs	r6, r0
 8000a34:	000d      	movs	r5, r1
 8000a36:	0014      	movs	r4, r2
 8000a38:	2800      	cmp	r0, #0
 8000a3a:	d004      	beq.n	8000a46 <__swbuf_r+0x16>
 8000a3c:	6a03      	ldr	r3, [r0, #32]
 8000a3e:	2b00      	cmp	r3, #0
 8000a40:	d101      	bne.n	8000a46 <__swbuf_r+0x16>
 8000a42:	f7ff fee5 	bl	8000810 <__sinit>
 8000a46:	69a3      	ldr	r3, [r4, #24]
 8000a48:	60a3      	str	r3, [r4, #8]
 8000a4a:	89a3      	ldrh	r3, [r4, #12]
 8000a4c:	071b      	lsls	r3, r3, #28
 8000a4e:	d502      	bpl.n	8000a56 <__swbuf_r+0x26>
 8000a50:	6923      	ldr	r3, [r4, #16]
 8000a52:	2b00      	cmp	r3, #0
 8000a54:	d109      	bne.n	8000a6a <__swbuf_r+0x3a>
 8000a56:	0021      	movs	r1, r4
 8000a58:	0030      	movs	r0, r6
 8000a5a:	f000 f82b 	bl	8000ab4 <__swsetup_r>
 8000a5e:	2800      	cmp	r0, #0
 8000a60:	d003      	beq.n	8000a6a <__swbuf_r+0x3a>
 8000a62:	2501      	movs	r5, #1
 8000a64:	426d      	negs	r5, r5
 8000a66:	0028      	movs	r0, r5
 8000a68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a6a:	6923      	ldr	r3, [r4, #16]
 8000a6c:	6820      	ldr	r0, [r4, #0]
 8000a6e:	b2ef      	uxtb	r7, r5
 8000a70:	1ac0      	subs	r0, r0, r3
 8000a72:	6963      	ldr	r3, [r4, #20]
 8000a74:	b2ed      	uxtb	r5, r5
 8000a76:	4283      	cmp	r3, r0
 8000a78:	dc05      	bgt.n	8000a86 <__swbuf_r+0x56>
 8000a7a:	0021      	movs	r1, r4
 8000a7c:	0030      	movs	r0, r6
 8000a7e:	f000 fea5 	bl	80017cc <_fflush_r>
 8000a82:	2800      	cmp	r0, #0
 8000a84:	d1ed      	bne.n	8000a62 <__swbuf_r+0x32>
 8000a86:	68a3      	ldr	r3, [r4, #8]
 8000a88:	3001      	adds	r0, #1
 8000a8a:	3b01      	subs	r3, #1
 8000a8c:	60a3      	str	r3, [r4, #8]
 8000a8e:	6823      	ldr	r3, [r4, #0]
 8000a90:	1c5a      	adds	r2, r3, #1
 8000a92:	6022      	str	r2, [r4, #0]
 8000a94:	701f      	strb	r7, [r3, #0]
 8000a96:	6963      	ldr	r3, [r4, #20]
 8000a98:	4283      	cmp	r3, r0
 8000a9a:	d004      	beq.n	8000aa6 <__swbuf_r+0x76>
 8000a9c:	89a3      	ldrh	r3, [r4, #12]
 8000a9e:	07db      	lsls	r3, r3, #31
 8000aa0:	d5e1      	bpl.n	8000a66 <__swbuf_r+0x36>
 8000aa2:	2d0a      	cmp	r5, #10
 8000aa4:	d1df      	bne.n	8000a66 <__swbuf_r+0x36>
 8000aa6:	0021      	movs	r1, r4
 8000aa8:	0030      	movs	r0, r6
 8000aaa:	f000 fe8f 	bl	80017cc <_fflush_r>
 8000aae:	2800      	cmp	r0, #0
 8000ab0:	d0d9      	beq.n	8000a66 <__swbuf_r+0x36>
 8000ab2:	e7d6      	b.n	8000a62 <__swbuf_r+0x32>

08000ab4 <__swsetup_r>:
 8000ab4:	4b2d      	ldr	r3, [pc, #180]	; (8000b6c <__swsetup_r+0xb8>)
 8000ab6:	b570      	push	{r4, r5, r6, lr}
 8000ab8:	0005      	movs	r5, r0
 8000aba:	6818      	ldr	r0, [r3, #0]
 8000abc:	000c      	movs	r4, r1
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	d004      	beq.n	8000acc <__swsetup_r+0x18>
 8000ac2:	6a03      	ldr	r3, [r0, #32]
 8000ac4:	2b00      	cmp	r3, #0
 8000ac6:	d101      	bne.n	8000acc <__swsetup_r+0x18>
 8000ac8:	f7ff fea2 	bl	8000810 <__sinit>
 8000acc:	230c      	movs	r3, #12
 8000ace:	5ee2      	ldrsh	r2, [r4, r3]
 8000ad0:	0713      	lsls	r3, r2, #28
 8000ad2:	d423      	bmi.n	8000b1c <__swsetup_r+0x68>
 8000ad4:	06d3      	lsls	r3, r2, #27
 8000ad6:	d407      	bmi.n	8000ae8 <__swsetup_r+0x34>
 8000ad8:	2309      	movs	r3, #9
 8000ada:	602b      	str	r3, [r5, #0]
 8000adc:	2340      	movs	r3, #64	; 0x40
 8000ade:	2001      	movs	r0, #1
 8000ae0:	4313      	orrs	r3, r2
 8000ae2:	81a3      	strh	r3, [r4, #12]
 8000ae4:	4240      	negs	r0, r0
 8000ae6:	e03a      	b.n	8000b5e <__swsetup_r+0xaa>
 8000ae8:	0752      	lsls	r2, r2, #29
 8000aea:	d513      	bpl.n	8000b14 <__swsetup_r+0x60>
 8000aec:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000aee:	2900      	cmp	r1, #0
 8000af0:	d008      	beq.n	8000b04 <__swsetup_r+0x50>
 8000af2:	0023      	movs	r3, r4
 8000af4:	3344      	adds	r3, #68	; 0x44
 8000af6:	4299      	cmp	r1, r3
 8000af8:	d002      	beq.n	8000b00 <__swsetup_r+0x4c>
 8000afa:	0028      	movs	r0, r5
 8000afc:	f000 f8b6 	bl	8000c6c <_free_r>
 8000b00:	2300      	movs	r3, #0
 8000b02:	6363      	str	r3, [r4, #52]	; 0x34
 8000b04:	2224      	movs	r2, #36	; 0x24
 8000b06:	89a3      	ldrh	r3, [r4, #12]
 8000b08:	4393      	bics	r3, r2
 8000b0a:	81a3      	strh	r3, [r4, #12]
 8000b0c:	2300      	movs	r3, #0
 8000b0e:	6063      	str	r3, [r4, #4]
 8000b10:	6923      	ldr	r3, [r4, #16]
 8000b12:	6023      	str	r3, [r4, #0]
 8000b14:	2308      	movs	r3, #8
 8000b16:	89a2      	ldrh	r2, [r4, #12]
 8000b18:	4313      	orrs	r3, r2
 8000b1a:	81a3      	strh	r3, [r4, #12]
 8000b1c:	6923      	ldr	r3, [r4, #16]
 8000b1e:	2b00      	cmp	r3, #0
 8000b20:	d10b      	bne.n	8000b3a <__swsetup_r+0x86>
 8000b22:	21a0      	movs	r1, #160	; 0xa0
 8000b24:	2280      	movs	r2, #128	; 0x80
 8000b26:	89a3      	ldrh	r3, [r4, #12]
 8000b28:	0089      	lsls	r1, r1, #2
 8000b2a:	0092      	lsls	r2, r2, #2
 8000b2c:	400b      	ands	r3, r1
 8000b2e:	4293      	cmp	r3, r2
 8000b30:	d003      	beq.n	8000b3a <__swsetup_r+0x86>
 8000b32:	0021      	movs	r1, r4
 8000b34:	0028      	movs	r0, r5
 8000b36:	f000 fe9f 	bl	8001878 <__smakebuf_r>
 8000b3a:	230c      	movs	r3, #12
 8000b3c:	5ee2      	ldrsh	r2, [r4, r3]
 8000b3e:	2101      	movs	r1, #1
 8000b40:	0013      	movs	r3, r2
 8000b42:	400b      	ands	r3, r1
 8000b44:	420a      	tst	r2, r1
 8000b46:	d00b      	beq.n	8000b60 <__swsetup_r+0xac>
 8000b48:	2300      	movs	r3, #0
 8000b4a:	60a3      	str	r3, [r4, #8]
 8000b4c:	6963      	ldr	r3, [r4, #20]
 8000b4e:	425b      	negs	r3, r3
 8000b50:	61a3      	str	r3, [r4, #24]
 8000b52:	2000      	movs	r0, #0
 8000b54:	6923      	ldr	r3, [r4, #16]
 8000b56:	4283      	cmp	r3, r0
 8000b58:	d101      	bne.n	8000b5e <__swsetup_r+0xaa>
 8000b5a:	0613      	lsls	r3, r2, #24
 8000b5c:	d4be      	bmi.n	8000adc <__swsetup_r+0x28>
 8000b5e:	bd70      	pop	{r4, r5, r6, pc}
 8000b60:	0791      	lsls	r1, r2, #30
 8000b62:	d400      	bmi.n	8000b66 <__swsetup_r+0xb2>
 8000b64:	6963      	ldr	r3, [r4, #20]
 8000b66:	60a3      	str	r3, [r4, #8]
 8000b68:	e7f3      	b.n	8000b52 <__swsetup_r+0x9e>
 8000b6a:	46c0      	nop			; (mov r8, r8)
 8000b6c:	20000010 	.word	0x20000010

08000b70 <memset>:
 8000b70:	0003      	movs	r3, r0
 8000b72:	1882      	adds	r2, r0, r2
 8000b74:	4293      	cmp	r3, r2
 8000b76:	d100      	bne.n	8000b7a <memset+0xa>
 8000b78:	4770      	bx	lr
 8000b7a:	7019      	strb	r1, [r3, #0]
 8000b7c:	3301      	adds	r3, #1
 8000b7e:	e7f9      	b.n	8000b74 <memset+0x4>

08000b80 <_close_r>:
 8000b80:	2300      	movs	r3, #0
 8000b82:	b570      	push	{r4, r5, r6, lr}
 8000b84:	4d06      	ldr	r5, [pc, #24]	; (8000ba0 <_close_r+0x20>)
 8000b86:	0004      	movs	r4, r0
 8000b88:	0008      	movs	r0, r1
 8000b8a:	602b      	str	r3, [r5, #0]
 8000b8c:	f001 f81c 	bl	8001bc8 <_close>
 8000b90:	1c43      	adds	r3, r0, #1
 8000b92:	d103      	bne.n	8000b9c <_close_r+0x1c>
 8000b94:	682b      	ldr	r3, [r5, #0]
 8000b96:	2b00      	cmp	r3, #0
 8000b98:	d000      	beq.n	8000b9c <_close_r+0x1c>
 8000b9a:	6023      	str	r3, [r4, #0]
 8000b9c:	bd70      	pop	{r4, r5, r6, pc}
 8000b9e:	46c0      	nop			; (mov r8, r8)
 8000ba0:	200001c4 	.word	0x200001c4

08000ba4 <_lseek_r>:
 8000ba4:	b570      	push	{r4, r5, r6, lr}
 8000ba6:	0004      	movs	r4, r0
 8000ba8:	0008      	movs	r0, r1
 8000baa:	0011      	movs	r1, r2
 8000bac:	001a      	movs	r2, r3
 8000bae:	2300      	movs	r3, #0
 8000bb0:	4d05      	ldr	r5, [pc, #20]	; (8000bc8 <_lseek_r+0x24>)
 8000bb2:	602b      	str	r3, [r5, #0]
 8000bb4:	f000 ffc9 	bl	8001b4a <_lseek>
 8000bb8:	1c43      	adds	r3, r0, #1
 8000bba:	d103      	bne.n	8000bc4 <_lseek_r+0x20>
 8000bbc:	682b      	ldr	r3, [r5, #0]
 8000bbe:	2b00      	cmp	r3, #0
 8000bc0:	d000      	beq.n	8000bc4 <_lseek_r+0x20>
 8000bc2:	6023      	str	r3, [r4, #0]
 8000bc4:	bd70      	pop	{r4, r5, r6, pc}
 8000bc6:	46c0      	nop			; (mov r8, r8)
 8000bc8:	200001c4 	.word	0x200001c4

08000bcc <_read_r>:
 8000bcc:	b570      	push	{r4, r5, r6, lr}
 8000bce:	0004      	movs	r4, r0
 8000bd0:	0008      	movs	r0, r1
 8000bd2:	0011      	movs	r1, r2
 8000bd4:	001a      	movs	r2, r3
 8000bd6:	2300      	movs	r3, #0
 8000bd8:	4d05      	ldr	r5, [pc, #20]	; (8000bf0 <_read_r+0x24>)
 8000bda:	602b      	str	r3, [r5, #0]
 8000bdc:	f000 ff60 	bl	8001aa0 <_read>
 8000be0:	1c43      	adds	r3, r0, #1
 8000be2:	d103      	bne.n	8000bec <_read_r+0x20>
 8000be4:	682b      	ldr	r3, [r5, #0]
 8000be6:	2b00      	cmp	r3, #0
 8000be8:	d000      	beq.n	8000bec <_read_r+0x20>
 8000bea:	6023      	str	r3, [r4, #0]
 8000bec:	bd70      	pop	{r4, r5, r6, pc}
 8000bee:	46c0      	nop			; (mov r8, r8)
 8000bf0:	200001c4 	.word	0x200001c4

08000bf4 <_write_r>:
 8000bf4:	b570      	push	{r4, r5, r6, lr}
 8000bf6:	0004      	movs	r4, r0
 8000bf8:	0008      	movs	r0, r1
 8000bfa:	0011      	movs	r1, r2
 8000bfc:	001a      	movs	r2, r3
 8000bfe:	2300      	movs	r3, #0
 8000c00:	4d05      	ldr	r5, [pc, #20]	; (8000c18 <_write_r+0x24>)
 8000c02:	602b      	str	r3, [r5, #0]
 8000c04:	f000 ffb5 	bl	8001b72 <_write>
 8000c08:	1c43      	adds	r3, r0, #1
 8000c0a:	d103      	bne.n	8000c14 <_write_r+0x20>
 8000c0c:	682b      	ldr	r3, [r5, #0]
 8000c0e:	2b00      	cmp	r3, #0
 8000c10:	d000      	beq.n	8000c14 <_write_r+0x20>
 8000c12:	6023      	str	r3, [r4, #0]
 8000c14:	bd70      	pop	{r4, r5, r6, pc}
 8000c16:	46c0      	nop			; (mov r8, r8)
 8000c18:	200001c4 	.word	0x200001c4

08000c1c <__libc_init_array>:
 8000c1c:	b570      	push	{r4, r5, r6, lr}
 8000c1e:	2600      	movs	r6, #0
 8000c20:	4c0c      	ldr	r4, [pc, #48]	; (8000c54 <__libc_init_array+0x38>)
 8000c22:	4d0d      	ldr	r5, [pc, #52]	; (8000c58 <__libc_init_array+0x3c>)
 8000c24:	1b64      	subs	r4, r4, r5
 8000c26:	10a4      	asrs	r4, r4, #2
 8000c28:	42a6      	cmp	r6, r4
 8000c2a:	d109      	bne.n	8000c40 <__libc_init_array+0x24>
 8000c2c:	2600      	movs	r6, #0
 8000c2e:	f001 f9b7 	bl	8001fa0 <_init>
 8000c32:	4c0a      	ldr	r4, [pc, #40]	; (8000c5c <__libc_init_array+0x40>)
 8000c34:	4d0a      	ldr	r5, [pc, #40]	; (8000c60 <__libc_init_array+0x44>)
 8000c36:	1b64      	subs	r4, r4, r5
 8000c38:	10a4      	asrs	r4, r4, #2
 8000c3a:	42a6      	cmp	r6, r4
 8000c3c:	d105      	bne.n	8000c4a <__libc_init_array+0x2e>
 8000c3e:	bd70      	pop	{r4, r5, r6, pc}
 8000c40:	00b3      	lsls	r3, r6, #2
 8000c42:	58eb      	ldr	r3, [r5, r3]
 8000c44:	4798      	blx	r3
 8000c46:	3601      	adds	r6, #1
 8000c48:	e7ee      	b.n	8000c28 <__libc_init_array+0xc>
 8000c4a:	00b3      	lsls	r3, r6, #2
 8000c4c:	58eb      	ldr	r3, [r5, r3]
 8000c4e:	4798      	blx	r3
 8000c50:	3601      	adds	r6, #1
 8000c52:	e7f2      	b.n	8000c3a <__libc_init_array+0x1e>
 8000c54:	08002074 	.word	0x08002074
 8000c58:	08002074 	.word	0x08002074
 8000c5c:	08002078 	.word	0x08002078
 8000c60:	08002074 	.word	0x08002074

08000c64 <__retarget_lock_init_recursive>:
 8000c64:	4770      	bx	lr

08000c66 <__retarget_lock_acquire_recursive>:
 8000c66:	4770      	bx	lr

08000c68 <__retarget_lock_release_recursive>:
 8000c68:	4770      	bx	lr
	...

08000c6c <_free_r>:
 8000c6c:	b570      	push	{r4, r5, r6, lr}
 8000c6e:	0005      	movs	r5, r0
 8000c70:	1e0c      	subs	r4, r1, #0
 8000c72:	d010      	beq.n	8000c96 <_free_r+0x2a>
 8000c74:	3c04      	subs	r4, #4
 8000c76:	6823      	ldr	r3, [r4, #0]
 8000c78:	2b00      	cmp	r3, #0
 8000c7a:	da00      	bge.n	8000c7e <_free_r+0x12>
 8000c7c:	18e4      	adds	r4, r4, r3
 8000c7e:	0028      	movs	r0, r5
 8000c80:	f000 f8da 	bl	8000e38 <__malloc_lock>
 8000c84:	4a1d      	ldr	r2, [pc, #116]	; (8000cfc <_free_r+0x90>)
 8000c86:	6813      	ldr	r3, [r2, #0]
 8000c88:	2b00      	cmp	r3, #0
 8000c8a:	d105      	bne.n	8000c98 <_free_r+0x2c>
 8000c8c:	6063      	str	r3, [r4, #4]
 8000c8e:	6014      	str	r4, [r2, #0]
 8000c90:	0028      	movs	r0, r5
 8000c92:	f000 f8d9 	bl	8000e48 <__malloc_unlock>
 8000c96:	bd70      	pop	{r4, r5, r6, pc}
 8000c98:	42a3      	cmp	r3, r4
 8000c9a:	d908      	bls.n	8000cae <_free_r+0x42>
 8000c9c:	6820      	ldr	r0, [r4, #0]
 8000c9e:	1821      	adds	r1, r4, r0
 8000ca0:	428b      	cmp	r3, r1
 8000ca2:	d1f3      	bne.n	8000c8c <_free_r+0x20>
 8000ca4:	6819      	ldr	r1, [r3, #0]
 8000ca6:	685b      	ldr	r3, [r3, #4]
 8000ca8:	1809      	adds	r1, r1, r0
 8000caa:	6021      	str	r1, [r4, #0]
 8000cac:	e7ee      	b.n	8000c8c <_free_r+0x20>
 8000cae:	001a      	movs	r2, r3
 8000cb0:	685b      	ldr	r3, [r3, #4]
 8000cb2:	2b00      	cmp	r3, #0
 8000cb4:	d001      	beq.n	8000cba <_free_r+0x4e>
 8000cb6:	42a3      	cmp	r3, r4
 8000cb8:	d9f9      	bls.n	8000cae <_free_r+0x42>
 8000cba:	6811      	ldr	r1, [r2, #0]
 8000cbc:	1850      	adds	r0, r2, r1
 8000cbe:	42a0      	cmp	r0, r4
 8000cc0:	d10b      	bne.n	8000cda <_free_r+0x6e>
 8000cc2:	6820      	ldr	r0, [r4, #0]
 8000cc4:	1809      	adds	r1, r1, r0
 8000cc6:	1850      	adds	r0, r2, r1
 8000cc8:	6011      	str	r1, [r2, #0]
 8000cca:	4283      	cmp	r3, r0
 8000ccc:	d1e0      	bne.n	8000c90 <_free_r+0x24>
 8000cce:	6818      	ldr	r0, [r3, #0]
 8000cd0:	685b      	ldr	r3, [r3, #4]
 8000cd2:	1841      	adds	r1, r0, r1
 8000cd4:	6011      	str	r1, [r2, #0]
 8000cd6:	6053      	str	r3, [r2, #4]
 8000cd8:	e7da      	b.n	8000c90 <_free_r+0x24>
 8000cda:	42a0      	cmp	r0, r4
 8000cdc:	d902      	bls.n	8000ce4 <_free_r+0x78>
 8000cde:	230c      	movs	r3, #12
 8000ce0:	602b      	str	r3, [r5, #0]
 8000ce2:	e7d5      	b.n	8000c90 <_free_r+0x24>
 8000ce4:	6820      	ldr	r0, [r4, #0]
 8000ce6:	1821      	adds	r1, r4, r0
 8000ce8:	428b      	cmp	r3, r1
 8000cea:	d103      	bne.n	8000cf4 <_free_r+0x88>
 8000cec:	6819      	ldr	r1, [r3, #0]
 8000cee:	685b      	ldr	r3, [r3, #4]
 8000cf0:	1809      	adds	r1, r1, r0
 8000cf2:	6021      	str	r1, [r4, #0]
 8000cf4:	6063      	str	r3, [r4, #4]
 8000cf6:	6054      	str	r4, [r2, #4]
 8000cf8:	e7ca      	b.n	8000c90 <_free_r+0x24>
 8000cfa:	46c0      	nop			; (mov r8, r8)
 8000cfc:	200001d0 	.word	0x200001d0

08000d00 <sbrk_aligned>:
 8000d00:	b570      	push	{r4, r5, r6, lr}
 8000d02:	4e0f      	ldr	r6, [pc, #60]	; (8000d40 <sbrk_aligned+0x40>)
 8000d04:	000d      	movs	r5, r1
 8000d06:	6831      	ldr	r1, [r6, #0]
 8000d08:	0004      	movs	r4, r0
 8000d0a:	2900      	cmp	r1, #0
 8000d0c:	d102      	bne.n	8000d14 <sbrk_aligned+0x14>
 8000d0e:	f000 fe2b 	bl	8001968 <_sbrk_r>
 8000d12:	6030      	str	r0, [r6, #0]
 8000d14:	0029      	movs	r1, r5
 8000d16:	0020      	movs	r0, r4
 8000d18:	f000 fe26 	bl	8001968 <_sbrk_r>
 8000d1c:	1c43      	adds	r3, r0, #1
 8000d1e:	d103      	bne.n	8000d28 <sbrk_aligned+0x28>
 8000d20:	2501      	movs	r5, #1
 8000d22:	426d      	negs	r5, r5
 8000d24:	0028      	movs	r0, r5
 8000d26:	bd70      	pop	{r4, r5, r6, pc}
 8000d28:	2303      	movs	r3, #3
 8000d2a:	1cc5      	adds	r5, r0, #3
 8000d2c:	439d      	bics	r5, r3
 8000d2e:	42a8      	cmp	r0, r5
 8000d30:	d0f8      	beq.n	8000d24 <sbrk_aligned+0x24>
 8000d32:	1a29      	subs	r1, r5, r0
 8000d34:	0020      	movs	r0, r4
 8000d36:	f000 fe17 	bl	8001968 <_sbrk_r>
 8000d3a:	3001      	adds	r0, #1
 8000d3c:	d1f2      	bne.n	8000d24 <sbrk_aligned+0x24>
 8000d3e:	e7ef      	b.n	8000d20 <sbrk_aligned+0x20>
 8000d40:	200001cc 	.word	0x200001cc

08000d44 <_malloc_r>:
 8000d44:	2303      	movs	r3, #3
 8000d46:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000d48:	1ccd      	adds	r5, r1, #3
 8000d4a:	439d      	bics	r5, r3
 8000d4c:	3508      	adds	r5, #8
 8000d4e:	0006      	movs	r6, r0
 8000d50:	2d0c      	cmp	r5, #12
 8000d52:	d234      	bcs.n	8000dbe <_malloc_r+0x7a>
 8000d54:	250c      	movs	r5, #12
 8000d56:	42a9      	cmp	r1, r5
 8000d58:	d833      	bhi.n	8000dc2 <_malloc_r+0x7e>
 8000d5a:	0030      	movs	r0, r6
 8000d5c:	f000 f86c 	bl	8000e38 <__malloc_lock>
 8000d60:	4f34      	ldr	r7, [pc, #208]	; (8000e34 <_malloc_r+0xf0>)
 8000d62:	683b      	ldr	r3, [r7, #0]
 8000d64:	001c      	movs	r4, r3
 8000d66:	2c00      	cmp	r4, #0
 8000d68:	d12f      	bne.n	8000dca <_malloc_r+0x86>
 8000d6a:	0029      	movs	r1, r5
 8000d6c:	0030      	movs	r0, r6
 8000d6e:	f7ff ffc7 	bl	8000d00 <sbrk_aligned>
 8000d72:	0004      	movs	r4, r0
 8000d74:	1c43      	adds	r3, r0, #1
 8000d76:	d158      	bne.n	8000e2a <_malloc_r+0xe6>
 8000d78:	683c      	ldr	r4, [r7, #0]
 8000d7a:	0021      	movs	r1, r4
 8000d7c:	2900      	cmp	r1, #0
 8000d7e:	d149      	bne.n	8000e14 <_malloc_r+0xd0>
 8000d80:	2c00      	cmp	r4, #0
 8000d82:	d04c      	beq.n	8000e1e <_malloc_r+0xda>
 8000d84:	6823      	ldr	r3, [r4, #0]
 8000d86:	0030      	movs	r0, r6
 8000d88:	18e3      	adds	r3, r4, r3
 8000d8a:	9301      	str	r3, [sp, #4]
 8000d8c:	f000 fdec 	bl	8001968 <_sbrk_r>
 8000d90:	9b01      	ldr	r3, [sp, #4]
 8000d92:	4283      	cmp	r3, r0
 8000d94:	d143      	bne.n	8000e1e <_malloc_r+0xda>
 8000d96:	6823      	ldr	r3, [r4, #0]
 8000d98:	0030      	movs	r0, r6
 8000d9a:	1aed      	subs	r5, r5, r3
 8000d9c:	0029      	movs	r1, r5
 8000d9e:	f7ff ffaf 	bl	8000d00 <sbrk_aligned>
 8000da2:	3001      	adds	r0, #1
 8000da4:	d03b      	beq.n	8000e1e <_malloc_r+0xda>
 8000da6:	6823      	ldr	r3, [r4, #0]
 8000da8:	195b      	adds	r3, r3, r5
 8000daa:	6023      	str	r3, [r4, #0]
 8000dac:	683b      	ldr	r3, [r7, #0]
 8000dae:	2b00      	cmp	r3, #0
 8000db0:	d03d      	beq.n	8000e2e <_malloc_r+0xea>
 8000db2:	685a      	ldr	r2, [r3, #4]
 8000db4:	42a2      	cmp	r2, r4
 8000db6:	d130      	bne.n	8000e1a <_malloc_r+0xd6>
 8000db8:	2200      	movs	r2, #0
 8000dba:	605a      	str	r2, [r3, #4]
 8000dbc:	e012      	b.n	8000de4 <_malloc_r+0xa0>
 8000dbe:	2d00      	cmp	r5, #0
 8000dc0:	dac9      	bge.n	8000d56 <_malloc_r+0x12>
 8000dc2:	230c      	movs	r3, #12
 8000dc4:	6033      	str	r3, [r6, #0]
 8000dc6:	2000      	movs	r0, #0
 8000dc8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000dca:	6821      	ldr	r1, [r4, #0]
 8000dcc:	1b49      	subs	r1, r1, r5
 8000dce:	d41e      	bmi.n	8000e0e <_malloc_r+0xca>
 8000dd0:	290b      	cmp	r1, #11
 8000dd2:	d917      	bls.n	8000e04 <_malloc_r+0xc0>
 8000dd4:	1962      	adds	r2, r4, r5
 8000dd6:	6025      	str	r5, [r4, #0]
 8000dd8:	42a3      	cmp	r3, r4
 8000dda:	d111      	bne.n	8000e00 <_malloc_r+0xbc>
 8000ddc:	603a      	str	r2, [r7, #0]
 8000dde:	6863      	ldr	r3, [r4, #4]
 8000de0:	6011      	str	r1, [r2, #0]
 8000de2:	6053      	str	r3, [r2, #4]
 8000de4:	0030      	movs	r0, r6
 8000de6:	f000 f82f 	bl	8000e48 <__malloc_unlock>
 8000dea:	0020      	movs	r0, r4
 8000dec:	2207      	movs	r2, #7
 8000dee:	300b      	adds	r0, #11
 8000df0:	1d23      	adds	r3, r4, #4
 8000df2:	4390      	bics	r0, r2
 8000df4:	1ac2      	subs	r2, r0, r3
 8000df6:	4298      	cmp	r0, r3
 8000df8:	d0e6      	beq.n	8000dc8 <_malloc_r+0x84>
 8000dfa:	1a1b      	subs	r3, r3, r0
 8000dfc:	50a3      	str	r3, [r4, r2]
 8000dfe:	e7e3      	b.n	8000dc8 <_malloc_r+0x84>
 8000e00:	605a      	str	r2, [r3, #4]
 8000e02:	e7ec      	b.n	8000dde <_malloc_r+0x9a>
 8000e04:	6862      	ldr	r2, [r4, #4]
 8000e06:	42a3      	cmp	r3, r4
 8000e08:	d1d7      	bne.n	8000dba <_malloc_r+0x76>
 8000e0a:	603a      	str	r2, [r7, #0]
 8000e0c:	e7ea      	b.n	8000de4 <_malloc_r+0xa0>
 8000e0e:	0023      	movs	r3, r4
 8000e10:	6864      	ldr	r4, [r4, #4]
 8000e12:	e7a8      	b.n	8000d66 <_malloc_r+0x22>
 8000e14:	000c      	movs	r4, r1
 8000e16:	6849      	ldr	r1, [r1, #4]
 8000e18:	e7b0      	b.n	8000d7c <_malloc_r+0x38>
 8000e1a:	0013      	movs	r3, r2
 8000e1c:	e7c7      	b.n	8000dae <_malloc_r+0x6a>
 8000e1e:	230c      	movs	r3, #12
 8000e20:	0030      	movs	r0, r6
 8000e22:	6033      	str	r3, [r6, #0]
 8000e24:	f000 f810 	bl	8000e48 <__malloc_unlock>
 8000e28:	e7cd      	b.n	8000dc6 <_malloc_r+0x82>
 8000e2a:	6005      	str	r5, [r0, #0]
 8000e2c:	e7da      	b.n	8000de4 <_malloc_r+0xa0>
 8000e2e:	605b      	str	r3, [r3, #4]
 8000e30:	deff      	udf	#255	; 0xff
 8000e32:	46c0      	nop			; (mov r8, r8)
 8000e34:	200001d0 	.word	0x200001d0

08000e38 <__malloc_lock>:
 8000e38:	b510      	push	{r4, lr}
 8000e3a:	4802      	ldr	r0, [pc, #8]	; (8000e44 <__malloc_lock+0xc>)
 8000e3c:	f7ff ff13 	bl	8000c66 <__retarget_lock_acquire_recursive>
 8000e40:	bd10      	pop	{r4, pc}
 8000e42:	46c0      	nop			; (mov r8, r8)
 8000e44:	200001c8 	.word	0x200001c8

08000e48 <__malloc_unlock>:
 8000e48:	b510      	push	{r4, lr}
 8000e4a:	4802      	ldr	r0, [pc, #8]	; (8000e54 <__malloc_unlock+0xc>)
 8000e4c:	f7ff ff0c 	bl	8000c68 <__retarget_lock_release_recursive>
 8000e50:	bd10      	pop	{r4, pc}
 8000e52:	46c0      	nop			; (mov r8, r8)
 8000e54:	200001c8 	.word	0x200001c8

08000e58 <__ssputs_r>:
 8000e58:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e5a:	688e      	ldr	r6, [r1, #8]
 8000e5c:	b085      	sub	sp, #20
 8000e5e:	001f      	movs	r7, r3
 8000e60:	000c      	movs	r4, r1
 8000e62:	680b      	ldr	r3, [r1, #0]
 8000e64:	9002      	str	r0, [sp, #8]
 8000e66:	9203      	str	r2, [sp, #12]
 8000e68:	42be      	cmp	r6, r7
 8000e6a:	d830      	bhi.n	8000ece <__ssputs_r+0x76>
 8000e6c:	210c      	movs	r1, #12
 8000e6e:	5e62      	ldrsh	r2, [r4, r1]
 8000e70:	2190      	movs	r1, #144	; 0x90
 8000e72:	00c9      	lsls	r1, r1, #3
 8000e74:	420a      	tst	r2, r1
 8000e76:	d028      	beq.n	8000eca <__ssputs_r+0x72>
 8000e78:	2003      	movs	r0, #3
 8000e7a:	6921      	ldr	r1, [r4, #16]
 8000e7c:	1a5b      	subs	r3, r3, r1
 8000e7e:	9301      	str	r3, [sp, #4]
 8000e80:	6963      	ldr	r3, [r4, #20]
 8000e82:	4343      	muls	r3, r0
 8000e84:	9801      	ldr	r0, [sp, #4]
 8000e86:	0fdd      	lsrs	r5, r3, #31
 8000e88:	18ed      	adds	r5, r5, r3
 8000e8a:	1c7b      	adds	r3, r7, #1
 8000e8c:	181b      	adds	r3, r3, r0
 8000e8e:	106d      	asrs	r5, r5, #1
 8000e90:	42ab      	cmp	r3, r5
 8000e92:	d900      	bls.n	8000e96 <__ssputs_r+0x3e>
 8000e94:	001d      	movs	r5, r3
 8000e96:	0552      	lsls	r2, r2, #21
 8000e98:	d528      	bpl.n	8000eec <__ssputs_r+0x94>
 8000e9a:	0029      	movs	r1, r5
 8000e9c:	9802      	ldr	r0, [sp, #8]
 8000e9e:	f7ff ff51 	bl	8000d44 <_malloc_r>
 8000ea2:	1e06      	subs	r6, r0, #0
 8000ea4:	d02c      	beq.n	8000f00 <__ssputs_r+0xa8>
 8000ea6:	9a01      	ldr	r2, [sp, #4]
 8000ea8:	6921      	ldr	r1, [r4, #16]
 8000eaa:	f000 fd7a 	bl	80019a2 <memcpy>
 8000eae:	89a2      	ldrh	r2, [r4, #12]
 8000eb0:	4b18      	ldr	r3, [pc, #96]	; (8000f14 <__ssputs_r+0xbc>)
 8000eb2:	401a      	ands	r2, r3
 8000eb4:	2380      	movs	r3, #128	; 0x80
 8000eb6:	4313      	orrs	r3, r2
 8000eb8:	81a3      	strh	r3, [r4, #12]
 8000eba:	9b01      	ldr	r3, [sp, #4]
 8000ebc:	6126      	str	r6, [r4, #16]
 8000ebe:	18f6      	adds	r6, r6, r3
 8000ec0:	6026      	str	r6, [r4, #0]
 8000ec2:	003e      	movs	r6, r7
 8000ec4:	6165      	str	r5, [r4, #20]
 8000ec6:	1aed      	subs	r5, r5, r3
 8000ec8:	60a5      	str	r5, [r4, #8]
 8000eca:	42be      	cmp	r6, r7
 8000ecc:	d900      	bls.n	8000ed0 <__ssputs_r+0x78>
 8000ece:	003e      	movs	r6, r7
 8000ed0:	0032      	movs	r2, r6
 8000ed2:	9903      	ldr	r1, [sp, #12]
 8000ed4:	6820      	ldr	r0, [r4, #0]
 8000ed6:	f000 fd10 	bl	80018fa <memmove>
 8000eda:	2000      	movs	r0, #0
 8000edc:	68a3      	ldr	r3, [r4, #8]
 8000ede:	1b9b      	subs	r3, r3, r6
 8000ee0:	60a3      	str	r3, [r4, #8]
 8000ee2:	6823      	ldr	r3, [r4, #0]
 8000ee4:	199b      	adds	r3, r3, r6
 8000ee6:	6023      	str	r3, [r4, #0]
 8000ee8:	b005      	add	sp, #20
 8000eea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000eec:	002a      	movs	r2, r5
 8000eee:	9802      	ldr	r0, [sp, #8]
 8000ef0:	f000 fd60 	bl	80019b4 <_realloc_r>
 8000ef4:	1e06      	subs	r6, r0, #0
 8000ef6:	d1e0      	bne.n	8000eba <__ssputs_r+0x62>
 8000ef8:	6921      	ldr	r1, [r4, #16]
 8000efa:	9802      	ldr	r0, [sp, #8]
 8000efc:	f7ff feb6 	bl	8000c6c <_free_r>
 8000f00:	230c      	movs	r3, #12
 8000f02:	2001      	movs	r0, #1
 8000f04:	9a02      	ldr	r2, [sp, #8]
 8000f06:	4240      	negs	r0, r0
 8000f08:	6013      	str	r3, [r2, #0]
 8000f0a:	89a2      	ldrh	r2, [r4, #12]
 8000f0c:	3334      	adds	r3, #52	; 0x34
 8000f0e:	4313      	orrs	r3, r2
 8000f10:	81a3      	strh	r3, [r4, #12]
 8000f12:	e7e9      	b.n	8000ee8 <__ssputs_r+0x90>
 8000f14:	fffffb7f 	.word	0xfffffb7f

08000f18 <_svfiprintf_r>:
 8000f18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000f1a:	b0a1      	sub	sp, #132	; 0x84
 8000f1c:	9003      	str	r0, [sp, #12]
 8000f1e:	001d      	movs	r5, r3
 8000f20:	898b      	ldrh	r3, [r1, #12]
 8000f22:	000f      	movs	r7, r1
 8000f24:	0016      	movs	r6, r2
 8000f26:	061b      	lsls	r3, r3, #24
 8000f28:	d511      	bpl.n	8000f4e <_svfiprintf_r+0x36>
 8000f2a:	690b      	ldr	r3, [r1, #16]
 8000f2c:	2b00      	cmp	r3, #0
 8000f2e:	d10e      	bne.n	8000f4e <_svfiprintf_r+0x36>
 8000f30:	2140      	movs	r1, #64	; 0x40
 8000f32:	f7ff ff07 	bl	8000d44 <_malloc_r>
 8000f36:	6038      	str	r0, [r7, #0]
 8000f38:	6138      	str	r0, [r7, #16]
 8000f3a:	2800      	cmp	r0, #0
 8000f3c:	d105      	bne.n	8000f4a <_svfiprintf_r+0x32>
 8000f3e:	230c      	movs	r3, #12
 8000f40:	9a03      	ldr	r2, [sp, #12]
 8000f42:	6013      	str	r3, [r2, #0]
 8000f44:	2001      	movs	r0, #1
 8000f46:	4240      	negs	r0, r0
 8000f48:	e0cf      	b.n	80010ea <_svfiprintf_r+0x1d2>
 8000f4a:	2340      	movs	r3, #64	; 0x40
 8000f4c:	617b      	str	r3, [r7, #20]
 8000f4e:	2300      	movs	r3, #0
 8000f50:	ac08      	add	r4, sp, #32
 8000f52:	6163      	str	r3, [r4, #20]
 8000f54:	3320      	adds	r3, #32
 8000f56:	7663      	strb	r3, [r4, #25]
 8000f58:	3310      	adds	r3, #16
 8000f5a:	76a3      	strb	r3, [r4, #26]
 8000f5c:	9507      	str	r5, [sp, #28]
 8000f5e:	0035      	movs	r5, r6
 8000f60:	782b      	ldrb	r3, [r5, #0]
 8000f62:	2b00      	cmp	r3, #0
 8000f64:	d001      	beq.n	8000f6a <_svfiprintf_r+0x52>
 8000f66:	2b25      	cmp	r3, #37	; 0x25
 8000f68:	d148      	bne.n	8000ffc <_svfiprintf_r+0xe4>
 8000f6a:	1bab      	subs	r3, r5, r6
 8000f6c:	9305      	str	r3, [sp, #20]
 8000f6e:	42b5      	cmp	r5, r6
 8000f70:	d00b      	beq.n	8000f8a <_svfiprintf_r+0x72>
 8000f72:	0032      	movs	r2, r6
 8000f74:	0039      	movs	r1, r7
 8000f76:	9803      	ldr	r0, [sp, #12]
 8000f78:	f7ff ff6e 	bl	8000e58 <__ssputs_r>
 8000f7c:	3001      	adds	r0, #1
 8000f7e:	d100      	bne.n	8000f82 <_svfiprintf_r+0x6a>
 8000f80:	e0ae      	b.n	80010e0 <_svfiprintf_r+0x1c8>
 8000f82:	6963      	ldr	r3, [r4, #20]
 8000f84:	9a05      	ldr	r2, [sp, #20]
 8000f86:	189b      	adds	r3, r3, r2
 8000f88:	6163      	str	r3, [r4, #20]
 8000f8a:	782b      	ldrb	r3, [r5, #0]
 8000f8c:	2b00      	cmp	r3, #0
 8000f8e:	d100      	bne.n	8000f92 <_svfiprintf_r+0x7a>
 8000f90:	e0a6      	b.n	80010e0 <_svfiprintf_r+0x1c8>
 8000f92:	2201      	movs	r2, #1
 8000f94:	2300      	movs	r3, #0
 8000f96:	4252      	negs	r2, r2
 8000f98:	6062      	str	r2, [r4, #4]
 8000f9a:	a904      	add	r1, sp, #16
 8000f9c:	3254      	adds	r2, #84	; 0x54
 8000f9e:	1852      	adds	r2, r2, r1
 8000fa0:	1c6e      	adds	r6, r5, #1
 8000fa2:	6023      	str	r3, [r4, #0]
 8000fa4:	60e3      	str	r3, [r4, #12]
 8000fa6:	60a3      	str	r3, [r4, #8]
 8000fa8:	7013      	strb	r3, [r2, #0]
 8000faa:	65a3      	str	r3, [r4, #88]	; 0x58
 8000fac:	4b54      	ldr	r3, [pc, #336]	; (8001100 <_svfiprintf_r+0x1e8>)
 8000fae:	2205      	movs	r2, #5
 8000fb0:	0018      	movs	r0, r3
 8000fb2:	7831      	ldrb	r1, [r6, #0]
 8000fb4:	9305      	str	r3, [sp, #20]
 8000fb6:	f000 fce9 	bl	800198c <memchr>
 8000fba:	1c75      	adds	r5, r6, #1
 8000fbc:	2800      	cmp	r0, #0
 8000fbe:	d11f      	bne.n	8001000 <_svfiprintf_r+0xe8>
 8000fc0:	6822      	ldr	r2, [r4, #0]
 8000fc2:	06d3      	lsls	r3, r2, #27
 8000fc4:	d504      	bpl.n	8000fd0 <_svfiprintf_r+0xb8>
 8000fc6:	2353      	movs	r3, #83	; 0x53
 8000fc8:	a904      	add	r1, sp, #16
 8000fca:	185b      	adds	r3, r3, r1
 8000fcc:	2120      	movs	r1, #32
 8000fce:	7019      	strb	r1, [r3, #0]
 8000fd0:	0713      	lsls	r3, r2, #28
 8000fd2:	d504      	bpl.n	8000fde <_svfiprintf_r+0xc6>
 8000fd4:	2353      	movs	r3, #83	; 0x53
 8000fd6:	a904      	add	r1, sp, #16
 8000fd8:	185b      	adds	r3, r3, r1
 8000fda:	212b      	movs	r1, #43	; 0x2b
 8000fdc:	7019      	strb	r1, [r3, #0]
 8000fde:	7833      	ldrb	r3, [r6, #0]
 8000fe0:	2b2a      	cmp	r3, #42	; 0x2a
 8000fe2:	d016      	beq.n	8001012 <_svfiprintf_r+0xfa>
 8000fe4:	0035      	movs	r5, r6
 8000fe6:	2100      	movs	r1, #0
 8000fe8:	200a      	movs	r0, #10
 8000fea:	68e3      	ldr	r3, [r4, #12]
 8000fec:	782a      	ldrb	r2, [r5, #0]
 8000fee:	1c6e      	adds	r6, r5, #1
 8000ff0:	3a30      	subs	r2, #48	; 0x30
 8000ff2:	2a09      	cmp	r2, #9
 8000ff4:	d950      	bls.n	8001098 <_svfiprintf_r+0x180>
 8000ff6:	2900      	cmp	r1, #0
 8000ff8:	d111      	bne.n	800101e <_svfiprintf_r+0x106>
 8000ffa:	e017      	b.n	800102c <_svfiprintf_r+0x114>
 8000ffc:	3501      	adds	r5, #1
 8000ffe:	e7af      	b.n	8000f60 <_svfiprintf_r+0x48>
 8001000:	9b05      	ldr	r3, [sp, #20]
 8001002:	6822      	ldr	r2, [r4, #0]
 8001004:	1ac0      	subs	r0, r0, r3
 8001006:	2301      	movs	r3, #1
 8001008:	4083      	lsls	r3, r0
 800100a:	4313      	orrs	r3, r2
 800100c:	002e      	movs	r6, r5
 800100e:	6023      	str	r3, [r4, #0]
 8001010:	e7cc      	b.n	8000fac <_svfiprintf_r+0x94>
 8001012:	9b07      	ldr	r3, [sp, #28]
 8001014:	1d19      	adds	r1, r3, #4
 8001016:	681b      	ldr	r3, [r3, #0]
 8001018:	9107      	str	r1, [sp, #28]
 800101a:	2b00      	cmp	r3, #0
 800101c:	db01      	blt.n	8001022 <_svfiprintf_r+0x10a>
 800101e:	930b      	str	r3, [sp, #44]	; 0x2c
 8001020:	e004      	b.n	800102c <_svfiprintf_r+0x114>
 8001022:	425b      	negs	r3, r3
 8001024:	60e3      	str	r3, [r4, #12]
 8001026:	2302      	movs	r3, #2
 8001028:	4313      	orrs	r3, r2
 800102a:	6023      	str	r3, [r4, #0]
 800102c:	782b      	ldrb	r3, [r5, #0]
 800102e:	2b2e      	cmp	r3, #46	; 0x2e
 8001030:	d10c      	bne.n	800104c <_svfiprintf_r+0x134>
 8001032:	786b      	ldrb	r3, [r5, #1]
 8001034:	2b2a      	cmp	r3, #42	; 0x2a
 8001036:	d134      	bne.n	80010a2 <_svfiprintf_r+0x18a>
 8001038:	9b07      	ldr	r3, [sp, #28]
 800103a:	3502      	adds	r5, #2
 800103c:	1d1a      	adds	r2, r3, #4
 800103e:	681b      	ldr	r3, [r3, #0]
 8001040:	9207      	str	r2, [sp, #28]
 8001042:	2b00      	cmp	r3, #0
 8001044:	da01      	bge.n	800104a <_svfiprintf_r+0x132>
 8001046:	2301      	movs	r3, #1
 8001048:	425b      	negs	r3, r3
 800104a:	9309      	str	r3, [sp, #36]	; 0x24
 800104c:	4e2d      	ldr	r6, [pc, #180]	; (8001104 <_svfiprintf_r+0x1ec>)
 800104e:	2203      	movs	r2, #3
 8001050:	0030      	movs	r0, r6
 8001052:	7829      	ldrb	r1, [r5, #0]
 8001054:	f000 fc9a 	bl	800198c <memchr>
 8001058:	2800      	cmp	r0, #0
 800105a:	d006      	beq.n	800106a <_svfiprintf_r+0x152>
 800105c:	2340      	movs	r3, #64	; 0x40
 800105e:	1b80      	subs	r0, r0, r6
 8001060:	4083      	lsls	r3, r0
 8001062:	6822      	ldr	r2, [r4, #0]
 8001064:	3501      	adds	r5, #1
 8001066:	4313      	orrs	r3, r2
 8001068:	6023      	str	r3, [r4, #0]
 800106a:	7829      	ldrb	r1, [r5, #0]
 800106c:	2206      	movs	r2, #6
 800106e:	4826      	ldr	r0, [pc, #152]	; (8001108 <_svfiprintf_r+0x1f0>)
 8001070:	1c6e      	adds	r6, r5, #1
 8001072:	7621      	strb	r1, [r4, #24]
 8001074:	f000 fc8a 	bl	800198c <memchr>
 8001078:	2800      	cmp	r0, #0
 800107a:	d038      	beq.n	80010ee <_svfiprintf_r+0x1d6>
 800107c:	4b23      	ldr	r3, [pc, #140]	; (800110c <_svfiprintf_r+0x1f4>)
 800107e:	2b00      	cmp	r3, #0
 8001080:	d122      	bne.n	80010c8 <_svfiprintf_r+0x1b0>
 8001082:	2207      	movs	r2, #7
 8001084:	9b07      	ldr	r3, [sp, #28]
 8001086:	3307      	adds	r3, #7
 8001088:	4393      	bics	r3, r2
 800108a:	3308      	adds	r3, #8
 800108c:	9307      	str	r3, [sp, #28]
 800108e:	6963      	ldr	r3, [r4, #20]
 8001090:	9a04      	ldr	r2, [sp, #16]
 8001092:	189b      	adds	r3, r3, r2
 8001094:	6163      	str	r3, [r4, #20]
 8001096:	e762      	b.n	8000f5e <_svfiprintf_r+0x46>
 8001098:	4343      	muls	r3, r0
 800109a:	0035      	movs	r5, r6
 800109c:	2101      	movs	r1, #1
 800109e:	189b      	adds	r3, r3, r2
 80010a0:	e7a4      	b.n	8000fec <_svfiprintf_r+0xd4>
 80010a2:	2300      	movs	r3, #0
 80010a4:	200a      	movs	r0, #10
 80010a6:	0019      	movs	r1, r3
 80010a8:	3501      	adds	r5, #1
 80010aa:	6063      	str	r3, [r4, #4]
 80010ac:	782a      	ldrb	r2, [r5, #0]
 80010ae:	1c6e      	adds	r6, r5, #1
 80010b0:	3a30      	subs	r2, #48	; 0x30
 80010b2:	2a09      	cmp	r2, #9
 80010b4:	d903      	bls.n	80010be <_svfiprintf_r+0x1a6>
 80010b6:	2b00      	cmp	r3, #0
 80010b8:	d0c8      	beq.n	800104c <_svfiprintf_r+0x134>
 80010ba:	9109      	str	r1, [sp, #36]	; 0x24
 80010bc:	e7c6      	b.n	800104c <_svfiprintf_r+0x134>
 80010be:	4341      	muls	r1, r0
 80010c0:	0035      	movs	r5, r6
 80010c2:	2301      	movs	r3, #1
 80010c4:	1889      	adds	r1, r1, r2
 80010c6:	e7f1      	b.n	80010ac <_svfiprintf_r+0x194>
 80010c8:	aa07      	add	r2, sp, #28
 80010ca:	9200      	str	r2, [sp, #0]
 80010cc:	0021      	movs	r1, r4
 80010ce:	003a      	movs	r2, r7
 80010d0:	4b0f      	ldr	r3, [pc, #60]	; (8001110 <_svfiprintf_r+0x1f8>)
 80010d2:	9803      	ldr	r0, [sp, #12]
 80010d4:	e000      	b.n	80010d8 <_svfiprintf_r+0x1c0>
 80010d6:	bf00      	nop
 80010d8:	9004      	str	r0, [sp, #16]
 80010da:	9b04      	ldr	r3, [sp, #16]
 80010dc:	3301      	adds	r3, #1
 80010de:	d1d6      	bne.n	800108e <_svfiprintf_r+0x176>
 80010e0:	89bb      	ldrh	r3, [r7, #12]
 80010e2:	980d      	ldr	r0, [sp, #52]	; 0x34
 80010e4:	065b      	lsls	r3, r3, #25
 80010e6:	d500      	bpl.n	80010ea <_svfiprintf_r+0x1d2>
 80010e8:	e72c      	b.n	8000f44 <_svfiprintf_r+0x2c>
 80010ea:	b021      	add	sp, #132	; 0x84
 80010ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80010ee:	aa07      	add	r2, sp, #28
 80010f0:	9200      	str	r2, [sp, #0]
 80010f2:	0021      	movs	r1, r4
 80010f4:	003a      	movs	r2, r7
 80010f6:	4b06      	ldr	r3, [pc, #24]	; (8001110 <_svfiprintf_r+0x1f8>)
 80010f8:	9803      	ldr	r0, [sp, #12]
 80010fa:	f000 f9bf 	bl	800147c <_printf_i>
 80010fe:	e7eb      	b.n	80010d8 <_svfiprintf_r+0x1c0>
 8001100:	08002025 	.word	0x08002025
 8001104:	0800202b 	.word	0x0800202b
 8001108:	0800202f 	.word	0x0800202f
 800110c:	00000000 	.word	0x00000000
 8001110:	08000e59 	.word	0x08000e59

08001114 <__sfputc_r>:
 8001114:	6893      	ldr	r3, [r2, #8]
 8001116:	b510      	push	{r4, lr}
 8001118:	3b01      	subs	r3, #1
 800111a:	6093      	str	r3, [r2, #8]
 800111c:	2b00      	cmp	r3, #0
 800111e:	da04      	bge.n	800112a <__sfputc_r+0x16>
 8001120:	6994      	ldr	r4, [r2, #24]
 8001122:	42a3      	cmp	r3, r4
 8001124:	db07      	blt.n	8001136 <__sfputc_r+0x22>
 8001126:	290a      	cmp	r1, #10
 8001128:	d005      	beq.n	8001136 <__sfputc_r+0x22>
 800112a:	6813      	ldr	r3, [r2, #0]
 800112c:	1c58      	adds	r0, r3, #1
 800112e:	6010      	str	r0, [r2, #0]
 8001130:	7019      	strb	r1, [r3, #0]
 8001132:	0008      	movs	r0, r1
 8001134:	bd10      	pop	{r4, pc}
 8001136:	f7ff fc7b 	bl	8000a30 <__swbuf_r>
 800113a:	0001      	movs	r1, r0
 800113c:	e7f9      	b.n	8001132 <__sfputc_r+0x1e>

0800113e <__sfputs_r>:
 800113e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001140:	0006      	movs	r6, r0
 8001142:	000f      	movs	r7, r1
 8001144:	0014      	movs	r4, r2
 8001146:	18d5      	adds	r5, r2, r3
 8001148:	42ac      	cmp	r4, r5
 800114a:	d101      	bne.n	8001150 <__sfputs_r+0x12>
 800114c:	2000      	movs	r0, #0
 800114e:	e007      	b.n	8001160 <__sfputs_r+0x22>
 8001150:	7821      	ldrb	r1, [r4, #0]
 8001152:	003a      	movs	r2, r7
 8001154:	0030      	movs	r0, r6
 8001156:	f7ff ffdd 	bl	8001114 <__sfputc_r>
 800115a:	3401      	adds	r4, #1
 800115c:	1c43      	adds	r3, r0, #1
 800115e:	d1f3      	bne.n	8001148 <__sfputs_r+0xa>
 8001160:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08001164 <_vfiprintf_r>:
 8001164:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001166:	b0a1      	sub	sp, #132	; 0x84
 8001168:	000f      	movs	r7, r1
 800116a:	0015      	movs	r5, r2
 800116c:	001e      	movs	r6, r3
 800116e:	9003      	str	r0, [sp, #12]
 8001170:	2800      	cmp	r0, #0
 8001172:	d004      	beq.n	800117e <_vfiprintf_r+0x1a>
 8001174:	6a03      	ldr	r3, [r0, #32]
 8001176:	2b00      	cmp	r3, #0
 8001178:	d101      	bne.n	800117e <_vfiprintf_r+0x1a>
 800117a:	f7ff fb49 	bl	8000810 <__sinit>
 800117e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8001180:	07db      	lsls	r3, r3, #31
 8001182:	d405      	bmi.n	8001190 <_vfiprintf_r+0x2c>
 8001184:	89bb      	ldrh	r3, [r7, #12]
 8001186:	059b      	lsls	r3, r3, #22
 8001188:	d402      	bmi.n	8001190 <_vfiprintf_r+0x2c>
 800118a:	6db8      	ldr	r0, [r7, #88]	; 0x58
 800118c:	f7ff fd6b 	bl	8000c66 <__retarget_lock_acquire_recursive>
 8001190:	89bb      	ldrh	r3, [r7, #12]
 8001192:	071b      	lsls	r3, r3, #28
 8001194:	d502      	bpl.n	800119c <_vfiprintf_r+0x38>
 8001196:	693b      	ldr	r3, [r7, #16]
 8001198:	2b00      	cmp	r3, #0
 800119a:	d113      	bne.n	80011c4 <_vfiprintf_r+0x60>
 800119c:	0039      	movs	r1, r7
 800119e:	9803      	ldr	r0, [sp, #12]
 80011a0:	f7ff fc88 	bl	8000ab4 <__swsetup_r>
 80011a4:	2800      	cmp	r0, #0
 80011a6:	d00d      	beq.n	80011c4 <_vfiprintf_r+0x60>
 80011a8:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80011aa:	07db      	lsls	r3, r3, #31
 80011ac:	d503      	bpl.n	80011b6 <_vfiprintf_r+0x52>
 80011ae:	2001      	movs	r0, #1
 80011b0:	4240      	negs	r0, r0
 80011b2:	b021      	add	sp, #132	; 0x84
 80011b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80011b6:	89bb      	ldrh	r3, [r7, #12]
 80011b8:	059b      	lsls	r3, r3, #22
 80011ba:	d4f8      	bmi.n	80011ae <_vfiprintf_r+0x4a>
 80011bc:	6db8      	ldr	r0, [r7, #88]	; 0x58
 80011be:	f7ff fd53 	bl	8000c68 <__retarget_lock_release_recursive>
 80011c2:	e7f4      	b.n	80011ae <_vfiprintf_r+0x4a>
 80011c4:	2300      	movs	r3, #0
 80011c6:	ac08      	add	r4, sp, #32
 80011c8:	6163      	str	r3, [r4, #20]
 80011ca:	3320      	adds	r3, #32
 80011cc:	7663      	strb	r3, [r4, #25]
 80011ce:	3310      	adds	r3, #16
 80011d0:	76a3      	strb	r3, [r4, #26]
 80011d2:	9607      	str	r6, [sp, #28]
 80011d4:	002e      	movs	r6, r5
 80011d6:	7833      	ldrb	r3, [r6, #0]
 80011d8:	2b00      	cmp	r3, #0
 80011da:	d001      	beq.n	80011e0 <_vfiprintf_r+0x7c>
 80011dc:	2b25      	cmp	r3, #37	; 0x25
 80011de:	d148      	bne.n	8001272 <_vfiprintf_r+0x10e>
 80011e0:	1b73      	subs	r3, r6, r5
 80011e2:	9305      	str	r3, [sp, #20]
 80011e4:	42ae      	cmp	r6, r5
 80011e6:	d00b      	beq.n	8001200 <_vfiprintf_r+0x9c>
 80011e8:	002a      	movs	r2, r5
 80011ea:	0039      	movs	r1, r7
 80011ec:	9803      	ldr	r0, [sp, #12]
 80011ee:	f7ff ffa6 	bl	800113e <__sfputs_r>
 80011f2:	3001      	adds	r0, #1
 80011f4:	d100      	bne.n	80011f8 <_vfiprintf_r+0x94>
 80011f6:	e0ae      	b.n	8001356 <_vfiprintf_r+0x1f2>
 80011f8:	6963      	ldr	r3, [r4, #20]
 80011fa:	9a05      	ldr	r2, [sp, #20]
 80011fc:	189b      	adds	r3, r3, r2
 80011fe:	6163      	str	r3, [r4, #20]
 8001200:	7833      	ldrb	r3, [r6, #0]
 8001202:	2b00      	cmp	r3, #0
 8001204:	d100      	bne.n	8001208 <_vfiprintf_r+0xa4>
 8001206:	e0a6      	b.n	8001356 <_vfiprintf_r+0x1f2>
 8001208:	2201      	movs	r2, #1
 800120a:	2300      	movs	r3, #0
 800120c:	4252      	negs	r2, r2
 800120e:	6062      	str	r2, [r4, #4]
 8001210:	a904      	add	r1, sp, #16
 8001212:	3254      	adds	r2, #84	; 0x54
 8001214:	1852      	adds	r2, r2, r1
 8001216:	1c75      	adds	r5, r6, #1
 8001218:	6023      	str	r3, [r4, #0]
 800121a:	60e3      	str	r3, [r4, #12]
 800121c:	60a3      	str	r3, [r4, #8]
 800121e:	7013      	strb	r3, [r2, #0]
 8001220:	65a3      	str	r3, [r4, #88]	; 0x58
 8001222:	4b59      	ldr	r3, [pc, #356]	; (8001388 <_vfiprintf_r+0x224>)
 8001224:	2205      	movs	r2, #5
 8001226:	0018      	movs	r0, r3
 8001228:	7829      	ldrb	r1, [r5, #0]
 800122a:	9305      	str	r3, [sp, #20]
 800122c:	f000 fbae 	bl	800198c <memchr>
 8001230:	1c6e      	adds	r6, r5, #1
 8001232:	2800      	cmp	r0, #0
 8001234:	d11f      	bne.n	8001276 <_vfiprintf_r+0x112>
 8001236:	6822      	ldr	r2, [r4, #0]
 8001238:	06d3      	lsls	r3, r2, #27
 800123a:	d504      	bpl.n	8001246 <_vfiprintf_r+0xe2>
 800123c:	2353      	movs	r3, #83	; 0x53
 800123e:	a904      	add	r1, sp, #16
 8001240:	185b      	adds	r3, r3, r1
 8001242:	2120      	movs	r1, #32
 8001244:	7019      	strb	r1, [r3, #0]
 8001246:	0713      	lsls	r3, r2, #28
 8001248:	d504      	bpl.n	8001254 <_vfiprintf_r+0xf0>
 800124a:	2353      	movs	r3, #83	; 0x53
 800124c:	a904      	add	r1, sp, #16
 800124e:	185b      	adds	r3, r3, r1
 8001250:	212b      	movs	r1, #43	; 0x2b
 8001252:	7019      	strb	r1, [r3, #0]
 8001254:	782b      	ldrb	r3, [r5, #0]
 8001256:	2b2a      	cmp	r3, #42	; 0x2a
 8001258:	d016      	beq.n	8001288 <_vfiprintf_r+0x124>
 800125a:	002e      	movs	r6, r5
 800125c:	2100      	movs	r1, #0
 800125e:	200a      	movs	r0, #10
 8001260:	68e3      	ldr	r3, [r4, #12]
 8001262:	7832      	ldrb	r2, [r6, #0]
 8001264:	1c75      	adds	r5, r6, #1
 8001266:	3a30      	subs	r2, #48	; 0x30
 8001268:	2a09      	cmp	r2, #9
 800126a:	d950      	bls.n	800130e <_vfiprintf_r+0x1aa>
 800126c:	2900      	cmp	r1, #0
 800126e:	d111      	bne.n	8001294 <_vfiprintf_r+0x130>
 8001270:	e017      	b.n	80012a2 <_vfiprintf_r+0x13e>
 8001272:	3601      	adds	r6, #1
 8001274:	e7af      	b.n	80011d6 <_vfiprintf_r+0x72>
 8001276:	9b05      	ldr	r3, [sp, #20]
 8001278:	6822      	ldr	r2, [r4, #0]
 800127a:	1ac0      	subs	r0, r0, r3
 800127c:	2301      	movs	r3, #1
 800127e:	4083      	lsls	r3, r0
 8001280:	4313      	orrs	r3, r2
 8001282:	0035      	movs	r5, r6
 8001284:	6023      	str	r3, [r4, #0]
 8001286:	e7cc      	b.n	8001222 <_vfiprintf_r+0xbe>
 8001288:	9b07      	ldr	r3, [sp, #28]
 800128a:	1d19      	adds	r1, r3, #4
 800128c:	681b      	ldr	r3, [r3, #0]
 800128e:	9107      	str	r1, [sp, #28]
 8001290:	2b00      	cmp	r3, #0
 8001292:	db01      	blt.n	8001298 <_vfiprintf_r+0x134>
 8001294:	930b      	str	r3, [sp, #44]	; 0x2c
 8001296:	e004      	b.n	80012a2 <_vfiprintf_r+0x13e>
 8001298:	425b      	negs	r3, r3
 800129a:	60e3      	str	r3, [r4, #12]
 800129c:	2302      	movs	r3, #2
 800129e:	4313      	orrs	r3, r2
 80012a0:	6023      	str	r3, [r4, #0]
 80012a2:	7833      	ldrb	r3, [r6, #0]
 80012a4:	2b2e      	cmp	r3, #46	; 0x2e
 80012a6:	d10c      	bne.n	80012c2 <_vfiprintf_r+0x15e>
 80012a8:	7873      	ldrb	r3, [r6, #1]
 80012aa:	2b2a      	cmp	r3, #42	; 0x2a
 80012ac:	d134      	bne.n	8001318 <_vfiprintf_r+0x1b4>
 80012ae:	9b07      	ldr	r3, [sp, #28]
 80012b0:	3602      	adds	r6, #2
 80012b2:	1d1a      	adds	r2, r3, #4
 80012b4:	681b      	ldr	r3, [r3, #0]
 80012b6:	9207      	str	r2, [sp, #28]
 80012b8:	2b00      	cmp	r3, #0
 80012ba:	da01      	bge.n	80012c0 <_vfiprintf_r+0x15c>
 80012bc:	2301      	movs	r3, #1
 80012be:	425b      	negs	r3, r3
 80012c0:	9309      	str	r3, [sp, #36]	; 0x24
 80012c2:	4d32      	ldr	r5, [pc, #200]	; (800138c <_vfiprintf_r+0x228>)
 80012c4:	2203      	movs	r2, #3
 80012c6:	0028      	movs	r0, r5
 80012c8:	7831      	ldrb	r1, [r6, #0]
 80012ca:	f000 fb5f 	bl	800198c <memchr>
 80012ce:	2800      	cmp	r0, #0
 80012d0:	d006      	beq.n	80012e0 <_vfiprintf_r+0x17c>
 80012d2:	2340      	movs	r3, #64	; 0x40
 80012d4:	1b40      	subs	r0, r0, r5
 80012d6:	4083      	lsls	r3, r0
 80012d8:	6822      	ldr	r2, [r4, #0]
 80012da:	3601      	adds	r6, #1
 80012dc:	4313      	orrs	r3, r2
 80012de:	6023      	str	r3, [r4, #0]
 80012e0:	7831      	ldrb	r1, [r6, #0]
 80012e2:	2206      	movs	r2, #6
 80012e4:	482a      	ldr	r0, [pc, #168]	; (8001390 <_vfiprintf_r+0x22c>)
 80012e6:	1c75      	adds	r5, r6, #1
 80012e8:	7621      	strb	r1, [r4, #24]
 80012ea:	f000 fb4f 	bl	800198c <memchr>
 80012ee:	2800      	cmp	r0, #0
 80012f0:	d040      	beq.n	8001374 <_vfiprintf_r+0x210>
 80012f2:	4b28      	ldr	r3, [pc, #160]	; (8001394 <_vfiprintf_r+0x230>)
 80012f4:	2b00      	cmp	r3, #0
 80012f6:	d122      	bne.n	800133e <_vfiprintf_r+0x1da>
 80012f8:	2207      	movs	r2, #7
 80012fa:	9b07      	ldr	r3, [sp, #28]
 80012fc:	3307      	adds	r3, #7
 80012fe:	4393      	bics	r3, r2
 8001300:	3308      	adds	r3, #8
 8001302:	9307      	str	r3, [sp, #28]
 8001304:	6963      	ldr	r3, [r4, #20]
 8001306:	9a04      	ldr	r2, [sp, #16]
 8001308:	189b      	adds	r3, r3, r2
 800130a:	6163      	str	r3, [r4, #20]
 800130c:	e762      	b.n	80011d4 <_vfiprintf_r+0x70>
 800130e:	4343      	muls	r3, r0
 8001310:	002e      	movs	r6, r5
 8001312:	2101      	movs	r1, #1
 8001314:	189b      	adds	r3, r3, r2
 8001316:	e7a4      	b.n	8001262 <_vfiprintf_r+0xfe>
 8001318:	2300      	movs	r3, #0
 800131a:	200a      	movs	r0, #10
 800131c:	0019      	movs	r1, r3
 800131e:	3601      	adds	r6, #1
 8001320:	6063      	str	r3, [r4, #4]
 8001322:	7832      	ldrb	r2, [r6, #0]
 8001324:	1c75      	adds	r5, r6, #1
 8001326:	3a30      	subs	r2, #48	; 0x30
 8001328:	2a09      	cmp	r2, #9
 800132a:	d903      	bls.n	8001334 <_vfiprintf_r+0x1d0>
 800132c:	2b00      	cmp	r3, #0
 800132e:	d0c8      	beq.n	80012c2 <_vfiprintf_r+0x15e>
 8001330:	9109      	str	r1, [sp, #36]	; 0x24
 8001332:	e7c6      	b.n	80012c2 <_vfiprintf_r+0x15e>
 8001334:	4341      	muls	r1, r0
 8001336:	002e      	movs	r6, r5
 8001338:	2301      	movs	r3, #1
 800133a:	1889      	adds	r1, r1, r2
 800133c:	e7f1      	b.n	8001322 <_vfiprintf_r+0x1be>
 800133e:	aa07      	add	r2, sp, #28
 8001340:	9200      	str	r2, [sp, #0]
 8001342:	0021      	movs	r1, r4
 8001344:	003a      	movs	r2, r7
 8001346:	4b14      	ldr	r3, [pc, #80]	; (8001398 <_vfiprintf_r+0x234>)
 8001348:	9803      	ldr	r0, [sp, #12]
 800134a:	e000      	b.n	800134e <_vfiprintf_r+0x1ea>
 800134c:	bf00      	nop
 800134e:	9004      	str	r0, [sp, #16]
 8001350:	9b04      	ldr	r3, [sp, #16]
 8001352:	3301      	adds	r3, #1
 8001354:	d1d6      	bne.n	8001304 <_vfiprintf_r+0x1a0>
 8001356:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8001358:	07db      	lsls	r3, r3, #31
 800135a:	d405      	bmi.n	8001368 <_vfiprintf_r+0x204>
 800135c:	89bb      	ldrh	r3, [r7, #12]
 800135e:	059b      	lsls	r3, r3, #22
 8001360:	d402      	bmi.n	8001368 <_vfiprintf_r+0x204>
 8001362:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8001364:	f7ff fc80 	bl	8000c68 <__retarget_lock_release_recursive>
 8001368:	89bb      	ldrh	r3, [r7, #12]
 800136a:	065b      	lsls	r3, r3, #25
 800136c:	d500      	bpl.n	8001370 <_vfiprintf_r+0x20c>
 800136e:	e71e      	b.n	80011ae <_vfiprintf_r+0x4a>
 8001370:	980d      	ldr	r0, [sp, #52]	; 0x34
 8001372:	e71e      	b.n	80011b2 <_vfiprintf_r+0x4e>
 8001374:	aa07      	add	r2, sp, #28
 8001376:	9200      	str	r2, [sp, #0]
 8001378:	0021      	movs	r1, r4
 800137a:	003a      	movs	r2, r7
 800137c:	4b06      	ldr	r3, [pc, #24]	; (8001398 <_vfiprintf_r+0x234>)
 800137e:	9803      	ldr	r0, [sp, #12]
 8001380:	f000 f87c 	bl	800147c <_printf_i>
 8001384:	e7e3      	b.n	800134e <_vfiprintf_r+0x1ea>
 8001386:	46c0      	nop			; (mov r8, r8)
 8001388:	08002025 	.word	0x08002025
 800138c:	0800202b 	.word	0x0800202b
 8001390:	0800202f 	.word	0x0800202f
 8001394:	00000000 	.word	0x00000000
 8001398:	0800113f 	.word	0x0800113f

0800139c <_printf_common>:
 800139c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800139e:	0016      	movs	r6, r2
 80013a0:	9301      	str	r3, [sp, #4]
 80013a2:	688a      	ldr	r2, [r1, #8]
 80013a4:	690b      	ldr	r3, [r1, #16]
 80013a6:	000c      	movs	r4, r1
 80013a8:	9000      	str	r0, [sp, #0]
 80013aa:	4293      	cmp	r3, r2
 80013ac:	da00      	bge.n	80013b0 <_printf_common+0x14>
 80013ae:	0013      	movs	r3, r2
 80013b0:	0022      	movs	r2, r4
 80013b2:	6033      	str	r3, [r6, #0]
 80013b4:	3243      	adds	r2, #67	; 0x43
 80013b6:	7812      	ldrb	r2, [r2, #0]
 80013b8:	2a00      	cmp	r2, #0
 80013ba:	d001      	beq.n	80013c0 <_printf_common+0x24>
 80013bc:	3301      	adds	r3, #1
 80013be:	6033      	str	r3, [r6, #0]
 80013c0:	6823      	ldr	r3, [r4, #0]
 80013c2:	069b      	lsls	r3, r3, #26
 80013c4:	d502      	bpl.n	80013cc <_printf_common+0x30>
 80013c6:	6833      	ldr	r3, [r6, #0]
 80013c8:	3302      	adds	r3, #2
 80013ca:	6033      	str	r3, [r6, #0]
 80013cc:	6822      	ldr	r2, [r4, #0]
 80013ce:	2306      	movs	r3, #6
 80013d0:	0015      	movs	r5, r2
 80013d2:	401d      	ands	r5, r3
 80013d4:	421a      	tst	r2, r3
 80013d6:	d027      	beq.n	8001428 <_printf_common+0x8c>
 80013d8:	0023      	movs	r3, r4
 80013da:	3343      	adds	r3, #67	; 0x43
 80013dc:	781b      	ldrb	r3, [r3, #0]
 80013de:	1e5a      	subs	r2, r3, #1
 80013e0:	4193      	sbcs	r3, r2
 80013e2:	6822      	ldr	r2, [r4, #0]
 80013e4:	0692      	lsls	r2, r2, #26
 80013e6:	d430      	bmi.n	800144a <_printf_common+0xae>
 80013e8:	0022      	movs	r2, r4
 80013ea:	9901      	ldr	r1, [sp, #4]
 80013ec:	9800      	ldr	r0, [sp, #0]
 80013ee:	9d08      	ldr	r5, [sp, #32]
 80013f0:	3243      	adds	r2, #67	; 0x43
 80013f2:	47a8      	blx	r5
 80013f4:	3001      	adds	r0, #1
 80013f6:	d025      	beq.n	8001444 <_printf_common+0xa8>
 80013f8:	2206      	movs	r2, #6
 80013fa:	6823      	ldr	r3, [r4, #0]
 80013fc:	2500      	movs	r5, #0
 80013fe:	4013      	ands	r3, r2
 8001400:	2b04      	cmp	r3, #4
 8001402:	d105      	bne.n	8001410 <_printf_common+0x74>
 8001404:	6833      	ldr	r3, [r6, #0]
 8001406:	68e5      	ldr	r5, [r4, #12]
 8001408:	1aed      	subs	r5, r5, r3
 800140a:	43eb      	mvns	r3, r5
 800140c:	17db      	asrs	r3, r3, #31
 800140e:	401d      	ands	r5, r3
 8001410:	68a3      	ldr	r3, [r4, #8]
 8001412:	6922      	ldr	r2, [r4, #16]
 8001414:	4293      	cmp	r3, r2
 8001416:	dd01      	ble.n	800141c <_printf_common+0x80>
 8001418:	1a9b      	subs	r3, r3, r2
 800141a:	18ed      	adds	r5, r5, r3
 800141c:	2600      	movs	r6, #0
 800141e:	42b5      	cmp	r5, r6
 8001420:	d120      	bne.n	8001464 <_printf_common+0xc8>
 8001422:	2000      	movs	r0, #0
 8001424:	e010      	b.n	8001448 <_printf_common+0xac>
 8001426:	3501      	adds	r5, #1
 8001428:	68e3      	ldr	r3, [r4, #12]
 800142a:	6832      	ldr	r2, [r6, #0]
 800142c:	1a9b      	subs	r3, r3, r2
 800142e:	42ab      	cmp	r3, r5
 8001430:	ddd2      	ble.n	80013d8 <_printf_common+0x3c>
 8001432:	0022      	movs	r2, r4
 8001434:	2301      	movs	r3, #1
 8001436:	9901      	ldr	r1, [sp, #4]
 8001438:	9800      	ldr	r0, [sp, #0]
 800143a:	9f08      	ldr	r7, [sp, #32]
 800143c:	3219      	adds	r2, #25
 800143e:	47b8      	blx	r7
 8001440:	3001      	adds	r0, #1
 8001442:	d1f0      	bne.n	8001426 <_printf_common+0x8a>
 8001444:	2001      	movs	r0, #1
 8001446:	4240      	negs	r0, r0
 8001448:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800144a:	2030      	movs	r0, #48	; 0x30
 800144c:	18e1      	adds	r1, r4, r3
 800144e:	3143      	adds	r1, #67	; 0x43
 8001450:	7008      	strb	r0, [r1, #0]
 8001452:	0021      	movs	r1, r4
 8001454:	1c5a      	adds	r2, r3, #1
 8001456:	3145      	adds	r1, #69	; 0x45
 8001458:	7809      	ldrb	r1, [r1, #0]
 800145a:	18a2      	adds	r2, r4, r2
 800145c:	3243      	adds	r2, #67	; 0x43
 800145e:	3302      	adds	r3, #2
 8001460:	7011      	strb	r1, [r2, #0]
 8001462:	e7c1      	b.n	80013e8 <_printf_common+0x4c>
 8001464:	0022      	movs	r2, r4
 8001466:	2301      	movs	r3, #1
 8001468:	9901      	ldr	r1, [sp, #4]
 800146a:	9800      	ldr	r0, [sp, #0]
 800146c:	9f08      	ldr	r7, [sp, #32]
 800146e:	321a      	adds	r2, #26
 8001470:	47b8      	blx	r7
 8001472:	3001      	adds	r0, #1
 8001474:	d0e6      	beq.n	8001444 <_printf_common+0xa8>
 8001476:	3601      	adds	r6, #1
 8001478:	e7d1      	b.n	800141e <_printf_common+0x82>
	...

0800147c <_printf_i>:
 800147c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800147e:	b08b      	sub	sp, #44	; 0x2c
 8001480:	9206      	str	r2, [sp, #24]
 8001482:	000a      	movs	r2, r1
 8001484:	3243      	adds	r2, #67	; 0x43
 8001486:	9307      	str	r3, [sp, #28]
 8001488:	9005      	str	r0, [sp, #20]
 800148a:	9204      	str	r2, [sp, #16]
 800148c:	7e0a      	ldrb	r2, [r1, #24]
 800148e:	000c      	movs	r4, r1
 8001490:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8001492:	2a78      	cmp	r2, #120	; 0x78
 8001494:	d809      	bhi.n	80014aa <_printf_i+0x2e>
 8001496:	2a62      	cmp	r2, #98	; 0x62
 8001498:	d80b      	bhi.n	80014b2 <_printf_i+0x36>
 800149a:	2a00      	cmp	r2, #0
 800149c:	d100      	bne.n	80014a0 <_printf_i+0x24>
 800149e:	e0c8      	b.n	8001632 <_printf_i+0x1b6>
 80014a0:	4981      	ldr	r1, [pc, #516]	; (80016a8 <_printf_i+0x22c>)
 80014a2:	9103      	str	r1, [sp, #12]
 80014a4:	2a58      	cmp	r2, #88	; 0x58
 80014a6:	d100      	bne.n	80014aa <_printf_i+0x2e>
 80014a8:	e09c      	b.n	80015e4 <_printf_i+0x168>
 80014aa:	0025      	movs	r5, r4
 80014ac:	3542      	adds	r5, #66	; 0x42
 80014ae:	702a      	strb	r2, [r5, #0]
 80014b0:	e022      	b.n	80014f8 <_printf_i+0x7c>
 80014b2:	0010      	movs	r0, r2
 80014b4:	3863      	subs	r0, #99	; 0x63
 80014b6:	2815      	cmp	r0, #21
 80014b8:	d8f7      	bhi.n	80014aa <_printf_i+0x2e>
 80014ba:	f7fe fe8d 	bl	80001d8 <__gnu_thumb1_case_shi>
 80014be:	0016      	.short	0x0016
 80014c0:	fff6001f 	.word	0xfff6001f
 80014c4:	fff6fff6 	.word	0xfff6fff6
 80014c8:	001ffff6 	.word	0x001ffff6
 80014cc:	fff6fff6 	.word	0xfff6fff6
 80014d0:	fff6fff6 	.word	0xfff6fff6
 80014d4:	004f00ad 	.word	0x004f00ad
 80014d8:	fff6008c 	.word	0xfff6008c
 80014dc:	00befff6 	.word	0x00befff6
 80014e0:	004ffff6 	.word	0x004ffff6
 80014e4:	fff6fff6 	.word	0xfff6fff6
 80014e8:	0090      	.short	0x0090
 80014ea:	0025      	movs	r5, r4
 80014ec:	681a      	ldr	r2, [r3, #0]
 80014ee:	3542      	adds	r5, #66	; 0x42
 80014f0:	1d11      	adds	r1, r2, #4
 80014f2:	6019      	str	r1, [r3, #0]
 80014f4:	6813      	ldr	r3, [r2, #0]
 80014f6:	702b      	strb	r3, [r5, #0]
 80014f8:	2301      	movs	r3, #1
 80014fa:	e0ac      	b.n	8001656 <_printf_i+0x1da>
 80014fc:	6818      	ldr	r0, [r3, #0]
 80014fe:	6809      	ldr	r1, [r1, #0]
 8001500:	1d02      	adds	r2, r0, #4
 8001502:	060d      	lsls	r5, r1, #24
 8001504:	d51f      	bpl.n	8001546 <_printf_i+0xca>
 8001506:	6806      	ldr	r6, [r0, #0]
 8001508:	601a      	str	r2, [r3, #0]
 800150a:	4a67      	ldr	r2, [pc, #412]	; (80016a8 <_printf_i+0x22c>)
 800150c:	270a      	movs	r7, #10
 800150e:	6861      	ldr	r1, [r4, #4]
 8001510:	9203      	str	r2, [sp, #12]
 8001512:	2e00      	cmp	r6, #0
 8001514:	da35      	bge.n	8001582 <_printf_i+0x106>
 8001516:	0023      	movs	r3, r4
 8001518:	202d      	movs	r0, #45	; 0x2d
 800151a:	3343      	adds	r3, #67	; 0x43
 800151c:	7018      	strb	r0, [r3, #0]
 800151e:	60a1      	str	r1, [r4, #8]
 8001520:	2900      	cmp	r1, #0
 8001522:	da16      	bge.n	8001552 <_printf_i+0xd6>
 8001524:	270a      	movs	r7, #10
 8001526:	4276      	negs	r6, r6
 8001528:	9203      	str	r2, [sp, #12]
 800152a:	9d04      	ldr	r5, [sp, #16]
 800152c:	0030      	movs	r0, r6
 800152e:	0039      	movs	r1, r7
 8001530:	f7fe fe4c 	bl	80001cc <__aeabi_uidivmod>
 8001534:	9b03      	ldr	r3, [sp, #12]
 8001536:	3d01      	subs	r5, #1
 8001538:	5c5b      	ldrb	r3, [r3, r1]
 800153a:	702b      	strb	r3, [r5, #0]
 800153c:	0033      	movs	r3, r6
 800153e:	0006      	movs	r6, r0
 8001540:	429f      	cmp	r7, r3
 8001542:	d9f3      	bls.n	800152c <_printf_i+0xb0>
 8001544:	e02a      	b.n	800159c <_printf_i+0x120>
 8001546:	6806      	ldr	r6, [r0, #0]
 8001548:	601a      	str	r2, [r3, #0]
 800154a:	0649      	lsls	r1, r1, #25
 800154c:	d5dd      	bpl.n	800150a <_printf_i+0x8e>
 800154e:	b236      	sxth	r6, r6
 8001550:	e7db      	b.n	800150a <_printf_i+0x8e>
 8001552:	2104      	movs	r1, #4
 8001554:	6823      	ldr	r3, [r4, #0]
 8001556:	438b      	bics	r3, r1
 8001558:	6023      	str	r3, [r4, #0]
 800155a:	e7e3      	b.n	8001524 <_printf_i+0xa8>
 800155c:	6808      	ldr	r0, [r1, #0]
 800155e:	6819      	ldr	r1, [r3, #0]
 8001560:	c940      	ldmia	r1!, {r6}
 8001562:	0605      	lsls	r5, r0, #24
 8001564:	d402      	bmi.n	800156c <_printf_i+0xf0>
 8001566:	0640      	lsls	r0, r0, #25
 8001568:	d500      	bpl.n	800156c <_printf_i+0xf0>
 800156a:	b2b6      	uxth	r6, r6
 800156c:	6019      	str	r1, [r3, #0]
 800156e:	4b4e      	ldr	r3, [pc, #312]	; (80016a8 <_printf_i+0x22c>)
 8001570:	270a      	movs	r7, #10
 8001572:	9303      	str	r3, [sp, #12]
 8001574:	2a6f      	cmp	r2, #111	; 0x6f
 8001576:	d100      	bne.n	800157a <_printf_i+0xfe>
 8001578:	3f02      	subs	r7, #2
 800157a:	0023      	movs	r3, r4
 800157c:	2200      	movs	r2, #0
 800157e:	3343      	adds	r3, #67	; 0x43
 8001580:	701a      	strb	r2, [r3, #0]
 8001582:	6863      	ldr	r3, [r4, #4]
 8001584:	60a3      	str	r3, [r4, #8]
 8001586:	2b00      	cmp	r3, #0
 8001588:	dbcf      	blt.n	800152a <_printf_i+0xae>
 800158a:	2104      	movs	r1, #4
 800158c:	6822      	ldr	r2, [r4, #0]
 800158e:	438a      	bics	r2, r1
 8001590:	6022      	str	r2, [r4, #0]
 8001592:	2e00      	cmp	r6, #0
 8001594:	d1c9      	bne.n	800152a <_printf_i+0xae>
 8001596:	9d04      	ldr	r5, [sp, #16]
 8001598:	2b00      	cmp	r3, #0
 800159a:	d1c6      	bne.n	800152a <_printf_i+0xae>
 800159c:	2f08      	cmp	r7, #8
 800159e:	d109      	bne.n	80015b4 <_printf_i+0x138>
 80015a0:	6823      	ldr	r3, [r4, #0]
 80015a2:	07db      	lsls	r3, r3, #31
 80015a4:	d506      	bpl.n	80015b4 <_printf_i+0x138>
 80015a6:	6862      	ldr	r2, [r4, #4]
 80015a8:	6923      	ldr	r3, [r4, #16]
 80015aa:	429a      	cmp	r2, r3
 80015ac:	dc02      	bgt.n	80015b4 <_printf_i+0x138>
 80015ae:	2330      	movs	r3, #48	; 0x30
 80015b0:	3d01      	subs	r5, #1
 80015b2:	702b      	strb	r3, [r5, #0]
 80015b4:	9b04      	ldr	r3, [sp, #16]
 80015b6:	1b5b      	subs	r3, r3, r5
 80015b8:	6123      	str	r3, [r4, #16]
 80015ba:	9b07      	ldr	r3, [sp, #28]
 80015bc:	0021      	movs	r1, r4
 80015be:	9300      	str	r3, [sp, #0]
 80015c0:	9805      	ldr	r0, [sp, #20]
 80015c2:	9b06      	ldr	r3, [sp, #24]
 80015c4:	aa09      	add	r2, sp, #36	; 0x24
 80015c6:	f7ff fee9 	bl	800139c <_printf_common>
 80015ca:	3001      	adds	r0, #1
 80015cc:	d148      	bne.n	8001660 <_printf_i+0x1e4>
 80015ce:	2001      	movs	r0, #1
 80015d0:	4240      	negs	r0, r0
 80015d2:	b00b      	add	sp, #44	; 0x2c
 80015d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80015d6:	2220      	movs	r2, #32
 80015d8:	6809      	ldr	r1, [r1, #0]
 80015da:	430a      	orrs	r2, r1
 80015dc:	6022      	str	r2, [r4, #0]
 80015de:	2278      	movs	r2, #120	; 0x78
 80015e0:	4932      	ldr	r1, [pc, #200]	; (80016ac <_printf_i+0x230>)
 80015e2:	9103      	str	r1, [sp, #12]
 80015e4:	0021      	movs	r1, r4
 80015e6:	3145      	adds	r1, #69	; 0x45
 80015e8:	700a      	strb	r2, [r1, #0]
 80015ea:	6819      	ldr	r1, [r3, #0]
 80015ec:	6822      	ldr	r2, [r4, #0]
 80015ee:	c940      	ldmia	r1!, {r6}
 80015f0:	0610      	lsls	r0, r2, #24
 80015f2:	d402      	bmi.n	80015fa <_printf_i+0x17e>
 80015f4:	0650      	lsls	r0, r2, #25
 80015f6:	d500      	bpl.n	80015fa <_printf_i+0x17e>
 80015f8:	b2b6      	uxth	r6, r6
 80015fa:	6019      	str	r1, [r3, #0]
 80015fc:	07d3      	lsls	r3, r2, #31
 80015fe:	d502      	bpl.n	8001606 <_printf_i+0x18a>
 8001600:	2320      	movs	r3, #32
 8001602:	4313      	orrs	r3, r2
 8001604:	6023      	str	r3, [r4, #0]
 8001606:	2e00      	cmp	r6, #0
 8001608:	d001      	beq.n	800160e <_printf_i+0x192>
 800160a:	2710      	movs	r7, #16
 800160c:	e7b5      	b.n	800157a <_printf_i+0xfe>
 800160e:	2220      	movs	r2, #32
 8001610:	6823      	ldr	r3, [r4, #0]
 8001612:	4393      	bics	r3, r2
 8001614:	6023      	str	r3, [r4, #0]
 8001616:	e7f8      	b.n	800160a <_printf_i+0x18e>
 8001618:	681a      	ldr	r2, [r3, #0]
 800161a:	680d      	ldr	r5, [r1, #0]
 800161c:	1d10      	adds	r0, r2, #4
 800161e:	6949      	ldr	r1, [r1, #20]
 8001620:	6018      	str	r0, [r3, #0]
 8001622:	6813      	ldr	r3, [r2, #0]
 8001624:	062e      	lsls	r6, r5, #24
 8001626:	d501      	bpl.n	800162c <_printf_i+0x1b0>
 8001628:	6019      	str	r1, [r3, #0]
 800162a:	e002      	b.n	8001632 <_printf_i+0x1b6>
 800162c:	066d      	lsls	r5, r5, #25
 800162e:	d5fb      	bpl.n	8001628 <_printf_i+0x1ac>
 8001630:	8019      	strh	r1, [r3, #0]
 8001632:	2300      	movs	r3, #0
 8001634:	9d04      	ldr	r5, [sp, #16]
 8001636:	6123      	str	r3, [r4, #16]
 8001638:	e7bf      	b.n	80015ba <_printf_i+0x13e>
 800163a:	681a      	ldr	r2, [r3, #0]
 800163c:	1d11      	adds	r1, r2, #4
 800163e:	6019      	str	r1, [r3, #0]
 8001640:	6815      	ldr	r5, [r2, #0]
 8001642:	2100      	movs	r1, #0
 8001644:	0028      	movs	r0, r5
 8001646:	6862      	ldr	r2, [r4, #4]
 8001648:	f000 f9a0 	bl	800198c <memchr>
 800164c:	2800      	cmp	r0, #0
 800164e:	d001      	beq.n	8001654 <_printf_i+0x1d8>
 8001650:	1b40      	subs	r0, r0, r5
 8001652:	6060      	str	r0, [r4, #4]
 8001654:	6863      	ldr	r3, [r4, #4]
 8001656:	6123      	str	r3, [r4, #16]
 8001658:	2300      	movs	r3, #0
 800165a:	9a04      	ldr	r2, [sp, #16]
 800165c:	7013      	strb	r3, [r2, #0]
 800165e:	e7ac      	b.n	80015ba <_printf_i+0x13e>
 8001660:	002a      	movs	r2, r5
 8001662:	6923      	ldr	r3, [r4, #16]
 8001664:	9906      	ldr	r1, [sp, #24]
 8001666:	9805      	ldr	r0, [sp, #20]
 8001668:	9d07      	ldr	r5, [sp, #28]
 800166a:	47a8      	blx	r5
 800166c:	3001      	adds	r0, #1
 800166e:	d0ae      	beq.n	80015ce <_printf_i+0x152>
 8001670:	6823      	ldr	r3, [r4, #0]
 8001672:	079b      	lsls	r3, r3, #30
 8001674:	d415      	bmi.n	80016a2 <_printf_i+0x226>
 8001676:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001678:	68e0      	ldr	r0, [r4, #12]
 800167a:	4298      	cmp	r0, r3
 800167c:	daa9      	bge.n	80015d2 <_printf_i+0x156>
 800167e:	0018      	movs	r0, r3
 8001680:	e7a7      	b.n	80015d2 <_printf_i+0x156>
 8001682:	0022      	movs	r2, r4
 8001684:	2301      	movs	r3, #1
 8001686:	9906      	ldr	r1, [sp, #24]
 8001688:	9805      	ldr	r0, [sp, #20]
 800168a:	9e07      	ldr	r6, [sp, #28]
 800168c:	3219      	adds	r2, #25
 800168e:	47b0      	blx	r6
 8001690:	3001      	adds	r0, #1
 8001692:	d09c      	beq.n	80015ce <_printf_i+0x152>
 8001694:	3501      	adds	r5, #1
 8001696:	68e3      	ldr	r3, [r4, #12]
 8001698:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800169a:	1a9b      	subs	r3, r3, r2
 800169c:	42ab      	cmp	r3, r5
 800169e:	dcf0      	bgt.n	8001682 <_printf_i+0x206>
 80016a0:	e7e9      	b.n	8001676 <_printf_i+0x1fa>
 80016a2:	2500      	movs	r5, #0
 80016a4:	e7f7      	b.n	8001696 <_printf_i+0x21a>
 80016a6:	46c0      	nop			; (mov r8, r8)
 80016a8:	08002036 	.word	0x08002036
 80016ac:	08002047 	.word	0x08002047

080016b0 <__sflush_r>:
 80016b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80016b2:	220c      	movs	r2, #12
 80016b4:	5e8b      	ldrsh	r3, [r1, r2]
 80016b6:	0005      	movs	r5, r0
 80016b8:	000c      	movs	r4, r1
 80016ba:	071a      	lsls	r2, r3, #28
 80016bc:	d461      	bmi.n	8001782 <__sflush_r+0xd2>
 80016be:	684a      	ldr	r2, [r1, #4]
 80016c0:	2a00      	cmp	r2, #0
 80016c2:	dc02      	bgt.n	80016ca <__sflush_r+0x1a>
 80016c4:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 80016c6:	2a00      	cmp	r2, #0
 80016c8:	dd42      	ble.n	8001750 <__sflush_r+0xa0>
 80016ca:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80016cc:	2f00      	cmp	r7, #0
 80016ce:	d03f      	beq.n	8001750 <__sflush_r+0xa0>
 80016d0:	2200      	movs	r2, #0
 80016d2:	2080      	movs	r0, #128	; 0x80
 80016d4:	682e      	ldr	r6, [r5, #0]
 80016d6:	602a      	str	r2, [r5, #0]
 80016d8:	001a      	movs	r2, r3
 80016da:	0140      	lsls	r0, r0, #5
 80016dc:	6a21      	ldr	r1, [r4, #32]
 80016de:	4002      	ands	r2, r0
 80016e0:	4203      	tst	r3, r0
 80016e2:	d027      	beq.n	8001734 <__sflush_r+0x84>
 80016e4:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80016e6:	89a3      	ldrh	r3, [r4, #12]
 80016e8:	075b      	lsls	r3, r3, #29
 80016ea:	d506      	bpl.n	80016fa <__sflush_r+0x4a>
 80016ec:	6863      	ldr	r3, [r4, #4]
 80016ee:	1ad2      	subs	r2, r2, r3
 80016f0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80016f2:	2b00      	cmp	r3, #0
 80016f4:	d001      	beq.n	80016fa <__sflush_r+0x4a>
 80016f6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80016f8:	1ad2      	subs	r2, r2, r3
 80016fa:	2300      	movs	r3, #0
 80016fc:	0028      	movs	r0, r5
 80016fe:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8001700:	6a21      	ldr	r1, [r4, #32]
 8001702:	47b8      	blx	r7
 8001704:	1c43      	adds	r3, r0, #1
 8001706:	d025      	beq.n	8001754 <__sflush_r+0xa4>
 8001708:	2300      	movs	r3, #0
 800170a:	6063      	str	r3, [r4, #4]
 800170c:	6923      	ldr	r3, [r4, #16]
 800170e:	6023      	str	r3, [r4, #0]
 8001710:	89a3      	ldrh	r3, [r4, #12]
 8001712:	04db      	lsls	r3, r3, #19
 8001714:	d500      	bpl.n	8001718 <__sflush_r+0x68>
 8001716:	6560      	str	r0, [r4, #84]	; 0x54
 8001718:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800171a:	602e      	str	r6, [r5, #0]
 800171c:	2900      	cmp	r1, #0
 800171e:	d017      	beq.n	8001750 <__sflush_r+0xa0>
 8001720:	0023      	movs	r3, r4
 8001722:	3344      	adds	r3, #68	; 0x44
 8001724:	4299      	cmp	r1, r3
 8001726:	d002      	beq.n	800172e <__sflush_r+0x7e>
 8001728:	0028      	movs	r0, r5
 800172a:	f7ff fa9f 	bl	8000c6c <_free_r>
 800172e:	2300      	movs	r3, #0
 8001730:	6363      	str	r3, [r4, #52]	; 0x34
 8001732:	e00d      	b.n	8001750 <__sflush_r+0xa0>
 8001734:	2301      	movs	r3, #1
 8001736:	0028      	movs	r0, r5
 8001738:	47b8      	blx	r7
 800173a:	0002      	movs	r2, r0
 800173c:	1c43      	adds	r3, r0, #1
 800173e:	d1d2      	bne.n	80016e6 <__sflush_r+0x36>
 8001740:	682b      	ldr	r3, [r5, #0]
 8001742:	2b00      	cmp	r3, #0
 8001744:	d0cf      	beq.n	80016e6 <__sflush_r+0x36>
 8001746:	2b1d      	cmp	r3, #29
 8001748:	d001      	beq.n	800174e <__sflush_r+0x9e>
 800174a:	2b16      	cmp	r3, #22
 800174c:	d131      	bne.n	80017b2 <__sflush_r+0x102>
 800174e:	602e      	str	r6, [r5, #0]
 8001750:	2000      	movs	r0, #0
 8001752:	e035      	b.n	80017c0 <__sflush_r+0x110>
 8001754:	682b      	ldr	r3, [r5, #0]
 8001756:	210c      	movs	r1, #12
 8001758:	5e62      	ldrsh	r2, [r4, r1]
 800175a:	2b00      	cmp	r3, #0
 800175c:	d008      	beq.n	8001770 <__sflush_r+0xc0>
 800175e:	2b1d      	cmp	r3, #29
 8001760:	d001      	beq.n	8001766 <__sflush_r+0xb6>
 8001762:	2b16      	cmp	r3, #22
 8001764:	d10a      	bne.n	800177c <__sflush_r+0xcc>
 8001766:	2300      	movs	r3, #0
 8001768:	6063      	str	r3, [r4, #4]
 800176a:	6923      	ldr	r3, [r4, #16]
 800176c:	6023      	str	r3, [r4, #0]
 800176e:	e7d3      	b.n	8001718 <__sflush_r+0x68>
 8001770:	6063      	str	r3, [r4, #4]
 8001772:	6923      	ldr	r3, [r4, #16]
 8001774:	6023      	str	r3, [r4, #0]
 8001776:	04d2      	lsls	r2, r2, #19
 8001778:	d4cd      	bmi.n	8001716 <__sflush_r+0x66>
 800177a:	e7cd      	b.n	8001718 <__sflush_r+0x68>
 800177c:	2340      	movs	r3, #64	; 0x40
 800177e:	4313      	orrs	r3, r2
 8001780:	e01b      	b.n	80017ba <__sflush_r+0x10a>
 8001782:	690e      	ldr	r6, [r1, #16]
 8001784:	2e00      	cmp	r6, #0
 8001786:	d0e3      	beq.n	8001750 <__sflush_r+0xa0>
 8001788:	680f      	ldr	r7, [r1, #0]
 800178a:	600e      	str	r6, [r1, #0]
 800178c:	1bba      	subs	r2, r7, r6
 800178e:	9201      	str	r2, [sp, #4]
 8001790:	2200      	movs	r2, #0
 8001792:	079b      	lsls	r3, r3, #30
 8001794:	d100      	bne.n	8001798 <__sflush_r+0xe8>
 8001796:	694a      	ldr	r2, [r1, #20]
 8001798:	60a2      	str	r2, [r4, #8]
 800179a:	9b01      	ldr	r3, [sp, #4]
 800179c:	2b00      	cmp	r3, #0
 800179e:	ddd7      	ble.n	8001750 <__sflush_r+0xa0>
 80017a0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80017a2:	0032      	movs	r2, r6
 80017a4:	001f      	movs	r7, r3
 80017a6:	0028      	movs	r0, r5
 80017a8:	9b01      	ldr	r3, [sp, #4]
 80017aa:	6a21      	ldr	r1, [r4, #32]
 80017ac:	47b8      	blx	r7
 80017ae:	2800      	cmp	r0, #0
 80017b0:	dc07      	bgt.n	80017c2 <__sflush_r+0x112>
 80017b2:	2340      	movs	r3, #64	; 0x40
 80017b4:	89a2      	ldrh	r2, [r4, #12]
 80017b6:	4313      	orrs	r3, r2
 80017b8:	b21b      	sxth	r3, r3
 80017ba:	2001      	movs	r0, #1
 80017bc:	81a3      	strh	r3, [r4, #12]
 80017be:	4240      	negs	r0, r0
 80017c0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80017c2:	9b01      	ldr	r3, [sp, #4]
 80017c4:	1836      	adds	r6, r6, r0
 80017c6:	1a1b      	subs	r3, r3, r0
 80017c8:	9301      	str	r3, [sp, #4]
 80017ca:	e7e6      	b.n	800179a <__sflush_r+0xea>

080017cc <_fflush_r>:
 80017cc:	690b      	ldr	r3, [r1, #16]
 80017ce:	b570      	push	{r4, r5, r6, lr}
 80017d0:	0005      	movs	r5, r0
 80017d2:	000c      	movs	r4, r1
 80017d4:	2b00      	cmp	r3, #0
 80017d6:	d102      	bne.n	80017de <_fflush_r+0x12>
 80017d8:	2500      	movs	r5, #0
 80017da:	0028      	movs	r0, r5
 80017dc:	bd70      	pop	{r4, r5, r6, pc}
 80017de:	2800      	cmp	r0, #0
 80017e0:	d004      	beq.n	80017ec <_fflush_r+0x20>
 80017e2:	6a03      	ldr	r3, [r0, #32]
 80017e4:	2b00      	cmp	r3, #0
 80017e6:	d101      	bne.n	80017ec <_fflush_r+0x20>
 80017e8:	f7ff f812 	bl	8000810 <__sinit>
 80017ec:	220c      	movs	r2, #12
 80017ee:	5ea3      	ldrsh	r3, [r4, r2]
 80017f0:	2b00      	cmp	r3, #0
 80017f2:	d0f1      	beq.n	80017d8 <_fflush_r+0xc>
 80017f4:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80017f6:	07d2      	lsls	r2, r2, #31
 80017f8:	d404      	bmi.n	8001804 <_fflush_r+0x38>
 80017fa:	059b      	lsls	r3, r3, #22
 80017fc:	d402      	bmi.n	8001804 <_fflush_r+0x38>
 80017fe:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001800:	f7ff fa31 	bl	8000c66 <__retarget_lock_acquire_recursive>
 8001804:	0028      	movs	r0, r5
 8001806:	0021      	movs	r1, r4
 8001808:	f7ff ff52 	bl	80016b0 <__sflush_r>
 800180c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800180e:	0005      	movs	r5, r0
 8001810:	07db      	lsls	r3, r3, #31
 8001812:	d4e2      	bmi.n	80017da <_fflush_r+0xe>
 8001814:	89a3      	ldrh	r3, [r4, #12]
 8001816:	059b      	lsls	r3, r3, #22
 8001818:	d4df      	bmi.n	80017da <_fflush_r+0xe>
 800181a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800181c:	f7ff fa24 	bl	8000c68 <__retarget_lock_release_recursive>
 8001820:	e7db      	b.n	80017da <_fflush_r+0xe>
	...

08001824 <__swhatbuf_r>:
 8001824:	b570      	push	{r4, r5, r6, lr}
 8001826:	000e      	movs	r6, r1
 8001828:	001d      	movs	r5, r3
 800182a:	230e      	movs	r3, #14
 800182c:	5ec9      	ldrsh	r1, [r1, r3]
 800182e:	0014      	movs	r4, r2
 8001830:	b096      	sub	sp, #88	; 0x58
 8001832:	2900      	cmp	r1, #0
 8001834:	da0c      	bge.n	8001850 <__swhatbuf_r+0x2c>
 8001836:	89b2      	ldrh	r2, [r6, #12]
 8001838:	2380      	movs	r3, #128	; 0x80
 800183a:	0011      	movs	r1, r2
 800183c:	4019      	ands	r1, r3
 800183e:	421a      	tst	r2, r3
 8001840:	d114      	bne.n	800186c <__swhatbuf_r+0x48>
 8001842:	2380      	movs	r3, #128	; 0x80
 8001844:	00db      	lsls	r3, r3, #3
 8001846:	2000      	movs	r0, #0
 8001848:	6029      	str	r1, [r5, #0]
 800184a:	6023      	str	r3, [r4, #0]
 800184c:	b016      	add	sp, #88	; 0x58
 800184e:	bd70      	pop	{r4, r5, r6, pc}
 8001850:	466a      	mov	r2, sp
 8001852:	f000 f865 	bl	8001920 <_fstat_r>
 8001856:	2800      	cmp	r0, #0
 8001858:	dbed      	blt.n	8001836 <__swhatbuf_r+0x12>
 800185a:	23f0      	movs	r3, #240	; 0xf0
 800185c:	9901      	ldr	r1, [sp, #4]
 800185e:	021b      	lsls	r3, r3, #8
 8001860:	4019      	ands	r1, r3
 8001862:	4b04      	ldr	r3, [pc, #16]	; (8001874 <__swhatbuf_r+0x50>)
 8001864:	18c9      	adds	r1, r1, r3
 8001866:	424b      	negs	r3, r1
 8001868:	4159      	adcs	r1, r3
 800186a:	e7ea      	b.n	8001842 <__swhatbuf_r+0x1e>
 800186c:	2100      	movs	r1, #0
 800186e:	2340      	movs	r3, #64	; 0x40
 8001870:	e7e9      	b.n	8001846 <__swhatbuf_r+0x22>
 8001872:	46c0      	nop			; (mov r8, r8)
 8001874:	ffffe000 	.word	0xffffe000

08001878 <__smakebuf_r>:
 8001878:	b5f0      	push	{r4, r5, r6, r7, lr}
 800187a:	2602      	movs	r6, #2
 800187c:	898b      	ldrh	r3, [r1, #12]
 800187e:	0005      	movs	r5, r0
 8001880:	000c      	movs	r4, r1
 8001882:	b085      	sub	sp, #20
 8001884:	4233      	tst	r3, r6
 8001886:	d007      	beq.n	8001898 <__smakebuf_r+0x20>
 8001888:	0023      	movs	r3, r4
 800188a:	3347      	adds	r3, #71	; 0x47
 800188c:	6023      	str	r3, [r4, #0]
 800188e:	6123      	str	r3, [r4, #16]
 8001890:	2301      	movs	r3, #1
 8001892:	6163      	str	r3, [r4, #20]
 8001894:	b005      	add	sp, #20
 8001896:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001898:	ab03      	add	r3, sp, #12
 800189a:	aa02      	add	r2, sp, #8
 800189c:	f7ff ffc2 	bl	8001824 <__swhatbuf_r>
 80018a0:	9f02      	ldr	r7, [sp, #8]
 80018a2:	9001      	str	r0, [sp, #4]
 80018a4:	0039      	movs	r1, r7
 80018a6:	0028      	movs	r0, r5
 80018a8:	f7ff fa4c 	bl	8000d44 <_malloc_r>
 80018ac:	2800      	cmp	r0, #0
 80018ae:	d108      	bne.n	80018c2 <__smakebuf_r+0x4a>
 80018b0:	220c      	movs	r2, #12
 80018b2:	5ea3      	ldrsh	r3, [r4, r2]
 80018b4:	059a      	lsls	r2, r3, #22
 80018b6:	d4ed      	bmi.n	8001894 <__smakebuf_r+0x1c>
 80018b8:	2203      	movs	r2, #3
 80018ba:	4393      	bics	r3, r2
 80018bc:	431e      	orrs	r6, r3
 80018be:	81a6      	strh	r6, [r4, #12]
 80018c0:	e7e2      	b.n	8001888 <__smakebuf_r+0x10>
 80018c2:	2380      	movs	r3, #128	; 0x80
 80018c4:	89a2      	ldrh	r2, [r4, #12]
 80018c6:	6020      	str	r0, [r4, #0]
 80018c8:	4313      	orrs	r3, r2
 80018ca:	81a3      	strh	r3, [r4, #12]
 80018cc:	9b03      	ldr	r3, [sp, #12]
 80018ce:	6120      	str	r0, [r4, #16]
 80018d0:	6167      	str	r7, [r4, #20]
 80018d2:	2b00      	cmp	r3, #0
 80018d4:	d00c      	beq.n	80018f0 <__smakebuf_r+0x78>
 80018d6:	0028      	movs	r0, r5
 80018d8:	230e      	movs	r3, #14
 80018da:	5ee1      	ldrsh	r1, [r4, r3]
 80018dc:	f000 f832 	bl	8001944 <_isatty_r>
 80018e0:	2800      	cmp	r0, #0
 80018e2:	d005      	beq.n	80018f0 <__smakebuf_r+0x78>
 80018e4:	2303      	movs	r3, #3
 80018e6:	89a2      	ldrh	r2, [r4, #12]
 80018e8:	439a      	bics	r2, r3
 80018ea:	3b02      	subs	r3, #2
 80018ec:	4313      	orrs	r3, r2
 80018ee:	81a3      	strh	r3, [r4, #12]
 80018f0:	89a3      	ldrh	r3, [r4, #12]
 80018f2:	9a01      	ldr	r2, [sp, #4]
 80018f4:	4313      	orrs	r3, r2
 80018f6:	81a3      	strh	r3, [r4, #12]
 80018f8:	e7cc      	b.n	8001894 <__smakebuf_r+0x1c>

080018fa <memmove>:
 80018fa:	b510      	push	{r4, lr}
 80018fc:	4288      	cmp	r0, r1
 80018fe:	d806      	bhi.n	800190e <memmove+0x14>
 8001900:	2300      	movs	r3, #0
 8001902:	429a      	cmp	r2, r3
 8001904:	d008      	beq.n	8001918 <memmove+0x1e>
 8001906:	5ccc      	ldrb	r4, [r1, r3]
 8001908:	54c4      	strb	r4, [r0, r3]
 800190a:	3301      	adds	r3, #1
 800190c:	e7f9      	b.n	8001902 <memmove+0x8>
 800190e:	188b      	adds	r3, r1, r2
 8001910:	4298      	cmp	r0, r3
 8001912:	d2f5      	bcs.n	8001900 <memmove+0x6>
 8001914:	3a01      	subs	r2, #1
 8001916:	d200      	bcs.n	800191a <memmove+0x20>
 8001918:	bd10      	pop	{r4, pc}
 800191a:	5c8b      	ldrb	r3, [r1, r2]
 800191c:	5483      	strb	r3, [r0, r2]
 800191e:	e7f9      	b.n	8001914 <memmove+0x1a>

08001920 <_fstat_r>:
 8001920:	2300      	movs	r3, #0
 8001922:	b570      	push	{r4, r5, r6, lr}
 8001924:	4d06      	ldr	r5, [pc, #24]	; (8001940 <_fstat_r+0x20>)
 8001926:	0004      	movs	r4, r0
 8001928:	0008      	movs	r0, r1
 800192a:	0011      	movs	r1, r2
 800192c:	602b      	str	r3, [r5, #0]
 800192e:	f000 f9b5 	bl	8001c9c <_fstat>
 8001932:	1c43      	adds	r3, r0, #1
 8001934:	d103      	bne.n	800193e <_fstat_r+0x1e>
 8001936:	682b      	ldr	r3, [r5, #0]
 8001938:	2b00      	cmp	r3, #0
 800193a:	d000      	beq.n	800193e <_fstat_r+0x1e>
 800193c:	6023      	str	r3, [r4, #0]
 800193e:	bd70      	pop	{r4, r5, r6, pc}
 8001940:	200001c4 	.word	0x200001c4

08001944 <_isatty_r>:
 8001944:	2300      	movs	r3, #0
 8001946:	b570      	push	{r4, r5, r6, lr}
 8001948:	4d06      	ldr	r5, [pc, #24]	; (8001964 <_isatty_r+0x20>)
 800194a:	0004      	movs	r4, r0
 800194c:	0008      	movs	r0, r1
 800194e:	602b      	str	r3, [r5, #0]
 8001950:	f000 fb02 	bl	8001f58 <_isatty>
 8001954:	1c43      	adds	r3, r0, #1
 8001956:	d103      	bne.n	8001960 <_isatty_r+0x1c>
 8001958:	682b      	ldr	r3, [r5, #0]
 800195a:	2b00      	cmp	r3, #0
 800195c:	d000      	beq.n	8001960 <_isatty_r+0x1c>
 800195e:	6023      	str	r3, [r4, #0]
 8001960:	bd70      	pop	{r4, r5, r6, pc}
 8001962:	46c0      	nop			; (mov r8, r8)
 8001964:	200001c4 	.word	0x200001c4

08001968 <_sbrk_r>:
 8001968:	2300      	movs	r3, #0
 800196a:	b570      	push	{r4, r5, r6, lr}
 800196c:	4d06      	ldr	r5, [pc, #24]	; (8001988 <_sbrk_r+0x20>)
 800196e:	0004      	movs	r4, r0
 8001970:	0008      	movs	r0, r1
 8001972:	602b      	str	r3, [r5, #0]
 8001974:	f000 f94a 	bl	8001c0c <_sbrk>
 8001978:	1c43      	adds	r3, r0, #1
 800197a:	d103      	bne.n	8001984 <_sbrk_r+0x1c>
 800197c:	682b      	ldr	r3, [r5, #0]
 800197e:	2b00      	cmp	r3, #0
 8001980:	d000      	beq.n	8001984 <_sbrk_r+0x1c>
 8001982:	6023      	str	r3, [r4, #0]
 8001984:	bd70      	pop	{r4, r5, r6, pc}
 8001986:	46c0      	nop			; (mov r8, r8)
 8001988:	200001c4 	.word	0x200001c4

0800198c <memchr>:
 800198c:	b2c9      	uxtb	r1, r1
 800198e:	1882      	adds	r2, r0, r2
 8001990:	4290      	cmp	r0, r2
 8001992:	d101      	bne.n	8001998 <memchr+0xc>
 8001994:	2000      	movs	r0, #0
 8001996:	4770      	bx	lr
 8001998:	7803      	ldrb	r3, [r0, #0]
 800199a:	428b      	cmp	r3, r1
 800199c:	d0fb      	beq.n	8001996 <memchr+0xa>
 800199e:	3001      	adds	r0, #1
 80019a0:	e7f6      	b.n	8001990 <memchr+0x4>

080019a2 <memcpy>:
 80019a2:	2300      	movs	r3, #0
 80019a4:	b510      	push	{r4, lr}
 80019a6:	429a      	cmp	r2, r3
 80019a8:	d100      	bne.n	80019ac <memcpy+0xa>
 80019aa:	bd10      	pop	{r4, pc}
 80019ac:	5ccc      	ldrb	r4, [r1, r3]
 80019ae:	54c4      	strb	r4, [r0, r3]
 80019b0:	3301      	adds	r3, #1
 80019b2:	e7f8      	b.n	80019a6 <memcpy+0x4>

080019b4 <_realloc_r>:
 80019b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80019b6:	0006      	movs	r6, r0
 80019b8:	000c      	movs	r4, r1
 80019ba:	0015      	movs	r5, r2
 80019bc:	2900      	cmp	r1, #0
 80019be:	d105      	bne.n	80019cc <_realloc_r+0x18>
 80019c0:	0011      	movs	r1, r2
 80019c2:	f7ff f9bf 	bl	8000d44 <_malloc_r>
 80019c6:	0004      	movs	r4, r0
 80019c8:	0020      	movs	r0, r4
 80019ca:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80019cc:	2a00      	cmp	r2, #0
 80019ce:	d103      	bne.n	80019d8 <_realloc_r+0x24>
 80019d0:	f7ff f94c 	bl	8000c6c <_free_r>
 80019d4:	2400      	movs	r4, #0
 80019d6:	e7f7      	b.n	80019c8 <_realloc_r+0x14>
 80019d8:	f000 f81b 	bl	8001a12 <_malloc_usable_size_r>
 80019dc:	0007      	movs	r7, r0
 80019de:	4285      	cmp	r5, r0
 80019e0:	d802      	bhi.n	80019e8 <_realloc_r+0x34>
 80019e2:	0843      	lsrs	r3, r0, #1
 80019e4:	42ab      	cmp	r3, r5
 80019e6:	d3ef      	bcc.n	80019c8 <_realloc_r+0x14>
 80019e8:	0029      	movs	r1, r5
 80019ea:	0030      	movs	r0, r6
 80019ec:	f7ff f9aa 	bl	8000d44 <_malloc_r>
 80019f0:	9001      	str	r0, [sp, #4]
 80019f2:	2800      	cmp	r0, #0
 80019f4:	d0ee      	beq.n	80019d4 <_realloc_r+0x20>
 80019f6:	002a      	movs	r2, r5
 80019f8:	42bd      	cmp	r5, r7
 80019fa:	d900      	bls.n	80019fe <_realloc_r+0x4a>
 80019fc:	003a      	movs	r2, r7
 80019fe:	0021      	movs	r1, r4
 8001a00:	9801      	ldr	r0, [sp, #4]
 8001a02:	f7ff ffce 	bl	80019a2 <memcpy>
 8001a06:	0021      	movs	r1, r4
 8001a08:	0030      	movs	r0, r6
 8001a0a:	f7ff f92f 	bl	8000c6c <_free_r>
 8001a0e:	9c01      	ldr	r4, [sp, #4]
 8001a10:	e7da      	b.n	80019c8 <_realloc_r+0x14>

08001a12 <_malloc_usable_size_r>:
 8001a12:	1f0b      	subs	r3, r1, #4
 8001a14:	681b      	ldr	r3, [r3, #0]
 8001a16:	1f18      	subs	r0, r3, #4
 8001a18:	2b00      	cmp	r3, #0
 8001a1a:	da01      	bge.n	8001a20 <_malloc_usable_size_r+0xe>
 8001a1c:	580b      	ldr	r3, [r1, r0]
 8001a1e:	18c0      	adds	r0, r0, r3
 8001a20:	4770      	bx	lr
	...

08001a24 <findslot>:
 8001a24:	4b0a      	ldr	r3, [pc, #40]	; (8001a50 <findslot+0x2c>)
 8001a26:	b510      	push	{r4, lr}
 8001a28:	0004      	movs	r4, r0
 8001a2a:	6818      	ldr	r0, [r3, #0]
 8001a2c:	2800      	cmp	r0, #0
 8001a2e:	d004      	beq.n	8001a3a <findslot+0x16>
 8001a30:	6a03      	ldr	r3, [r0, #32]
 8001a32:	2b00      	cmp	r3, #0
 8001a34:	d101      	bne.n	8001a3a <findslot+0x16>
 8001a36:	f7fe feeb 	bl	8000810 <__sinit>
 8001a3a:	2000      	movs	r0, #0
 8001a3c:	2c13      	cmp	r4, #19
 8001a3e:	d805      	bhi.n	8001a4c <findslot+0x28>
 8001a40:	4b04      	ldr	r3, [pc, #16]	; (8001a54 <findslot+0x30>)
 8001a42:	00e4      	lsls	r4, r4, #3
 8001a44:	58e2      	ldr	r2, [r4, r3]
 8001a46:	3201      	adds	r2, #1
 8001a48:	d000      	beq.n	8001a4c <findslot+0x28>
 8001a4a:	18e0      	adds	r0, r4, r3
 8001a4c:	bd10      	pop	{r4, pc}
 8001a4e:	46c0      	nop			; (mov r8, r8)
 8001a50:	20000010 	.word	0x20000010
 8001a54:	200001e4 	.word	0x200001e4

08001a58 <error>:
 8001a58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001a5a:	0004      	movs	r4, r0
 8001a5c:	f000 fa9a 	bl	8001f94 <__errno>
 8001a60:	2613      	movs	r6, #19
 8001a62:	0005      	movs	r5, r0
 8001a64:	2700      	movs	r7, #0
 8001a66:	1c30      	adds	r0, r6, #0
 8001a68:	1c39      	adds	r1, r7, #0
 8001a6a:	beab      	bkpt	0x00ab
 8001a6c:	1c06      	adds	r6, r0, #0
 8001a6e:	602e      	str	r6, [r5, #0]
 8001a70:	0020      	movs	r0, r4
 8001a72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001a74 <checkerror>:
 8001a74:	b510      	push	{r4, lr}
 8001a76:	1c43      	adds	r3, r0, #1
 8001a78:	d101      	bne.n	8001a7e <checkerror+0xa>
 8001a7a:	f7ff ffed 	bl	8001a58 <error>
 8001a7e:	bd10      	pop	{r4, pc}

08001a80 <_swiread>:
 8001a80:	b530      	push	{r4, r5, lr}
 8001a82:	b085      	sub	sp, #20
 8001a84:	ad01      	add	r5, sp, #4
 8001a86:	9001      	str	r0, [sp, #4]
 8001a88:	9102      	str	r1, [sp, #8]
 8001a8a:	9203      	str	r2, [sp, #12]
 8001a8c:	2406      	movs	r4, #6
 8001a8e:	1c20      	adds	r0, r4, #0
 8001a90:	1c29      	adds	r1, r5, #0
 8001a92:	beab      	bkpt	0x00ab
 8001a94:	1c04      	adds	r4, r0, #0
 8001a96:	0020      	movs	r0, r4
 8001a98:	f7ff ffec 	bl	8001a74 <checkerror>
 8001a9c:	b005      	add	sp, #20
 8001a9e:	bd30      	pop	{r4, r5, pc}

08001aa0 <_read>:
 8001aa0:	b570      	push	{r4, r5, r6, lr}
 8001aa2:	000e      	movs	r6, r1
 8001aa4:	0014      	movs	r4, r2
 8001aa6:	f7ff ffbd 	bl	8001a24 <findslot>
 8001aaa:	1e05      	subs	r5, r0, #0
 8001aac:	d106      	bne.n	8001abc <_read+0x1c>
 8001aae:	f000 fa71 	bl	8001f94 <__errno>
 8001ab2:	2309      	movs	r3, #9
 8001ab4:	6003      	str	r3, [r0, #0]
 8001ab6:	2001      	movs	r0, #1
 8001ab8:	4240      	negs	r0, r0
 8001aba:	bd70      	pop	{r4, r5, r6, pc}
 8001abc:	0022      	movs	r2, r4
 8001abe:	0031      	movs	r1, r6
 8001ac0:	6800      	ldr	r0, [r0, #0]
 8001ac2:	f7ff ffdd 	bl	8001a80 <_swiread>
 8001ac6:	1c43      	adds	r3, r0, #1
 8001ac8:	d0f5      	beq.n	8001ab6 <_read+0x16>
 8001aca:	686b      	ldr	r3, [r5, #4]
 8001acc:	1a20      	subs	r0, r4, r0
 8001ace:	181b      	adds	r3, r3, r0
 8001ad0:	606b      	str	r3, [r5, #4]
 8001ad2:	e7f2      	b.n	8001aba <_read+0x1a>

08001ad4 <_swilseek>:
 8001ad4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001ad6:	000c      	movs	r4, r1
 8001ad8:	0016      	movs	r6, r2
 8001ada:	f7ff ffa3 	bl	8001a24 <findslot>
 8001ade:	1e05      	subs	r5, r0, #0
 8001ae0:	d107      	bne.n	8001af2 <_swilseek+0x1e>
 8001ae2:	f000 fa57 	bl	8001f94 <__errno>
 8001ae6:	2309      	movs	r3, #9
 8001ae8:	6003      	str	r3, [r0, #0]
 8001aea:	2401      	movs	r4, #1
 8001aec:	4264      	negs	r4, r4
 8001aee:	0020      	movs	r0, r4
 8001af0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8001af2:	2e02      	cmp	r6, #2
 8001af4:	d903      	bls.n	8001afe <_swilseek+0x2a>
 8001af6:	f000 fa4d 	bl	8001f94 <__errno>
 8001afa:	2316      	movs	r3, #22
 8001afc:	e7f4      	b.n	8001ae8 <_swilseek+0x14>
 8001afe:	2e01      	cmp	r6, #1
 8001b00:	d112      	bne.n	8001b28 <_swilseek+0x54>
 8001b02:	6843      	ldr	r3, [r0, #4]
 8001b04:	18e4      	adds	r4, r4, r3
 8001b06:	d4f6      	bmi.n	8001af6 <_swilseek+0x22>
 8001b08:	466f      	mov	r7, sp
 8001b0a:	682b      	ldr	r3, [r5, #0]
 8001b0c:	260a      	movs	r6, #10
 8001b0e:	9300      	str	r3, [sp, #0]
 8001b10:	607c      	str	r4, [r7, #4]
 8001b12:	1c30      	adds	r0, r6, #0
 8001b14:	1c39      	adds	r1, r7, #0
 8001b16:	beab      	bkpt	0x00ab
 8001b18:	1c06      	adds	r6, r0, #0
 8001b1a:	0030      	movs	r0, r6
 8001b1c:	f7ff ffaa 	bl	8001a74 <checkerror>
 8001b20:	2800      	cmp	r0, #0
 8001b22:	dbe2      	blt.n	8001aea <_swilseek+0x16>
 8001b24:	606c      	str	r4, [r5, #4]
 8001b26:	e7e2      	b.n	8001aee <_swilseek+0x1a>
 8001b28:	6803      	ldr	r3, [r0, #0]
 8001b2a:	2e02      	cmp	r6, #2
 8001b2c:	d1ec      	bne.n	8001b08 <_swilseek+0x34>
 8001b2e:	466f      	mov	r7, sp
 8001b30:	9300      	str	r3, [sp, #0]
 8001b32:	360a      	adds	r6, #10
 8001b34:	1c30      	adds	r0, r6, #0
 8001b36:	1c39      	adds	r1, r7, #0
 8001b38:	beab      	bkpt	0x00ab
 8001b3a:	1c06      	adds	r6, r0, #0
 8001b3c:	0030      	movs	r0, r6
 8001b3e:	f7ff ff99 	bl	8001a74 <checkerror>
 8001b42:	1824      	adds	r4, r4, r0
 8001b44:	3001      	adds	r0, #1
 8001b46:	d1df      	bne.n	8001b08 <_swilseek+0x34>
 8001b48:	e7cf      	b.n	8001aea <_swilseek+0x16>

08001b4a <_lseek>:
 8001b4a:	b510      	push	{r4, lr}
 8001b4c:	f7ff ffc2 	bl	8001ad4 <_swilseek>
 8001b50:	bd10      	pop	{r4, pc}

08001b52 <_swiwrite>:
 8001b52:	b530      	push	{r4, r5, lr}
 8001b54:	b085      	sub	sp, #20
 8001b56:	ad01      	add	r5, sp, #4
 8001b58:	9001      	str	r0, [sp, #4]
 8001b5a:	9102      	str	r1, [sp, #8]
 8001b5c:	9203      	str	r2, [sp, #12]
 8001b5e:	2405      	movs	r4, #5
 8001b60:	1c20      	adds	r0, r4, #0
 8001b62:	1c29      	adds	r1, r5, #0
 8001b64:	beab      	bkpt	0x00ab
 8001b66:	1c04      	adds	r4, r0, #0
 8001b68:	0020      	movs	r0, r4
 8001b6a:	f7ff ff83 	bl	8001a74 <checkerror>
 8001b6e:	b005      	add	sp, #20
 8001b70:	bd30      	pop	{r4, r5, pc}

08001b72 <_write>:
 8001b72:	b570      	push	{r4, r5, r6, lr}
 8001b74:	000e      	movs	r6, r1
 8001b76:	0015      	movs	r5, r2
 8001b78:	f7ff ff54 	bl	8001a24 <findslot>
 8001b7c:	1e04      	subs	r4, r0, #0
 8001b7e:	d106      	bne.n	8001b8e <_write+0x1c>
 8001b80:	f000 fa08 	bl	8001f94 <__errno>
 8001b84:	2309      	movs	r3, #9
 8001b86:	6003      	str	r3, [r0, #0]
 8001b88:	2001      	movs	r0, #1
 8001b8a:	4240      	negs	r0, r0
 8001b8c:	bd70      	pop	{r4, r5, r6, pc}
 8001b8e:	002a      	movs	r2, r5
 8001b90:	0031      	movs	r1, r6
 8001b92:	6800      	ldr	r0, [r0, #0]
 8001b94:	f7ff ffdd 	bl	8001b52 <_swiwrite>
 8001b98:	1e03      	subs	r3, r0, #0
 8001b9a:	dbf5      	blt.n	8001b88 <_write+0x16>
 8001b9c:	6862      	ldr	r2, [r4, #4]
 8001b9e:	1a28      	subs	r0, r5, r0
 8001ba0:	1812      	adds	r2, r2, r0
 8001ba2:	6062      	str	r2, [r4, #4]
 8001ba4:	42ab      	cmp	r3, r5
 8001ba6:	d1f1      	bne.n	8001b8c <_write+0x1a>
 8001ba8:	2000      	movs	r0, #0
 8001baa:	f7ff ff55 	bl	8001a58 <error>
 8001bae:	e7ed      	b.n	8001b8c <_write+0x1a>

08001bb0 <_swiclose>:
 8001bb0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001bb2:	2402      	movs	r4, #2
 8001bb4:	9001      	str	r0, [sp, #4]
 8001bb6:	ad01      	add	r5, sp, #4
 8001bb8:	1c20      	adds	r0, r4, #0
 8001bba:	1c29      	adds	r1, r5, #0
 8001bbc:	beab      	bkpt	0x00ab
 8001bbe:	1c04      	adds	r4, r0, #0
 8001bc0:	0020      	movs	r0, r4
 8001bc2:	f7ff ff57 	bl	8001a74 <checkerror>
 8001bc6:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08001bc8 <_close>:
 8001bc8:	b570      	push	{r4, r5, r6, lr}
 8001bca:	0004      	movs	r4, r0
 8001bcc:	f7ff ff2a 	bl	8001a24 <findslot>
 8001bd0:	1e05      	subs	r5, r0, #0
 8001bd2:	d106      	bne.n	8001be2 <_close+0x1a>
 8001bd4:	f000 f9de 	bl	8001f94 <__errno>
 8001bd8:	2309      	movs	r3, #9
 8001bda:	6003      	str	r3, [r0, #0]
 8001bdc:	2001      	movs	r0, #1
 8001bde:	4240      	negs	r0, r0
 8001be0:	bd70      	pop	{r4, r5, r6, pc}
 8001be2:	3c01      	subs	r4, #1
 8001be4:	2c01      	cmp	r4, #1
 8001be6:	d809      	bhi.n	8001bfc <_close+0x34>
 8001be8:	4b07      	ldr	r3, [pc, #28]	; (8001c08 <_close+0x40>)
 8001bea:	689a      	ldr	r2, [r3, #8]
 8001bec:	691b      	ldr	r3, [r3, #16]
 8001bee:	429a      	cmp	r2, r3
 8001bf0:	d104      	bne.n	8001bfc <_close+0x34>
 8001bf2:	2301      	movs	r3, #1
 8001bf4:	425b      	negs	r3, r3
 8001bf6:	2000      	movs	r0, #0
 8001bf8:	602b      	str	r3, [r5, #0]
 8001bfa:	e7f1      	b.n	8001be0 <_close+0x18>
 8001bfc:	6828      	ldr	r0, [r5, #0]
 8001bfe:	f7ff ffd7 	bl	8001bb0 <_swiclose>
 8001c02:	2800      	cmp	r0, #0
 8001c04:	d0f5      	beq.n	8001bf2 <_close+0x2a>
 8001c06:	e7eb      	b.n	8001be0 <_close+0x18>
 8001c08:	200001e4 	.word	0x200001e4

08001c0c <_sbrk>:
 8001c0c:	4a0e      	ldr	r2, [pc, #56]	; (8001c48 <_sbrk+0x3c>)
 8001c0e:	0003      	movs	r3, r0
 8001c10:	6811      	ldr	r1, [r2, #0]
 8001c12:	b510      	push	{r4, lr}
 8001c14:	2900      	cmp	r1, #0
 8001c16:	d101      	bne.n	8001c1c <_sbrk+0x10>
 8001c18:	490c      	ldr	r1, [pc, #48]	; (8001c4c <_sbrk+0x40>)
 8001c1a:	6011      	str	r1, [r2, #0]
 8001c1c:	4669      	mov	r1, sp
 8001c1e:	6810      	ldr	r0, [r2, #0]
 8001c20:	18c3      	adds	r3, r0, r3
 8001c22:	428b      	cmp	r3, r1
 8001c24:	d806      	bhi.n	8001c34 <_sbrk+0x28>
 8001c26:	490a      	ldr	r1, [pc, #40]	; (8001c50 <_sbrk+0x44>)
 8001c28:	4c0a      	ldr	r4, [pc, #40]	; (8001c54 <_sbrk+0x48>)
 8001c2a:	6809      	ldr	r1, [r1, #0]
 8001c2c:	42a1      	cmp	r1, r4
 8001c2e:	d008      	beq.n	8001c42 <_sbrk+0x36>
 8001c30:	428b      	cmp	r3, r1
 8001c32:	d906      	bls.n	8001c42 <_sbrk+0x36>
 8001c34:	f000 f9ae 	bl	8001f94 <__errno>
 8001c38:	230c      	movs	r3, #12
 8001c3a:	6003      	str	r3, [r0, #0]
 8001c3c:	2001      	movs	r0, #1
 8001c3e:	4240      	negs	r0, r0
 8001c40:	bd10      	pop	{r4, pc}
 8001c42:	6013      	str	r3, [r2, #0]
 8001c44:	e7fc      	b.n	8001c40 <_sbrk+0x34>
 8001c46:	46c0      	nop			; (mov r8, r8)
 8001c48:	200001d4 	.word	0x200001d4
 8001c4c:	20000288 	.word	0x20000288
 8001c50:	20000060 	.word	0x20000060
 8001c54:	cafedead 	.word	0xcafedead

08001c58 <_swistat>:
 8001c58:	b570      	push	{r4, r5, r6, lr}
 8001c5a:	000c      	movs	r4, r1
 8001c5c:	f7ff fee2 	bl	8001a24 <findslot>
 8001c60:	1e05      	subs	r5, r0, #0
 8001c62:	d106      	bne.n	8001c72 <_swistat+0x1a>
 8001c64:	f000 f996 	bl	8001f94 <__errno>
 8001c68:	2309      	movs	r3, #9
 8001c6a:	6003      	str	r3, [r0, #0]
 8001c6c:	2001      	movs	r0, #1
 8001c6e:	4240      	negs	r0, r0
 8001c70:	bd70      	pop	{r4, r5, r6, pc}
 8001c72:	2380      	movs	r3, #128	; 0x80
 8001c74:	6862      	ldr	r2, [r4, #4]
 8001c76:	019b      	lsls	r3, r3, #6
 8001c78:	4313      	orrs	r3, r2
 8001c7a:	6063      	str	r3, [r4, #4]
 8001c7c:	2380      	movs	r3, #128	; 0x80
 8001c7e:	00db      	lsls	r3, r3, #3
 8001c80:	260c      	movs	r6, #12
 8001c82:	64a3      	str	r3, [r4, #72]	; 0x48
 8001c84:	1c30      	adds	r0, r6, #0
 8001c86:	1c29      	adds	r1, r5, #0
 8001c88:	beab      	bkpt	0x00ab
 8001c8a:	1c05      	adds	r5, r0, #0
 8001c8c:	0028      	movs	r0, r5
 8001c8e:	f7ff fef1 	bl	8001a74 <checkerror>
 8001c92:	1c43      	adds	r3, r0, #1
 8001c94:	d0ea      	beq.n	8001c6c <_swistat+0x14>
 8001c96:	6120      	str	r0, [r4, #16]
 8001c98:	2000      	movs	r0, #0
 8001c9a:	e7e9      	b.n	8001c70 <_swistat+0x18>

08001c9c <_fstat>:
 8001c9c:	b570      	push	{r4, r5, r6, lr}
 8001c9e:	000c      	movs	r4, r1
 8001ca0:	0005      	movs	r5, r0
 8001ca2:	2258      	movs	r2, #88	; 0x58
 8001ca4:	2100      	movs	r1, #0
 8001ca6:	0020      	movs	r0, r4
 8001ca8:	f7fe ff62 	bl	8000b70 <memset>
 8001cac:	0028      	movs	r0, r5
 8001cae:	0021      	movs	r1, r4
 8001cb0:	f7ff ffd2 	bl	8001c58 <_swistat>
 8001cb4:	bd70      	pop	{r4, r5, r6, pc}

08001cb6 <_stat>:
 8001cb6:	b570      	push	{r4, r5, r6, lr}
 8001cb8:	000d      	movs	r5, r1
 8001cba:	0004      	movs	r4, r0
 8001cbc:	2258      	movs	r2, #88	; 0x58
 8001cbe:	2100      	movs	r1, #0
 8001cc0:	0028      	movs	r0, r5
 8001cc2:	f7fe ff55 	bl	8000b70 <memset>
 8001cc6:	0020      	movs	r0, r4
 8001cc8:	2100      	movs	r1, #0
 8001cca:	f000 f813 	bl	8001cf4 <_swiopen>
 8001cce:	0004      	movs	r4, r0
 8001cd0:	1c43      	adds	r3, r0, #1
 8001cd2:	d00c      	beq.n	8001cee <_stat+0x38>
 8001cd4:	2381      	movs	r3, #129	; 0x81
 8001cd6:	686a      	ldr	r2, [r5, #4]
 8001cd8:	021b      	lsls	r3, r3, #8
 8001cda:	4313      	orrs	r3, r2
 8001cdc:	0029      	movs	r1, r5
 8001cde:	606b      	str	r3, [r5, #4]
 8001ce0:	f7ff ffba 	bl	8001c58 <_swistat>
 8001ce4:	0005      	movs	r5, r0
 8001ce6:	0020      	movs	r0, r4
 8001ce8:	f7ff ff6e 	bl	8001bc8 <_close>
 8001cec:	002c      	movs	r4, r5
 8001cee:	0020      	movs	r0, r4
 8001cf0:	bd70      	pop	{r4, r5, r6, pc}
	...

08001cf4 <_swiopen>:
 8001cf4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001cf6:	000e      	movs	r6, r1
 8001cf8:	2500      	movs	r5, #0
 8001cfa:	4b2a      	ldr	r3, [pc, #168]	; (8001da4 <_swiopen+0xb0>)
 8001cfc:	b09b      	sub	sp, #108	; 0x6c
 8001cfe:	9001      	str	r0, [sp, #4]
 8001d00:	9302      	str	r3, [sp, #8]
 8001d02:	00eb      	lsls	r3, r5, #3
 8001d04:	9303      	str	r3, [sp, #12]
 8001d06:	9b02      	ldr	r3, [sp, #8]
 8001d08:	00ea      	lsls	r2, r5, #3
 8001d0a:	589b      	ldr	r3, [r3, r2]
 8001d0c:	3301      	adds	r3, #1
 8001d0e:	d00b      	beq.n	8001d28 <_swiopen+0x34>
 8001d10:	3501      	adds	r5, #1
 8001d12:	2d14      	cmp	r5, #20
 8001d14:	d1f5      	bne.n	8001d02 <_swiopen+0xe>
 8001d16:	f000 f93d 	bl	8001f94 <__errno>
 8001d1a:	2318      	movs	r3, #24
 8001d1c:	2501      	movs	r5, #1
 8001d1e:	6003      	str	r3, [r0, #0]
 8001d20:	426d      	negs	r5, r5
 8001d22:	0028      	movs	r0, r5
 8001d24:	b01b      	add	sp, #108	; 0x6c
 8001d26:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d28:	23a0      	movs	r3, #160	; 0xa0
 8001d2a:	0032      	movs	r2, r6
 8001d2c:	011b      	lsls	r3, r3, #4
 8001d2e:	401a      	ands	r2, r3
 8001d30:	af04      	add	r7, sp, #16
 8001d32:	429a      	cmp	r2, r3
 8001d34:	d109      	bne.n	8001d4a <_swiopen+0x56>
 8001d36:	0039      	movs	r1, r7
 8001d38:	9801      	ldr	r0, [sp, #4]
 8001d3a:	f7ff ffbc 	bl	8001cb6 <_stat>
 8001d3e:	3001      	adds	r0, #1
 8001d40:	d003      	beq.n	8001d4a <_swiopen+0x56>
 8001d42:	f000 f927 	bl	8001f94 <__errno>
 8001d46:	2311      	movs	r3, #17
 8001d48:	e7e8      	b.n	8001d1c <_swiopen+0x28>
 8001d4a:	2302      	movs	r3, #2
 8001d4c:	03f4      	lsls	r4, r6, #15
 8001d4e:	0fe4      	lsrs	r4, r4, #31
 8001d50:	421e      	tst	r6, r3
 8001d52:	d000      	beq.n	8001d56 <_swiopen+0x62>
 8001d54:	431c      	orrs	r4, r3
 8001d56:	4b14      	ldr	r3, [pc, #80]	; (8001da8 <_swiopen+0xb4>)
 8001d58:	421e      	tst	r6, r3
 8001d5a:	d001      	beq.n	8001d60 <_swiopen+0x6c>
 8001d5c:	2304      	movs	r3, #4
 8001d5e:	431c      	orrs	r4, r3
 8001d60:	2308      	movs	r3, #8
 8001d62:	421e      	tst	r6, r3
 8001d64:	d002      	beq.n	8001d6c <_swiopen+0x78>
 8001d66:	2204      	movs	r2, #4
 8001d68:	4394      	bics	r4, r2
 8001d6a:	431c      	orrs	r4, r3
 8001d6c:	9b01      	ldr	r3, [sp, #4]
 8001d6e:	0018      	movs	r0, r3
 8001d70:	9304      	str	r3, [sp, #16]
 8001d72:	f7fe fa3b 	bl	80001ec <strlen>
 8001d76:	607c      	str	r4, [r7, #4]
 8001d78:	60b8      	str	r0, [r7, #8]
 8001d7a:	2401      	movs	r4, #1
 8001d7c:	1c20      	adds	r0, r4, #0
 8001d7e:	1c39      	adds	r1, r7, #0
 8001d80:	beab      	bkpt	0x00ab
 8001d82:	1c04      	adds	r4, r0, #0
 8001d84:	2c00      	cmp	r4, #0
 8001d86:	db07      	blt.n	8001d98 <_swiopen+0xa4>
 8001d88:	00ea      	lsls	r2, r5, #3
 8001d8a:	9b02      	ldr	r3, [sp, #8]
 8001d8c:	4694      	mov	ip, r2
 8001d8e:	509c      	str	r4, [r3, r2]
 8001d90:	2200      	movs	r2, #0
 8001d92:	4463      	add	r3, ip
 8001d94:	605a      	str	r2, [r3, #4]
 8001d96:	e7c4      	b.n	8001d22 <_swiopen+0x2e>
 8001d98:	0020      	movs	r0, r4
 8001d9a:	f7ff fe5d 	bl	8001a58 <error>
 8001d9e:	0005      	movs	r5, r0
 8001da0:	e7bf      	b.n	8001d22 <_swiopen+0x2e>
 8001da2:	46c0      	nop			; (mov r8, r8)
 8001da4:	200001e4 	.word	0x200001e4
 8001da8:	00000601 	.word	0x00000601

08001dac <_get_semihosting_exts>:
 8001dac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001dae:	b085      	sub	sp, #20
 8001db0:	9000      	str	r0, [sp, #0]
 8001db2:	9101      	str	r1, [sp, #4]
 8001db4:	4826      	ldr	r0, [pc, #152]	; (8001e50 <_get_semihosting_exts+0xa4>)
 8001db6:	2100      	movs	r1, #0
 8001db8:	0015      	movs	r5, r2
 8001dba:	f7ff ff9b 	bl	8001cf4 <_swiopen>
 8001dbe:	0004      	movs	r4, r0
 8001dc0:	002a      	movs	r2, r5
 8001dc2:	2100      	movs	r1, #0
 8001dc4:	9800      	ldr	r0, [sp, #0]
 8001dc6:	f7fe fed3 	bl	8000b70 <memset>
 8001dca:	1c63      	adds	r3, r4, #1
 8001dcc:	d013      	beq.n	8001df6 <_get_semihosting_exts+0x4a>
 8001dce:	0020      	movs	r0, r4
 8001dd0:	f7ff fe28 	bl	8001a24 <findslot>
 8001dd4:	260c      	movs	r6, #12
 8001dd6:	0007      	movs	r7, r0
 8001dd8:	1c30      	adds	r0, r6, #0
 8001dda:	1c39      	adds	r1, r7, #0
 8001ddc:	beab      	bkpt	0x00ab
 8001dde:	1c06      	adds	r6, r0, #0
 8001de0:	0030      	movs	r0, r6
 8001de2:	f7ff fe47 	bl	8001a74 <checkerror>
 8001de6:	2803      	cmp	r0, #3
 8001de8:	dd02      	ble.n	8001df0 <_get_semihosting_exts+0x44>
 8001dea:	3803      	subs	r0, #3
 8001dec:	42a8      	cmp	r0, r5
 8001dee:	dc06      	bgt.n	8001dfe <_get_semihosting_exts+0x52>
 8001df0:	0020      	movs	r0, r4
 8001df2:	f7ff fee9 	bl	8001bc8 <_close>
 8001df6:	2001      	movs	r0, #1
 8001df8:	4240      	negs	r0, r0
 8001dfa:	b005      	add	sp, #20
 8001dfc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001dfe:	ae03      	add	r6, sp, #12
 8001e00:	2204      	movs	r2, #4
 8001e02:	0031      	movs	r1, r6
 8001e04:	0020      	movs	r0, r4
 8001e06:	f7ff fe4b 	bl	8001aa0 <_read>
 8001e0a:	2803      	cmp	r0, #3
 8001e0c:	ddf0      	ble.n	8001df0 <_get_semihosting_exts+0x44>
 8001e0e:	7833      	ldrb	r3, [r6, #0]
 8001e10:	2b53      	cmp	r3, #83	; 0x53
 8001e12:	d1ed      	bne.n	8001df0 <_get_semihosting_exts+0x44>
 8001e14:	7873      	ldrb	r3, [r6, #1]
 8001e16:	2b48      	cmp	r3, #72	; 0x48
 8001e18:	d1ea      	bne.n	8001df0 <_get_semihosting_exts+0x44>
 8001e1a:	78b3      	ldrb	r3, [r6, #2]
 8001e1c:	2b46      	cmp	r3, #70	; 0x46
 8001e1e:	d1e7      	bne.n	8001df0 <_get_semihosting_exts+0x44>
 8001e20:	78f3      	ldrb	r3, [r6, #3]
 8001e22:	2b42      	cmp	r3, #66	; 0x42
 8001e24:	d1e4      	bne.n	8001df0 <_get_semihosting_exts+0x44>
 8001e26:	2201      	movs	r2, #1
 8001e28:	0020      	movs	r0, r4
 8001e2a:	9901      	ldr	r1, [sp, #4]
 8001e2c:	f7ff fe52 	bl	8001ad4 <_swilseek>
 8001e30:	2800      	cmp	r0, #0
 8001e32:	dbdd      	blt.n	8001df0 <_get_semihosting_exts+0x44>
 8001e34:	002a      	movs	r2, r5
 8001e36:	9900      	ldr	r1, [sp, #0]
 8001e38:	0020      	movs	r0, r4
 8001e3a:	f7ff fe31 	bl	8001aa0 <_read>
 8001e3e:	0005      	movs	r5, r0
 8001e40:	0020      	movs	r0, r4
 8001e42:	f7ff fec1 	bl	8001bc8 <_close>
 8001e46:	0028      	movs	r0, r5
 8001e48:	f7ff fe14 	bl	8001a74 <checkerror>
 8001e4c:	e7d5      	b.n	8001dfa <_get_semihosting_exts+0x4e>
 8001e4e:	46c0      	nop			; (mov r8, r8)
 8001e50:	08002058 	.word	0x08002058

08001e54 <initialise_semihosting_exts>:
 8001e54:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001e56:	2401      	movs	r4, #1
 8001e58:	2100      	movs	r1, #0
 8001e5a:	4e09      	ldr	r6, [pc, #36]	; (8001e80 <initialise_semihosting_exts+0x2c>)
 8001e5c:	4d09      	ldr	r5, [pc, #36]	; (8001e84 <initialise_semihosting_exts+0x30>)
 8001e5e:	af01      	add	r7, sp, #4
 8001e60:	0022      	movs	r2, r4
 8001e62:	0038      	movs	r0, r7
 8001e64:	6031      	str	r1, [r6, #0]
 8001e66:	602c      	str	r4, [r5, #0]
 8001e68:	f7ff ffa0 	bl	8001dac <_get_semihosting_exts>
 8001e6c:	2800      	cmp	r0, #0
 8001e6e:	dd05      	ble.n	8001e7c <initialise_semihosting_exts+0x28>
 8001e70:	2202      	movs	r2, #2
 8001e72:	783b      	ldrb	r3, [r7, #0]
 8001e74:	401c      	ands	r4, r3
 8001e76:	4013      	ands	r3, r2
 8001e78:	6034      	str	r4, [r6, #0]
 8001e7a:	602b      	str	r3, [r5, #0]
 8001e7c:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8001e7e:	46c0      	nop			; (mov r8, r8)
 8001e80:	20000068 	.word	0x20000068
 8001e84:	20000064 	.word	0x20000064

08001e88 <_has_ext_stdout_stderr>:
 8001e88:	b510      	push	{r4, lr}
 8001e8a:	4c04      	ldr	r4, [pc, #16]	; (8001e9c <_has_ext_stdout_stderr+0x14>)
 8001e8c:	6823      	ldr	r3, [r4, #0]
 8001e8e:	2b00      	cmp	r3, #0
 8001e90:	da01      	bge.n	8001e96 <_has_ext_stdout_stderr+0xe>
 8001e92:	f7ff ffdf 	bl	8001e54 <initialise_semihosting_exts>
 8001e96:	6820      	ldr	r0, [r4, #0]
 8001e98:	bd10      	pop	{r4, pc}
 8001e9a:	46c0      	nop			; (mov r8, r8)
 8001e9c:	20000064 	.word	0x20000064

08001ea0 <initialise_monitor_handles>:
 8001ea0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001ea2:	4b28      	ldr	r3, [pc, #160]	; (8001f44 <initialise_monitor_handles+0xa4>)
 8001ea4:	b087      	sub	sp, #28
 8001ea6:	9303      	str	r3, [sp, #12]
 8001ea8:	2500      	movs	r5, #0
 8001eaa:	9300      	str	r3, [sp, #0]
 8001eac:	2303      	movs	r3, #3
 8001eae:	ac03      	add	r4, sp, #12
 8001eb0:	60a3      	str	r3, [r4, #8]
 8001eb2:	2601      	movs	r6, #1
 8001eb4:	6065      	str	r5, [r4, #4]
 8001eb6:	1c30      	adds	r0, r6, #0
 8001eb8:	1c21      	adds	r1, r4, #0
 8001eba:	beab      	bkpt	0x00ab
 8001ebc:	1c06      	adds	r6, r0, #0
 8001ebe:	2101      	movs	r1, #1
 8001ec0:	4b21      	ldr	r3, [pc, #132]	; (8001f48 <initialise_monitor_handles+0xa8>)
 8001ec2:	4249      	negs	r1, r1
 8001ec4:	9301      	str	r3, [sp, #4]
 8001ec6:	601e      	str	r6, [r3, #0]
 8001ec8:	002b      	movs	r3, r5
 8001eca:	4d20      	ldr	r5, [pc, #128]	; (8001f4c <initialise_monitor_handles+0xac>)
 8001ecc:	00da      	lsls	r2, r3, #3
 8001ece:	3301      	adds	r3, #1
 8001ed0:	50a9      	str	r1, [r5, r2]
 8001ed2:	2b14      	cmp	r3, #20
 8001ed4:	d1fa      	bne.n	8001ecc <initialise_monitor_handles+0x2c>
 8001ed6:	f7ff ffd7 	bl	8001e88 <_has_ext_stdout_stderr>
 8001eda:	2800      	cmp	r0, #0
 8001edc:	d018      	beq.n	8001f10 <initialise_monitor_handles+0x70>
 8001ede:	9b00      	ldr	r3, [sp, #0]
 8001ee0:	2601      	movs	r6, #1
 8001ee2:	9303      	str	r3, [sp, #12]
 8001ee4:	2303      	movs	r3, #3
 8001ee6:	60a3      	str	r3, [r4, #8]
 8001ee8:	3301      	adds	r3, #1
 8001eea:	6063      	str	r3, [r4, #4]
 8001eec:	1c30      	adds	r0, r6, #0
 8001eee:	1c21      	adds	r1, r4, #0
 8001ef0:	beab      	bkpt	0x00ab
 8001ef2:	1c07      	adds	r7, r0, #0
 8001ef4:	4b16      	ldr	r3, [pc, #88]	; (8001f50 <initialise_monitor_handles+0xb0>)
 8001ef6:	9a00      	ldr	r2, [sp, #0]
 8001ef8:	601f      	str	r7, [r3, #0]
 8001efa:	2303      	movs	r3, #3
 8001efc:	9203      	str	r2, [sp, #12]
 8001efe:	60a3      	str	r3, [r4, #8]
 8001f00:	3305      	adds	r3, #5
 8001f02:	6063      	str	r3, [r4, #4]
 8001f04:	1c30      	adds	r0, r6, #0
 8001f06:	1c21      	adds	r1, r4, #0
 8001f08:	beab      	bkpt	0x00ab
 8001f0a:	1c06      	adds	r6, r0, #0
 8001f0c:	4b11      	ldr	r3, [pc, #68]	; (8001f54 <initialise_monitor_handles+0xb4>)
 8001f0e:	601e      	str	r6, [r3, #0]
 8001f10:	4e10      	ldr	r6, [pc, #64]	; (8001f54 <initialise_monitor_handles+0xb4>)
 8001f12:	6833      	ldr	r3, [r6, #0]
 8001f14:	3301      	adds	r3, #1
 8001f16:	d102      	bne.n	8001f1e <initialise_monitor_handles+0x7e>
 8001f18:	4b0d      	ldr	r3, [pc, #52]	; (8001f50 <initialise_monitor_handles+0xb0>)
 8001f1a:	681b      	ldr	r3, [r3, #0]
 8001f1c:	6033      	str	r3, [r6, #0]
 8001f1e:	2400      	movs	r4, #0
 8001f20:	9b01      	ldr	r3, [sp, #4]
 8001f22:	606c      	str	r4, [r5, #4]
 8001f24:	681b      	ldr	r3, [r3, #0]
 8001f26:	602b      	str	r3, [r5, #0]
 8001f28:	f7ff ffae 	bl	8001e88 <_has_ext_stdout_stderr>
 8001f2c:	42a0      	cmp	r0, r4
 8001f2e:	d006      	beq.n	8001f3e <initialise_monitor_handles+0x9e>
 8001f30:	4b07      	ldr	r3, [pc, #28]	; (8001f50 <initialise_monitor_handles+0xb0>)
 8001f32:	60ec      	str	r4, [r5, #12]
 8001f34:	681b      	ldr	r3, [r3, #0]
 8001f36:	616c      	str	r4, [r5, #20]
 8001f38:	60ab      	str	r3, [r5, #8]
 8001f3a:	6833      	ldr	r3, [r6, #0]
 8001f3c:	612b      	str	r3, [r5, #16]
 8001f3e:	b007      	add	sp, #28
 8001f40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001f42:	46c0      	nop			; (mov r8, r8)
 8001f44:	0800206e 	.word	0x0800206e
 8001f48:	200001e0 	.word	0x200001e0
 8001f4c:	200001e4 	.word	0x200001e4
 8001f50:	200001dc 	.word	0x200001dc
 8001f54:	200001d8 	.word	0x200001d8

08001f58 <_isatty>:
 8001f58:	b570      	push	{r4, r5, r6, lr}
 8001f5a:	f7ff fd63 	bl	8001a24 <findslot>
 8001f5e:	2409      	movs	r4, #9
 8001f60:	1e05      	subs	r5, r0, #0
 8001f62:	d104      	bne.n	8001f6e <_isatty+0x16>
 8001f64:	f000 f816 	bl	8001f94 <__errno>
 8001f68:	6004      	str	r4, [r0, #0]
 8001f6a:	2000      	movs	r0, #0
 8001f6c:	bd70      	pop	{r4, r5, r6, pc}
 8001f6e:	1c20      	adds	r0, r4, #0
 8001f70:	1c29      	adds	r1, r5, #0
 8001f72:	beab      	bkpt	0x00ab
 8001f74:	1c04      	adds	r4, r0, #0
 8001f76:	0020      	movs	r0, r4
 8001f78:	2c01      	cmp	r4, #1
 8001f7a:	d0f7      	beq.n	8001f6c <_isatty+0x14>
 8001f7c:	f000 f80a 	bl	8001f94 <__errno>
 8001f80:	2513      	movs	r5, #19
 8001f82:	0004      	movs	r4, r0
 8001f84:	2600      	movs	r6, #0
 8001f86:	1c28      	adds	r0, r5, #0
 8001f88:	1c31      	adds	r1, r6, #0
 8001f8a:	beab      	bkpt	0x00ab
 8001f8c:	1c05      	adds	r5, r0, #0
 8001f8e:	6025      	str	r5, [r4, #0]
 8001f90:	e7eb      	b.n	8001f6a <_isatty+0x12>
	...

08001f94 <__errno>:
 8001f94:	4b01      	ldr	r3, [pc, #4]	; (8001f9c <__errno+0x8>)
 8001f96:	6818      	ldr	r0, [r3, #0]
 8001f98:	4770      	bx	lr
 8001f9a:	46c0      	nop			; (mov r8, r8)
 8001f9c:	20000010 	.word	0x20000010

08001fa0 <_init>:
 8001fa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001fa2:	46c0      	nop			; (mov r8, r8)
 8001fa4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001fa6:	bc08      	pop	{r3}
 8001fa8:	469e      	mov	lr, r3
 8001faa:	4770      	bx	lr

08001fac <_fini>:
 8001fac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001fae:	46c0      	nop			; (mov r8, r8)
 8001fb0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001fb2:	bc08      	pop	{r3}
 8001fb4:	469e      	mov	lr, r3
 8001fb6:	4770      	bx	lr
