
final.elf:     file format elf32-littlearm


Disassembly of section .text:

080000c0 <deregister_tm_clones>:
 80000c0:	4804      	ldr	r0, [pc, #16]	; (80000d4 <deregister_tm_clones+0x14>)
 80000c2:	4b05      	ldr	r3, [pc, #20]	; (80000d8 <deregister_tm_clones+0x18>)
 80000c4:	b510      	push	{r4, lr}
 80000c6:	4283      	cmp	r3, r0
 80000c8:	d003      	beq.n	80000d2 <deregister_tm_clones+0x12>
 80000ca:	4b04      	ldr	r3, [pc, #16]	; (80000dc <deregister_tm_clones+0x1c>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d000      	beq.n	80000d2 <deregister_tm_clones+0x12>
 80000d0:	4798      	blx	r3
 80000d2:	bd10      	pop	{r4, pc}
 80000d4:	20000000 	.word	0x20000000
 80000d8:	20000000 	.word	0x20000000
 80000dc:	00000000 	.word	0x00000000

080000e0 <register_tm_clones>:
 80000e0:	4806      	ldr	r0, [pc, #24]	; (80000fc <register_tm_clones+0x1c>)
 80000e2:	4907      	ldr	r1, [pc, #28]	; (8000100 <register_tm_clones+0x20>)
 80000e4:	1a09      	subs	r1, r1, r0
 80000e6:	108b      	asrs	r3, r1, #2
 80000e8:	0fc9      	lsrs	r1, r1, #31
 80000ea:	18c9      	adds	r1, r1, r3
 80000ec:	b510      	push	{r4, lr}
 80000ee:	1049      	asrs	r1, r1, #1
 80000f0:	d003      	beq.n	80000fa <register_tm_clones+0x1a>
 80000f2:	4b04      	ldr	r3, [pc, #16]	; (8000104 <register_tm_clones+0x24>)
 80000f4:	2b00      	cmp	r3, #0
 80000f6:	d000      	beq.n	80000fa <register_tm_clones+0x1a>
 80000f8:	4798      	blx	r3
 80000fa:	bd10      	pop	{r4, pc}
 80000fc:	20000000 	.word	0x20000000
 8000100:	20000000 	.word	0x20000000
 8000104:	00000000 	.word	0x00000000

08000108 <__do_global_dtors_aux>:
 8000108:	b510      	push	{r4, lr}
 800010a:	4c07      	ldr	r4, [pc, #28]	; (8000128 <__do_global_dtors_aux+0x20>)
 800010c:	7823      	ldrb	r3, [r4, #0]
 800010e:	2b00      	cmp	r3, #0
 8000110:	d109      	bne.n	8000126 <__do_global_dtors_aux+0x1e>
 8000112:	f7ff ffd5 	bl	80000c0 <deregister_tm_clones>
 8000116:	4b05      	ldr	r3, [pc, #20]	; (800012c <__do_global_dtors_aux+0x24>)
 8000118:	2b00      	cmp	r3, #0
 800011a:	d002      	beq.n	8000122 <__do_global_dtors_aux+0x1a>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x28>)
 800011e:	e000      	b.n	8000122 <__do_global_dtors_aux+0x1a>
 8000120:	bf00      	nop
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	20000000 	.word	0x20000000
 800012c:	00000000 	.word	0x00000000
 8000130:	08000378 	.word	0x08000378

08000134 <frame_dummy>:
 8000134:	4b05      	ldr	r3, [pc, #20]	; (800014c <frame_dummy+0x18>)
 8000136:	b510      	push	{r4, lr}
 8000138:	2b00      	cmp	r3, #0
 800013a:	d003      	beq.n	8000144 <frame_dummy+0x10>
 800013c:	4904      	ldr	r1, [pc, #16]	; (8000150 <frame_dummy+0x1c>)
 800013e:	4805      	ldr	r0, [pc, #20]	; (8000154 <frame_dummy+0x20>)
 8000140:	e000      	b.n	8000144 <frame_dummy+0x10>
 8000142:	bf00      	nop
 8000144:	f7ff ffcc 	bl	80000e0 <register_tm_clones>
 8000148:	bd10      	pop	{r4, pc}
 800014a:	46c0      	nop			; (mov r8, r8)
 800014c:	00000000 	.word	0x00000000
 8000150:	20000004 	.word	0x20000004
 8000154:	08000378 	.word	0x08000378

08000158 <main>:
#include "stm32f0xx.h"
#include "main.h"
#include "timer.h"

int main( void )
{   
 8000158:	b580      	push	{r7, lr}
 800015a:	af00      	add	r7, sp, #0
    /* initialize TIM15 in output compare mode */
    TIM15_Init();
 800015c:	f000 f832 	bl	80001c4 <TIM15_Init>

    while( 1 )
 8000160:	46c0      	nop			; (mov r8, r8)
 8000162:	e7fd      	b.n	8000160 <main+0x8>

08000164 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000164:	b580      	push	{r7, lr}
 8000166:	af00      	add	r7, sp, #0
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 8000168:	46c0      	nop			; (mov r8, r8)
 800016a:	46bd      	mov	sp, r7
 800016c:	bd80      	pop	{r7, pc}
	...

08000170 <Reset_Handler>:
 8000170:	480d      	ldr	r0, [pc, #52]	; (80001a8 <LoopForever+0x2>)
 8000172:	4685      	mov	sp, r0
 8000174:	480d      	ldr	r0, [pc, #52]	; (80001ac <LoopForever+0x6>)
 8000176:	490e      	ldr	r1, [pc, #56]	; (80001b0 <LoopForever+0xa>)
 8000178:	4a0e      	ldr	r2, [pc, #56]	; (80001b4 <LoopForever+0xe>)
 800017a:	2300      	movs	r3, #0
 800017c:	e002      	b.n	8000184 <LoopCopyDataInit>

0800017e <CopyDataInit>:
 800017e:	58d4      	ldr	r4, [r2, r3]
 8000180:	50c4      	str	r4, [r0, r3]
 8000182:	3304      	adds	r3, #4

08000184 <LoopCopyDataInit>:
 8000184:	18c4      	adds	r4, r0, r3
 8000186:	428c      	cmp	r4, r1
 8000188:	d3f9      	bcc.n	800017e <CopyDataInit>
 800018a:	4a0b      	ldr	r2, [pc, #44]	; (80001b8 <LoopForever+0x12>)
 800018c:	4c0b      	ldr	r4, [pc, #44]	; (80001bc <LoopForever+0x16>)
 800018e:	2300      	movs	r3, #0
 8000190:	e001      	b.n	8000196 <LoopFillZerobss>

08000192 <FillZerobss>:
 8000192:	6013      	str	r3, [r2, #0]
 8000194:	3204      	adds	r2, #4

08000196 <LoopFillZerobss>:
 8000196:	42a2      	cmp	r2, r4
 8000198:	d3fb      	bcc.n	8000192 <FillZerobss>
 800019a:	f7ff ffe3 	bl	8000164 <SystemInit>
 800019e:	f000 f8c7 	bl	8000330 <__libc_init_array>
 80001a2:	f7ff ffd9 	bl	8000158 <main>

080001a6 <LoopForever>:
 80001a6:	e7fe      	b.n	80001a6 <LoopForever>
 80001a8:	20004000 	.word	0x20004000
 80001ac:	20000000 	.word	0x20000000
 80001b0:	20000000 	.word	0x20000000
 80001b4:	08000398 	.word	0x08000398
 80001b8:	20000000 	.word	0x20000000
 80001bc:	2000001c 	.word	0x2000001c

080001c0 <ADC1_IRQHandler>:
 80001c0:	e7fe      	b.n	80001c0 <ADC1_IRQHandler>
	...

080001c4 <TIM15_Init>:
        TIM3->SR &= ~TIM_SR_UIF;
    }
}

void TIM15_Init( void )
{   
 80001c4:	b580      	push	{r7, lr}
 80001c6:	af00      	add	r7, sp, #0
    /* enable GPIOB clock */
    GPIOB_CLK_ENBL();
 80001c8:	4b4f      	ldr	r3, [pc, #316]	; (8000308 <TIM15_Init+0x144>)
 80001ca:	695a      	ldr	r2, [r3, #20]
 80001cc:	4b4e      	ldr	r3, [pc, #312]	; (8000308 <TIM15_Init+0x144>)
 80001ce:	2180      	movs	r1, #128	; 0x80
 80001d0:	02c9      	lsls	r1, r1, #11
 80001d2:	430a      	orrs	r2, r1
 80001d4:	615a      	str	r2, [r3, #20]

    /* GPIOB14 (TIM15_CH1) in alternate mode */
    GPIOB->MODER |=  GPIO_MODER_MODER14_1;
 80001d6:	4b4d      	ldr	r3, [pc, #308]	; (800030c <TIM15_Init+0x148>)
 80001d8:	681a      	ldr	r2, [r3, #0]
 80001da:	4b4c      	ldr	r3, [pc, #304]	; (800030c <TIM15_Init+0x148>)
 80001dc:	2180      	movs	r1, #128	; 0x80
 80001de:	0589      	lsls	r1, r1, #22
 80001e0:	430a      	orrs	r2, r1
 80001e2:	601a      	str	r2, [r3, #0]
    GPIOB->MODER &= ~GPIO_MODER_MODER14_0;
 80001e4:	4b49      	ldr	r3, [pc, #292]	; (800030c <TIM15_Init+0x148>)
 80001e6:	681a      	ldr	r2, [r3, #0]
 80001e8:	4b48      	ldr	r3, [pc, #288]	; (800030c <TIM15_Init+0x148>)
 80001ea:	4949      	ldr	r1, [pc, #292]	; (8000310 <TIM15_Init+0x14c>)
 80001ec:	400a      	ands	r2, r1
 80001ee:	601a      	str	r2, [r3, #0]

    /* GPIOB14 as push-pull output */
    GPIOB->OTYPER &= ~GPIO_OTYPER_OT_14;
 80001f0:	4b46      	ldr	r3, [pc, #280]	; (800030c <TIM15_Init+0x148>)
 80001f2:	685a      	ldr	r2, [r3, #4]
 80001f4:	4b45      	ldr	r3, [pc, #276]	; (800030c <TIM15_Init+0x148>)
 80001f6:	4947      	ldr	r1, [pc, #284]	; (8000314 <TIM15_Init+0x150>)
 80001f8:	400a      	ands	r2, r1
 80001fa:	605a      	str	r2, [r3, #4]

    /* GPIOB14 with pull-down */
    GPIOB->PUPDR |=  GPIO_PUPDR_PUPDR14_1;
 80001fc:	4b43      	ldr	r3, [pc, #268]	; (800030c <TIM15_Init+0x148>)
 80001fe:	68da      	ldr	r2, [r3, #12]
 8000200:	4b42      	ldr	r3, [pc, #264]	; (800030c <TIM15_Init+0x148>)
 8000202:	2180      	movs	r1, #128	; 0x80
 8000204:	0589      	lsls	r1, r1, #22
 8000206:	430a      	orrs	r2, r1
 8000208:	60da      	str	r2, [r3, #12]
    GPIOB->PUPDR &= ~GPIO_PUPDR_PUPDR14_0;
 800020a:	4b40      	ldr	r3, [pc, #256]	; (800030c <TIM15_Init+0x148>)
 800020c:	68da      	ldr	r2, [r3, #12]
 800020e:	4b3f      	ldr	r3, [pc, #252]	; (800030c <TIM15_Init+0x148>)
 8000210:	493f      	ldr	r1, [pc, #252]	; (8000310 <TIM15_Init+0x14c>)
 8000212:	400a      	ands	r2, r1
 8000214:	60da      	str	r2, [r3, #12]

    /* GPIOB14 as AF01 (TIM15_CH1) */
    GPIOB->AFR[ 1 ] &= ~GPIO_AFRH_AFSEL14_3;
 8000216:	4b3d      	ldr	r3, [pc, #244]	; (800030c <TIM15_Init+0x148>)
 8000218:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800021a:	4b3c      	ldr	r3, [pc, #240]	; (800030c <TIM15_Init+0x148>)
 800021c:	493e      	ldr	r1, [pc, #248]	; (8000318 <TIM15_Init+0x154>)
 800021e:	400a      	ands	r2, r1
 8000220:	625a      	str	r2, [r3, #36]	; 0x24
    GPIOB->AFR[ 1 ] &= ~GPIO_AFRH_AFSEL14_2;
 8000222:	4b3a      	ldr	r3, [pc, #232]	; (800030c <TIM15_Init+0x148>)
 8000224:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000226:	4b39      	ldr	r3, [pc, #228]	; (800030c <TIM15_Init+0x148>)
 8000228:	493c      	ldr	r1, [pc, #240]	; (800031c <TIM15_Init+0x158>)
 800022a:	400a      	ands	r2, r1
 800022c:	625a      	str	r2, [r3, #36]	; 0x24
    GPIOB->AFR[ 1 ] &= ~GPIO_AFRH_AFSEL14_1;
 800022e:	4b37      	ldr	r3, [pc, #220]	; (800030c <TIM15_Init+0x148>)
 8000230:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000232:	4b36      	ldr	r3, [pc, #216]	; (800030c <TIM15_Init+0x148>)
 8000234:	493a      	ldr	r1, [pc, #232]	; (8000320 <TIM15_Init+0x15c>)
 8000236:	400a      	ands	r2, r1
 8000238:	625a      	str	r2, [r3, #36]	; 0x24
    GPIOB->AFR[ 1 ] |=  GPIO_AFRH_AFSEL14_0;
 800023a:	4b34      	ldr	r3, [pc, #208]	; (800030c <TIM15_Init+0x148>)
 800023c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800023e:	4b33      	ldr	r3, [pc, #204]	; (800030c <TIM15_Init+0x148>)
 8000240:	2180      	movs	r1, #128	; 0x80
 8000242:	0449      	lsls	r1, r1, #17
 8000244:	430a      	orrs	r2, r1
 8000246:	625a      	str	r2, [r3, #36]	; 0x24

    /* enable TIM15 clock access */
    TIM15_CLK_ENBL();
 8000248:	4b2f      	ldr	r3, [pc, #188]	; (8000308 <TIM15_Init+0x144>)
 800024a:	699a      	ldr	r2, [r3, #24]
 800024c:	4b2e      	ldr	r3, [pc, #184]	; (8000308 <TIM15_Init+0x144>)
 800024e:	2180      	movs	r1, #128	; 0x80
 8000250:	0249      	lsls	r1, r1, #9
 8000252:	430a      	orrs	r2, r1
 8000254:	619a      	str	r2, [r3, #24]

    /* NOTE: TIM15 is a downcounter */

    /* TIM15 channel 1 configured as output compare */
    TIM15->CCMR1 &= ~TIM_CCMR1_CC1S_1;
 8000256:	4b33      	ldr	r3, [pc, #204]	; (8000324 <TIM15_Init+0x160>)
 8000258:	699a      	ldr	r2, [r3, #24]
 800025a:	4b32      	ldr	r3, [pc, #200]	; (8000324 <TIM15_Init+0x160>)
 800025c:	2102      	movs	r1, #2
 800025e:	438a      	bics	r2, r1
 8000260:	619a      	str	r2, [r3, #24]
    TIM15->CCMR1 &= ~TIM_CCMR1_CC1S_0;
 8000262:	4b30      	ldr	r3, [pc, #192]	; (8000324 <TIM15_Init+0x160>)
 8000264:	699a      	ldr	r2, [r3, #24]
 8000266:	4b2f      	ldr	r3, [pc, #188]	; (8000324 <TIM15_Init+0x160>)
 8000268:	2101      	movs	r1, #1
 800026a:	438a      	bics	r2, r1
 800026c:	619a      	str	r2, [r3, #24]

    /* TIM15 output compare in toggle mode  */
    TIM15->CCMR1 &= ~TIM_CCMR1_OC1M_2;
 800026e:	4b2d      	ldr	r3, [pc, #180]	; (8000324 <TIM15_Init+0x160>)
 8000270:	699a      	ldr	r2, [r3, #24]
 8000272:	4b2c      	ldr	r3, [pc, #176]	; (8000324 <TIM15_Init+0x160>)
 8000274:	2140      	movs	r1, #64	; 0x40
 8000276:	438a      	bics	r2, r1
 8000278:	619a      	str	r2, [r3, #24]
    TIM15->CCMR1 |=  TIM_CCMR1_OC1M_1;
 800027a:	4b2a      	ldr	r3, [pc, #168]	; (8000324 <TIM15_Init+0x160>)
 800027c:	699a      	ldr	r2, [r3, #24]
 800027e:	4b29      	ldr	r3, [pc, #164]	; (8000324 <TIM15_Init+0x160>)
 8000280:	2120      	movs	r1, #32
 8000282:	430a      	orrs	r2, r1
 8000284:	619a      	str	r2, [r3, #24]
    TIM15->CCMR1 |=  TIM_CCMR1_OC1M_0;
 8000286:	4b27      	ldr	r3, [pc, #156]	; (8000324 <TIM15_Init+0x160>)
 8000288:	699a      	ldr	r2, [r3, #24]
 800028a:	4b26      	ldr	r3, [pc, #152]	; (8000324 <TIM15_Init+0x160>)
 800028c:	2110      	movs	r1, #16
 800028e:	430a      	orrs	r2, r1
 8000290:	619a      	str	r2, [r3, #24]

    /* TIM15 compare channel 1 active high */
    TIM15->CCER &= ~TIM_CCER_CC1P;
 8000292:	4b24      	ldr	r3, [pc, #144]	; (8000324 <TIM15_Init+0x160>)
 8000294:	6a1a      	ldr	r2, [r3, #32]
 8000296:	4b23      	ldr	r3, [pc, #140]	; (8000324 <TIM15_Init+0x160>)
 8000298:	2102      	movs	r1, #2
 800029a:	438a      	bics	r2, r1
 800029c:	621a      	str	r2, [r3, #32]

    /* TIM15 auto-reload preload enabled */
    TIM15->CR1 |= TIM_CR1_ARPE;
 800029e:	4b21      	ldr	r3, [pc, #132]	; (8000324 <TIM15_Init+0x160>)
 80002a0:	681a      	ldr	r2, [r3, #0]
 80002a2:	4b20      	ldr	r3, [pc, #128]	; (8000324 <TIM15_Init+0x160>)
 80002a4:	2180      	movs	r1, #128	; 0x80
 80002a6:	430a      	orrs	r2, r1
 80002a8:	601a      	str	r2, [r3, #0]

    /* TIM15 compare preloaded control disabled.
       CC1E, CC1NE (not implemented) and OC1M bits are preloaded */
    TIM15->CR2 &= ~TIM_CR2_CCPC;
 80002aa:	4b1e      	ldr	r3, [pc, #120]	; (8000324 <TIM15_Init+0x160>)
 80002ac:	685a      	ldr	r2, [r3, #4]
 80002ae:	4b1d      	ldr	r3, [pc, #116]	; (8000324 <TIM15_Init+0x160>)
 80002b0:	2101      	movs	r1, #1
 80002b2:	438a      	bics	r2, r1
 80002b4:	605a      	str	r2, [r3, #4]

    /* TIM15 UEV (update event) generation enabled */
    TIM15->CR1 &= ~TIM_CR1_UDIS;
 80002b6:	4b1b      	ldr	r3, [pc, #108]	; (8000324 <TIM15_Init+0x160>)
 80002b8:	681a      	ldr	r2, [r3, #0]
 80002ba:	4b1a      	ldr	r3, [pc, #104]	; (8000324 <TIM15_Init+0x160>)
 80002bc:	2102      	movs	r1, #2
 80002be:	438a      	bics	r2, r1
 80002c0:	601a      	str	r2, [r3, #0]

    /* TIM15 repetition counter set to 0.
       Each time this counter reaches zero an update event (UEV) is generated.
       This counter decrements by one every time a timebase of TIM15 has passed */
    TIM15->RCR = 0x00U;
 80002c2:	4b18      	ldr	r3, [pc, #96]	; (8000324 <TIM15_Init+0x160>)
 80002c4:	2200      	movs	r2, #0
 80002c6:	631a      	str	r2, [r3, #48]	; 0x30

    /* TIM15 prescaler.
       In order to generate a TIM15_period = 1ms:
       PSC = (1ms x fck_psc) - 1
       with fck_psc = 8MHz */
    TIM15->PSC = 0x1F3FU;
 80002c8:	4b16      	ldr	r3, [pc, #88]	; (8000324 <TIM15_Init+0x160>)
 80002ca:	4a17      	ldr	r2, [pc, #92]	; (8000328 <TIM15_Init+0x164>)
 80002cc:	629a      	str	r2, [r3, #40]	; 0x28

    /* TIM15 auto-reload register.
       In order to generate a timebase = 1 second:
       AUTORELOAD = (1s / TIM15_period) - 1
       with TIM15_period = 1ms */
    TIM15->ARR = 0x03E7U;
 80002ce:	4b15      	ldr	r3, [pc, #84]	; (8000324 <TIM15_Init+0x160>)
 80002d0:	4a16      	ldr	r2, [pc, #88]	; (800032c <TIM15_Init+0x168>)
 80002d2:	62da      	str	r2, [r3, #44]	; 0x2c

    /* TIM15 counter cleared */
    TIM15->CNT = 0x00U;
 80002d4:	4b13      	ldr	r3, [pc, #76]	; (8000324 <TIM15_Init+0x160>)
 80002d6:	2200      	movs	r2, #0
 80002d8:	625a      	str	r2, [r3, #36]	; 0x24

    /* TIM15 compare output channel 1 enabled */
    TIM15->CCER |= TIM_CCER_CC1E;
 80002da:	4b12      	ldr	r3, [pc, #72]	; (8000324 <TIM15_Init+0x160>)
 80002dc:	6a1a      	ldr	r2, [r3, #32]
 80002de:	4b11      	ldr	r3, [pc, #68]	; (8000324 <TIM15_Init+0x160>)
 80002e0:	2101      	movs	r1, #1
 80002e2:	430a      	orrs	r2, r1
 80002e4:	621a      	str	r2, [r3, #32]

    /* TIM15 output compare enabled */
    TIM15->BDTR |= TIM_BDTR_MOE;
 80002e6:	4b0f      	ldr	r3, [pc, #60]	; (8000324 <TIM15_Init+0x160>)
 80002e8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80002ea:	4b0e      	ldr	r3, [pc, #56]	; (8000324 <TIM15_Init+0x160>)
 80002ec:	2180      	movs	r1, #128	; 0x80
 80002ee:	0209      	lsls	r1, r1, #8
 80002f0:	430a      	orrs	r2, r1
 80002f2:	645a      	str	r2, [r3, #68]	; 0x44

    /* enable TIM15 */
    TIM15->CR1 |= TIM_CR1_CEN;
 80002f4:	4b0b      	ldr	r3, [pc, #44]	; (8000324 <TIM15_Init+0x160>)
 80002f6:	681a      	ldr	r2, [r3, #0]
 80002f8:	4b0a      	ldr	r3, [pc, #40]	; (8000324 <TIM15_Init+0x160>)
 80002fa:	2101      	movs	r1, #1
 80002fc:	430a      	orrs	r2, r1
 80002fe:	601a      	str	r2, [r3, #0]
}
 8000300:	46c0      	nop			; (mov r8, r8)
 8000302:	46bd      	mov	sp, r7
 8000304:	bd80      	pop	{r7, pc}
 8000306:	46c0      	nop			; (mov r8, r8)
 8000308:	40021000 	.word	0x40021000
 800030c:	48000400 	.word	0x48000400
 8000310:	efffffff 	.word	0xefffffff
 8000314:	ffffbfff 	.word	0xffffbfff
 8000318:	f7ffffff 	.word	0xf7ffffff
 800031c:	fbffffff 	.word	0xfbffffff
 8000320:	fdffffff 	.word	0xfdffffff
 8000324:	40014000 	.word	0x40014000
 8000328:	00001f3f 	.word	0x00001f3f
 800032c:	000003e7 	.word	0x000003e7

08000330 <__libc_init_array>:
 8000330:	b570      	push	{r4, r5, r6, lr}
 8000332:	2600      	movs	r6, #0
 8000334:	4c0c      	ldr	r4, [pc, #48]	; (8000368 <__libc_init_array+0x38>)
 8000336:	4d0d      	ldr	r5, [pc, #52]	; (800036c <__libc_init_array+0x3c>)
 8000338:	1b64      	subs	r4, r4, r5
 800033a:	10a4      	asrs	r4, r4, #2
 800033c:	42a6      	cmp	r6, r4
 800033e:	d109      	bne.n	8000354 <__libc_init_array+0x24>
 8000340:	2600      	movs	r6, #0
 8000342:	f000 f819 	bl	8000378 <_init>
 8000346:	4c0a      	ldr	r4, [pc, #40]	; (8000370 <__libc_init_array+0x40>)
 8000348:	4d0a      	ldr	r5, [pc, #40]	; (8000374 <__libc_init_array+0x44>)
 800034a:	1b64      	subs	r4, r4, r5
 800034c:	10a4      	asrs	r4, r4, #2
 800034e:	42a6      	cmp	r6, r4
 8000350:	d105      	bne.n	800035e <__libc_init_array+0x2e>
 8000352:	bd70      	pop	{r4, r5, r6, pc}
 8000354:	00b3      	lsls	r3, r6, #2
 8000356:	58eb      	ldr	r3, [r5, r3]
 8000358:	4798      	blx	r3
 800035a:	3601      	adds	r6, #1
 800035c:	e7ee      	b.n	800033c <__libc_init_array+0xc>
 800035e:	00b3      	lsls	r3, r6, #2
 8000360:	58eb      	ldr	r3, [r5, r3]
 8000362:	4798      	blx	r3
 8000364:	3601      	adds	r6, #1
 8000366:	e7f2      	b.n	800034e <__libc_init_array+0x1e>
 8000368:	08000390 	.word	0x08000390
 800036c:	08000390 	.word	0x08000390
 8000370:	08000394 	.word	0x08000394
 8000374:	08000390 	.word	0x08000390

08000378 <_init>:
 8000378:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800037a:	46c0      	nop			; (mov r8, r8)
 800037c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800037e:	bc08      	pop	{r3}
 8000380:	469e      	mov	lr, r3
 8000382:	4770      	bx	lr

08000384 <_fini>:
 8000384:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000386:	46c0      	nop			; (mov r8, r8)
 8000388:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800038a:	bc08      	pop	{r3}
 800038c:	469e      	mov	lr, r3
 800038e:	4770      	bx	lr
